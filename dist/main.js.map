{"version":3,"sources":["webpack://cnui/./src/canvas/canvas.js","webpack://cnui/./src/canvas/component.js","webpack://cnui/./src/canvas/connection.js","webpack://cnui/./src/canvas/menu.js","webpack://cnui/./src/canvas/position.js","webpack://cnui/./src/canvas/socket.js","webpack://cnui/./src/components/cnode.js","webpack://cnui/./src/components/cnodescanvas.js","webpack://cnui/./src/components/cnodesmenu.js","webpack://cnui/./src/components/cnodessocket.js","webpack://cnui/./src/components/input.js","webpack://cnui/./src/components/next.js","webpack://cnui/./src/components/output.js","webpack://cnui/./src/components/prev.js","webpack://cnui/./src/components/theme.js","webpack://cnui/./src/connections/io_connection.js","webpack://cnui/./src/connections/prevnext_connection.js","webpack://cnui/./src/index.js","webpack://cnui/../cnodes/cnodes.js","webpack://cnui/../cnodes/lib/core/enter.js","webpack://cnui/../cnodes/lib/core/env.js","webpack://cnui/../cnodes/lib/core/exit.js","webpack://cnui/../cnodes/lib/core/node.js","webpack://cnui/../cnodes/lib/core/program.js","webpack://cnui/../cnodes/lib/core/socket.js","webpack://cnui/../cnodes/lib/core/type.js","webpack://cnui/../cnodes/lib/nodes/array/apush.js","webpack://cnui/../cnodes/lib/nodes/array/faconst.js","webpack://cnui/../cnodes/lib/nodes/array/faget.js","webpack://cnui/../cnodes/lib/nodes/array/falength.js","webpack://cnui/../cnodes/lib/nodes/array/famake.js","webpack://cnui/../cnodes/lib/nodes/bool/fcompare.js","webpack://cnui/../cnodes/lib/nodes/bool/fequal.js","webpack://cnui/../cnodes/lib/nodes/bool/fgt.js","webpack://cnui/../cnodes/lib/nodes/bool/fgte.js","webpack://cnui/../cnodes/lib/nodes/bool/flt.js","webpack://cnui/../cnodes/lib/nodes/bool/flte.js","webpack://cnui/../cnodes/lib/nodes/bool/fnotequal.js","webpack://cnui/../cnodes/lib/nodes/call.js","webpack://cnui/../cnodes/lib/nodes/console.js","webpack://cnui/../cnodes/lib/nodes/fgetvar.js","webpack://cnui/../cnodes/lib/nodes/fif.js","webpack://cnui/../cnodes/lib/nodes/for.js","webpack://cnui/../cnodes/lib/nodes/getvar.js","webpack://cnui/../cnodes/lib/nodes/if.js","webpack://cnui/../cnodes/lib/nodes/math/fadd.js","webpack://cnui/../cnodes/lib/nodes/math/fdiv.js","webpack://cnui/../cnodes/lib/nodes/math/fmod.js","webpack://cnui/../cnodes/lib/nodes/math/fmul.js","webpack://cnui/../cnodes/lib/nodes/math/fnconst.js","webpack://cnui/../cnodes/lib/nodes/math/fsqrt.js","webpack://cnui/../cnodes/lib/nodes/object/fobreak.js","webpack://cnui/../cnodes/lib/nodes/object/fomake.js","webpack://cnui/../cnodes/lib/nodes/setvar.js","webpack://cnui/../cnodes/lib/nodes/string/fconcat.js","webpack://cnui/../cnodes/lib/nodes/string/fsconst.js","webpack://cnui/../cnodes/lib/nodes/while.js","webpack://cnui/webpack/bootstrap","webpack://cnui/webpack/runtime/define property getters","webpack://cnui/webpack/runtime/hasOwnProperty shorthand","webpack://cnui/webpack/runtime/make namespace object","webpack://cnui/webpack/startup"],"names":["Canvas","el","document","createElementNS","style","width","height","appendChild","Theme","self","window","addEventListener","e","cancelContextMenu","clientX","clientY","p","createSVGPoint","x","y","pSVG","matrixTransform","getScreenCTM","inverse","onlySockets","pointedEl","elementFromPoint","componentRef","SocketComponent","parentElement","connection","push","canvas","connectionEl","source","updateSVGElement","target","destroy","filter","c","removeChild","socket1","socket2","connections","findIndex","component","componentEl","components","s","getConnectionsFor","removeConnection","socket","length","removeComponent","removeAllConnections","removeAllComponents","items","Error","contextMenuComponent","val","setAttribute","clientWidth","clientHeight","clientToSvgPoint","zoomFactor","zoom","deltaY","newWidth","newHeight","newLeft","newTop","stopPropagation","button","setPointerCapture","pointerId","releasePointerCapture","movePoint","xDiff","yDiff","preventDefault","componentFromPosition","getCanvasContextMenuItems","getContextMenuItems","showContextMenu","Component","Position","createElement","moveable","pos","absPos","updateAllConnections","parent","svgEl","forEach","parentPos","add","Connection","MenuItem","text","callback","Menu","setup","addComponent","dragElement","onPointerDown","onPointerUp","onPointerMove","connectionsEl","hasSingleConnection","isConnected","connectionStarted","peerComponent","getSinglePeerComponent","con","connectingSocketComponent","connectionDone","connectionEndedOutOfSocket","pointedComponent","canAcceptPeerSocket","connectionMoving","invalid","sourcePoint","targetPoint","currentPeerSocketComponent","socketComp","CnodeComponent","node","__comp","program","addNode","updateSubcomponents","nodeEl","innerHTML","name","functional","signRadius","posY","prev","nComp","PrevSocketComponent","nexts","next","NextSocketComponent","outputs","output","OutputSocketComponent","inputs","input","InputSocketComponent","meta","Program","pushProgram","canAddInput","addInput","canAddOutput","addOutput","comp","conn","removable","removeNode","leftSocketsHeight","rightSocketsHeight","CnodesCanvas","defsEl","process","console","log","Env","canPopProgram","popProgram","cat","nodeDef","n","creatable","category","menuCallback","CnodesMenu","show","removeAll","nodes","peers","peer","alreadyConnected","PrevNextConnection","inp","IOConnection","outp","setTimeout","unshift","shift","importCnodesProgram","focus","createMenuItemsElements","menuEl","textInputElem","getAttribute","value","keyCode","filteredElements","getBoundingClientRect","left","top","itemResult","itemEl","itemTextEl","splice","entries","i","item","itemX","itemY","itemWidth","itemHeight","result","filterElems","idx","toUpperCase","includes","searchFilter","CnodesSocketComponent","getRegisteredPossiblePeers","tempConnectionEl","cpXDistance","Math","max","abs","cp1","getSourcePointDirection","cp2","textInputNameElem","canEditName","textInputValueElem","inputElem","OutputSocket","out","disconnect","canRemoveInput","removeInput","labelElem","prevElem","PrevSocket","textOutputNameElem","outputElem","InputSocket","conns","canRemoveOutput","removeOutput","NextSocket","defaultLight","addConnection","connect","elId","getElementById","Enter","Types","evaluateInputs","type","getFlowResult","Node","enterNode","Map","registerNode","callNode","consoleNode","fgetvarNode","forNode","getvarNode","ifNode","fifNode","setvarNode","whileNode","exitNode","fsconstNode","fconcatNode","fnconstNode","faddNode","fdivNode","fmodNode","fmulNode","fsqrtNode","fequalNode","fgtNode","fgteNode","fltNode","flteNode","fnotequalNode","apushNode","faconstNode","famakeNode","fagetNode","falengthNode","fomakeNode","fobreakNode","factory","set","categoryMap","Array","from","values","element","keys","registrations","entry","reg","get","exp","id","version","lastNodeIndex","lastSocketIndex","Socket","enter","exit","nodeExp","undefined","map","pushConnection","sourceNode","sourceSocket","targetNode","targetSocket","connectionExp","data","nodeData","getInstance","inpData","outpData","nextData","find","connectionData","o","Exit","Result","lastNodeIdIndex","evaluate","disconnectAllSockets","processFrom","currentNode","lastSocketIdIndex","ValueSocket","NUMBER","index","FlowSocket","STRING","BOOLEAN","OBJECT","ARRAY","ANY","APush","arr","isArray","FAConst","JSON","parse","error","FAGet","parseInt","FALength","FAMake","Comparision","EQUAL","GT","GTE","LT","LTE","NOT_EQUAL","FCompare","comparision","val1","val2","ret","fcompareNode","FEqual","FGT","FGTE","FLT","FLTE","FNotEqual","Call","prevCurrentNode","Console","FGetvar","varName","vars","FIf","For","Getvar","If","flow","FAdd","sum","parseFloat","FDiv","FMod","FMul","mul","FNConst","FSqrt","sqrt","FOBreak","FOMake","obj","reduce","acc","is","Setvar","varVal","FConcat","res","toString","FSConst","While"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"../components/theme\";\nimport { Component } from \"./component\";\nimport { Connection } from \"./connection\";\nimport { SocketComponent } from \"./socket\";\n\n/**\n * This is the main Canvas class. This class implement a general purpose canvas\n * that can manage nodes, components, sockets (a special subset of components) and connections\n * between sockets. The canvas is able to zoom and pan itself as well as to move\n * components. Components are organized in a hierarchical way, so that moving a component\n * will move all its subcomponents, including sockets. Sockets are (sub)components\n * that can be connected through connections to other sockets.\n * The class use SVG elements to render all elements.\n */\nexport class Canvas {\n  /** The main svg element */\n  #svgEl = null;\n\n  /** A group under the main svg element to store connections */\n  #connectionsEl = null;\n\n  /** The current SVG box view left coord */\n  #vbX = 0;\n\n  /** The current SVG box view top coord */\n  #vbY = 0;\n\n  /** The current SVG box view width */\n  #vbWidth = 100;\n\n  /** The current SVG box view height */\n  #vbHeight = 100;\n\n  /**\n   * Define the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  #minVBSize = 10;\n\n  /**\n   * Define the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  #maxVBSize = 50000;\n\n  /** The user is dragging the canvas backgorund? */\n  #dragging = false;\n\n  /** The point in which the drag was started */\n  #startDragPos;\n\n  /** The component for the contextual menu */\n  #contextMenuComponent = null;\n\n  /** The list of components in the canvas */\n  #components = [];\n\n  /** The list of connections between components in the canvas */\n  #connections = [];\n\n  /**\n   * The constructor of the Canvas object. Initializes the SVG element,\n   * set up all listeners to manage panning, zooming and selection.\n   * @param {HTMLElement} el The parent element in which create the SVG element\n   */\n  constructor(el) {\n    // Create the main SVG element\n    this.#svgEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n    this.#svgEl.style.width = \"100%\";\n    this.#svgEl.style.height = \"100%\";\n    el.appendChild(this.#svgEl);\n\n    // Background color\n    this.#svgEl.style[\"background-color\"] = Theme.current.CANVAS_BACKGROUND_COLOR;\n\n    // Now create a \"g\" element that will be the parent of all connections. This is\n    // important to guarantee that connections will be always behind components\n    this.#connectionsEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    this.#svgEl.appendChild(this.#connectionsEl);\n\n    this.#adaptSVGSize();\n\n    // Define all pointer events to manager pan and zoom\n    let self = this;\n    window.addEventListener(\"resize\", () => {\n      self.#adaptSVGSize();\n    });\n    this.#svgEl.addEventListener(\"wheel\", (e) => {\n      self.#onWheel(e);\n    });\n    this.#svgEl.addEventListener(\"pointerdown\", (e) => {\n      this.cancelContextMenu();\n      self.#onPointerDown(e);\n    });\n    this.#svgEl.addEventListener(\"pointerup\", (e) => {\n      self.#onPointerUp(e);\n    });\n    this.#svgEl.addEventListener(\"pointermove\", (e) => {\n      self.#onPointerMove(e);\n    });\n    this.#svgEl.addEventListener(\"contextmenu\", (e) => {\n      self.#onContextMenu(e);\n    });\n  }\n\n  /**\n   * Returns the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  get minVBSize() {\n    return this.#minVBSize;\n  }\n  /**\n   * Sets the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  set minVBSize(val) {\n    this.#minVBSize = val;\n  }\n  /**\n   * Returns the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  get maxVBSize() {\n    return this.#maxVBSize;\n  }\n  /**\n   * Sets the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  set maxVBSize(val) {\n    this.#maxVBSize = val;\n  }\n  get components() {\n    return this.#components;\n  }\n  set components(val) {\n    this.#components = val;\n  }\n  get connections() {\n    return this.#connections;\n  }\n  set connections(val) {\n    this.#connections = val;\n  }\n  get contextMenuComponent() {\n    return this.#contextMenuComponent;\n  }\n  set contextMenuComponent(val) {\n    this.#contextMenuComponent = val;\n  }\n\n  /**\n   * Return the internal SVG element\n   */\n  get svgEl() {\n    return this.#svgEl;\n  }\n\n  /**\n   * Return the internal SVG connections element\n   */\n  get connectionsEl() {\n    return this.#connectionsEl;\n  }\n\n  /**\n   * Updates the box view coordinates based on coordinates\n   * stored in private fields #vbX, #vbY, #vbWidth and #vbHeight\n   */\n  #updateSVGViewBox() {\n    this.#svgEl.setAttribute(\"viewBox\", `${this.#vbX} ${this.#vbY} ${this.#vbWidth} ${this.#vbHeight}`);\n  }\n\n  /**\n   * Adjust the view box of the svg element based of the container\n   * current size. It's called when a resize event is received\n   */\n  #adaptSVGSize() {\n    this.#vbWidth = this.#svgEl.parentElement.clientWidth;\n    this.#vbHeight = this.#svgEl.parentElement.clientHeight;\n    this.#updateSVGViewBox();\n  }\n\n  /**\n   * Manages the wheel event to imlement zooming\n   * @param {Event} e Wheel event\n   */\n  #onWheel(e) {\n    let p = this.clientToSvgPoint(e.clientX, e.clientY);\n\n    let zoomFactor = 0.003;\n    let zoom = 1 + e.deltaY * zoomFactor;\n\n    let newWidth = this.#vbWidth * zoom;\n    let newHeight = this.#vbHeight * zoom;\n\n    if (newHeight < this.#minVBSize) return;\n    if (newWidth < this.#minVBSize) return;\n    if (newHeight > this.#maxVBSize) return;\n    if (newWidth > this.#maxVBSize) return;\n\n    let newLeft = this.#vbX - (newWidth - this.#vbWidth) * ((p.x - this.#vbX) / this.#vbWidth);\n    let newTop = this.#vbY - (newHeight - this.#vbHeight) * ((p.y - this.#vbY) / this.#vbHeight);\n\n    this.#vbHeight = newHeight;\n    this.#vbWidth = newWidth;\n    this.#vbX = newLeft;\n    this.#vbY = newTop;\n\n    this.#updateSVGViewBox();\n    e.stopPropagation();\n  }\n\n  /**\n   * This method is responsible for translate client (browser) coordinates\n   * to SVG space coordinates\n   * @param {number} clientX The client x coordinate\n   * @param {number} clientY The client y coordinate\n   */\n  clientToSvgPoint(clientX, clientY) {\n    // Create a point in SVG space\n    let p = this.#svgEl.createSVGPoint();\n\n    p.x = clientX;\n    p.y = clientY;\n\n    // Translate coordinates using the SVG transofrmation matrix\n    let pSVG = p.matrixTransform(this.#svgEl.getScreenCTM().inverse());\n    return pSVG;\n  }\n\n  /**\n   * Manage the mousedown event to implement pan\n   * @param {Event} e The mousedown event\n   */\n  #onPointerDown(e) {\n    if (e.button === 0) {\n      this.#dragging = true;\n      this.#startDragPos = this.clientToSvgPoint(e.clientX, e.clientY);\n      this.#svgEl.setPointerCapture(e.pointerId);\n    }\n  }\n\n  /**\n   * Manages the mouseup event to implement pan\n   * @param {Event} e The mouseup event\n   */\n  #onPointerUp(e) {\n    if (e.button === 0) {\n      this.#dragging = false;\n      this.#svgEl.releasePointerCapture(e.pointerId);\n    }\n  }\n\n  /**\n   * Manages the mousemove event to implement pan\n   * @param {Event} e The mousemove event\n   */\n  #onPointerMove(e) {\n    if (!this.#dragging) {\n      return;\n    }\n    let movePoint = this.clientToSvgPoint(e.clientX, e.clientY);\n    let xDiff = movePoint.x - this.#startDragPos.x;\n    let yDiff = movePoint.y - this.#startDragPos.y;\n    this.#vbX -= xDiff;\n    this.#vbY -= yDiff;\n    this.#updateSVGViewBox();\n  }\n\n  /**\n   * Manages the contextmenu event to implement custom menu\n   * @param {Event} e The contextmenu event\n   */\n  #onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let component = this.componentFromPosition(e.clientX, e.clientY);\n    let p = this.clientToSvgPoint(e.clientX, e.clientY);\n\n    let items;\n    if (!component) {\n      items = this.getCanvasContextMenuItems();\n    } else {\n      items = component.getContextMenuItems();\n    }\n\n    this.showContextMenu(items, p.x, p.y);\n  }\n\n  /**\n   * This method detect a cnodes-ui component inside the canvas\n   * at specified location (x,y). Optionally the user can request\n   * only sockets component, this is useful when you want to search\n   * a possible connection peer during the link process\n   * @param {number} x The x coordinate in the canvas\n   * @param {number} y Te y coordinate in the canvas\n   * @param {boolean} onlySockets If true, this method search only for socket components\n   */\n  componentFromPosition(x, y, onlySockets = false) {\n    // Get the DOM element at x,y in client space\n    let pointedEl = document.elementFromPoint(x, y);\n\n    // Searching for an element with the property \"componentRef\". When cnodes-ui\n    // add a component, insert this property inside the SVG root element of the component\n    while (pointedEl) {\n      // Traverse the DOM tree\n      if (pointedEl.componentRef && (!onlySockets || pointedEl.componentRef instanceof SocketComponent)) {\n        return pointedEl.componentRef;\n      }\n      pointedEl = pointedEl.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * Add a new connection to the canvas, also add the related element to\n   * the main SVG group of connections\n   * @param {Connection} connection The connection to add\n   */\n  addConnection(connection) {\n    this.#connections.push(connection);\n    connection.canvas = this;\n    this.#connectionsEl.appendChild(connection.connectionEl);\n\n    // Update connected sockets\n    connection.source.updateSVGElement();\n    connection.target.updateSVGElement();\n  }\n\n  /**\n   * Remove a connection from the canvas, also remove the related SVG element\n   * @param {Connection} connection The connection to remove\n   */\n  removeConnection(connection) {\n    // Signal the connection that will be destroyed\n    connection.destroy();\n    this.#connections = this.#connections.filter((c) => c !== connection);\n    this.#connectionsEl.removeChild(connection.connectionEl);\n\n    // Update connected sockets\n    connection.source.updateSVGElement();\n    connection.target.updateSVGElement();\n  }\n\n  /**\n   * Checks if there is a connection between sockets already\n   * @param {SocketComponent} socket1 First socket component\n   * @param {SocketComponent} socket2 Second socket component\n   */\n  alreadyConnected(socket1, socket2) {\n    return (\n      this.connections.findIndex((c) => (c.source === socket1 && c.target === socket2) || (c.source === socket2 && c.target === socket1)) !== -1\n    );\n  }\n\n  /**\n   * Add a new component to the canvas\n   * @param {Component} component Component to add\n   */\n  addComponent(component) {\n    this.#components.push(component);\n    component.canvas = this;\n    this.#svgEl.appendChild(component.componentEl);\n  }\n\n  /**\n   * Remove a component from the canvas\n   * @param {Component} component Component to remove\n   */\n  removeComponent(component) {\n    // Remove related connections\n    for (let s of component.components) {\n      if (s instanceof SocketComponent) {\n        for (let c of this.getConnectionsFor(s)) {\n          this.removeConnection(c);\n        }\n      }\n    }\n\n    // Signal component that will be removed\n    component.destroy();\n\n    // Remove the component from the SVG space\n    this.components = this.#components.filter((c) => c !== component);\n    this.#svgEl.removeChild(component.componentEl);\n  }\n\n  /**\n   * Update all connections in terms of SVG properties. This is\n   * important because when components are moved, this ensures that\n   * connections will follow them\n   */\n  updateAllConnections() {\n    for (let connection of this.#connections) {\n      connection.updateSVGElement();\n    }\n  }\n\n  /**\n   * This method extract all connections in the canvas, that have\n   * the source or the target SocketComponent as endpoint\n   * @param {SocketComponent} socket The socket component for which search the connection\n   */\n  getConnectionsFor(socket) {\n    return this.#connections.filter((c) => c.source === socket || c.target === socket);\n  }\n\n  /**\n   * Removes all connections from the canvas\n   */\n  removeAllConnections() {\n    while (this.#connections.length > 0) {\n      this.removeConnection(this.#connections[0]);\n    }\n  }\n\n  /**\n   * Removes all components from the canvas\n   */\n  removeAllComponents() {\n    while (this.#components.length > 0) {\n      this.removeComponent(this.#components[0]);\n    }\n  }\n\n  /**\n   * Remoives all connections and all components from the canvas\n   */\n  removeAll() {\n    this.removeAllConnections();\n    this.removeAllComponents();\n  }\n\n  /**\n   * Return a list of MenuItem for the context menu\n   */\n  getCanvasContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * Shows the context menu retated to the component or the canvas\n   * @param {MenuItem[]} items Items that compose the menu\n   * @param {number} x The x coordinate for the menu\n   * @param {number} y The y coordinate for the menu\n   */\n  showContextMenu(items, x, y) {\n    throw new Error(\"You must override this method in a subclass!\");\n  }\n\n  /**\n   * Cancels the current open context menu, and closes it\n   */\n  cancelContextMenu() {\n    if (this.#contextMenuComponent) {\n      this.removeComponent(this.#contextMenuComponent);\n      this.contextMenuComponent = null;\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"./position\";\n\n/**\n * This class is the base class for all components in the cnodes-ui canvas.\n * The class is responsible for manage mobility of components. This is not\n * yet the class for the cnodes nodes, is more abstract so that the user can\n * derive from that to implement components that are not explicitly connected\n * to the cnodes library, such as decorators, comments, etc.\n * In general component can have subcomponents. Special examples of subcomponents are\n * sockets. The socket is a component that can be connected through connections,\n * in the canvas-ui class model.\n */\nexport class Component {\n  /** A reference to the enclosing canvas */\n  #canvas = null;\n\n  /** A reference to the SVG element that implement the component */\n  #componentEl = null;\n\n  /** The parent component if there is one */\n  #parent = null;\n\n  /** Is this component moveable? */\n  #moveable = true;\n\n  /** The position fo this component inside the canvas, in SVG coordinates */\n  #pos = new Position(0, 0);\n\n  /** The component is actually moving */\n  #moving = false;\n\n  /** A reference to the position of the component at the time hi starts moving */\n  #startMovePos = null;\n\n  /** The pointer position at the time in which the component starts moving */\n  #startMovePointerPos = null;\n\n  /** The list of eventual child components */\n  #components = [];\n\n  constructor() {}\n\n  /**\n   * Sets up the component. The component creation follow a specific flow.\n   * The user that creates the component have to call this method after, to\n   * initializes the internal SVG component and optionally installs pointer\n   * event listeners to manage moving.\n   */\n  setup() {\n    // Create the SVG element. A subclass must override this method\n    // to define the graphical aspect of the component\n    this.#componentEl = this.createElement();\n\n    let self = this;\n\n    // Register a reference of this component inside the HTML element\n    this.#componentEl.componentRef = this;\n\n    // Cancel context menu on any pointerdown event\n    this.#componentEl.addEventListener(\"pointerdown\", (e) => {\n      self.canvas.cancelContextMenu();\n    });\n\n    if (this.moveable) {\n      this.#componentEl.addEventListener(\"pointerdown\", (e) => {\n        self.#onPointerDown(e);\n      });\n      this.#componentEl.addEventListener(\"pointerup\", (e) => {\n        self.#onPointerUp(e);\n      });\n      this.#componentEl.addEventListener(\"pointermove\", (e) => {\n        self.#onPointerMove(e);\n      });\n    }\n  }\n\n  get pos() {\n    return this.#pos;\n  }\n  set pos(val) {\n    this.#pos = val;\n    this.updateSVGElement();\n  }\n  get canvas() {\n    return this.#canvas;\n  }\n  set canvas(val) {\n    this.#canvas = val;\n  }\n  get componentEl() {\n    return this.#componentEl;\n  }\n  get components() {\n    return this.#components;\n  }\n  set components(val) {\n    this.#components = val;\n  }\n\n  get svgEl() {\n    return this.#canvas.svgEl;\n  }\n\n  get moveable() {\n    return this.#moveable;\n  }\n  set moveable(val) {\n    this.#moveable = val;\n  }\n  get parent() {\n    return this.#parent;\n  }\n  set parent(val) {\n    this.#parent = val;\n  }\n\n  /**\n   * Manages the mousedown event to implement moving\n   * @param {Event} e The mousedown event\n   */\n  #onPointerDown(e) {\n    if (e.button === 0) {\n      if (this.#moveable) {\n        this.#moving = true;\n        this.#startMovePos = this.#canvas.clientToSvgPoint(e.clientX, e.clientY);\n        this.#startMovePointerPos = this.#canvas.svgEl.createSVGPoint();\n        this.#startMovePointerPos.x = this.#pos.x;\n        this.#startMovePointerPos.y = this.#pos.y;\n        this.#componentEl.setPointerCapture(e.pointerId);\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * Manages the mouseup event to implement pan\n   * @param {Event} e The mouseup event\n   */\n  #onPointerUp(e) {\n    if (this.#moveable && e.button === 0) {\n      this.#moving = false;\n      this.#componentEl.releasePointerCapture(e.pointerId);\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Manages the mousemove event to implement pan\n   * @param {Event} e The mousemove event\n   */\n  #onPointerMove(e) {\n    if (this.#moveable) {\n      if (!this.#moving) {\n        return;\n      }\n      let movePoint = this.#canvas.clientToSvgPoint(e.clientX, e.clientY);\n      let xDiff = movePoint.x - this.#startMovePos.x;\n      let yDiff = movePoint.y - this.#startMovePos.y;\n\n      // This effectively move the element\n      this.#pos.x = xDiff + this.#startMovePointerPos.x;\n      this.#pos.y = yDiff + this.#startMovePointerPos.y;\n      this.updateSVGElement();\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * This method must be overridden in a child concrete class.\n   * The setup() mthod calls this one during the creation process\n   */\n  createElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * Returns the absolute position of this component, in terms\n   * of canvas coordinates, by travering the child-parent component\n   * hierarchy\n   */\n  get absPos() {\n    let pos = new Position(this.#pos.x, this.#pos.y);\n    if (this.#parent) {\n      let parentPos = this.#parent.absPos;\n      pos = pos.add(parentPos);\n    }\n    return pos;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed\n   */\n  updateSVGElement() {\n    let pos = this.absPos;\n    this.#componentEl.setAttribute(\"transform\", `translate(${pos.x},${pos.y})`);\n\n    // Also update all children\n    for (let c of this.#components) {\n      c.updateSVGElement();\n    }\n\n    // Update all connections\n    if (this.canvas) {\n      this.canvas.updateAllConnections();\n    }\n  }\n\n  /**\n   * Add a new component as child component.\n   * WARNING: before attach child components, this component\n   * must to be attached to the canvas itself, otherwise the method\n   * fails\n   * @param {Component} component Component to add\n   */\n  addComponent(component) {\n    this.#components.push(component);\n    component.parent = this;\n    component.canvas = this.canvas;\n    this.svgEl.appendChild(component.componentEl);\n    component.updateSVGElement();\n  }\n\n  /**\n   * Remove a child subcomponent\n   * @param {Component} component The component to remove\n   */\n  removeComponent(component) {\n    this.components = this.#components.filter((c) => c !== component);\n    component.destroy();\n    this.svgEl.removeChild(component.componentEl);\n  }\n\n  /**\n   * This method is called when this component is removed\n   * from the canvas of from its parent component\n   */\n  destroy() {\n    // Removes all subcomponents\n    this.components.forEach((c) => this.removeComponent(c));\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * This is tha base class of all connections. A Connection is always a\n * link from two sockets. Sockets are special subclass of components, tipically\n * child of base components\n */\nexport class Connection {\n  /** A reference to the enclosing canvas */\n  #canvas = null;\n\n  /** A reference to the SVG element of this connection */\n  #connectionEl = null;\n\n  /** The source socket component for the link */\n  #source = null;\n\n  /** Yhe destination socket component for the link */\n  #target = null;\n\n  /**\n   * Construct a connection instance by setting its source and target\n   */\n  constructor(source, target) {\n    this.#source = source;\n    this.#target = target;\n    this.source.updateSVGElement();\n    this.target.updateSVGElement();\n  }\n\n  /**\n   * Sets up this connection. In terms of construction flow\n   * this means create the SVG element that will be shown\n   */\n  setup() {\n    this.#connectionEl = this.createElement();\n  }\n\n  get canvas() {\n    return this.#canvas;\n  }\n  set canvas(val) {\n    this.#canvas = val;\n  }\n  get source() {\n    return this.#source;\n  }\n  set source(val) {\n    this.#source = val;\n  }\n  get target() {\n    return this.#target;\n  }\n  set target(val) {\n    this.#target = val;\n  }\n  get connectionEl() {\n    return this.#connectionEl;\n  }\n  get svgEl() {\n    return this.#canvas.svgEl;\n  }\n\n  /**\n   * This method is responsible to create the SVG element\n   * for display the connetion. Subclasses must override this method\n   */\n  createElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * This method is called when the connetion needs to be updated.\n   * This happens when sockets and/or components connected to this\n   * object where moved\n   */\n  updateSVGElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * This method is called when the connection is removed from the canvas\n   */\n  destroy() {}\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Canvas } from \"./canvas\";\nimport { Component } from \"./component\";\nimport { Position } from \"./position\";\n\n/**\n * This class represents a single Menu item.\n * A menu itemhas a text, and a callback to call on click\n */\nexport class MenuItem {\n  /** The \"click\" callback */\n  #callback = null;\n\n  /** The text for the item */\n  #text = \"\";\n\n  /**\n   * Constructs a menu item\n   * @param {string} text Title of the menu item\n   * @param {function} callback The callback function to call on click event\n   */\n  constructor(text, callback) {\n    this.#text = text;\n    this.#callback = callback;\n  }\n\n  get text() {\n    return this.#text;\n  }\n  set text(val) {\n    this.#text = val;\n  }\n  get callback() {\n    return this.#callback;\n  }\n  set callback(val) {\n    this.#callback = val;\n  }\n}\n\n/**\n * This class implements a menu\n */\nexport class Menu extends Component {\n  /** Menu items */\n  #items = [];\n\n  /**\n   * Construct a new Menu for the canvas\n   * @param {Canvas} canvas The canvas\n   * @param {MenuItem[]} items The menu items\n   */\n  constructor(canvas, items) {\n    super();\n    this.moveable = false;\n    this.canvas = canvas;\n    this.#items = items;\n  }\n\n  get items() {\n    return this.#items;\n  }\n  set items(val) {\n    this.#items = val;\n  }\n\n  /**\n   * Show the menu\n   * @param {number} x The x coordinate\n   * @param {number} y The y coordinate\n   */\n  show(x, y) {\n    this.setup();\n\n    canvas.addComponent(this);\n    this.pos = new Position(x, y);\n  }\n\n  /**\n   * Set up the container\n   */\n  setup() {\n    super.setup();\n  }\n\n  /**\n   * Computes the menu vertical size, based on menu items\n   */\n  get height() {\n    throw new Error(\"A subclass must implement this method!\");\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    throw new Error(\"A subclass must implement this method!\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * A class that represents a position in SVG space\n */\nexport class Position {\n  /** The x coordinate */\n  #x = 0;\n\n  /** The y coordinate */\n  #y = 0;\n\n  /**\n   * Construct a new Position\n   * @param {number} x The x coordinate\n   * @param {number} y The y coordinate\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  get x() {\n    return this.#x;\n  }\n  set x(val) {\n    this.#x = val;\n  }\n  get y() {\n    return this.#y;\n  }\n  set y(val) {\n    this.#y = val;\n  }\n\n  /**\n   * Return a new position by adding another instance of\n   * position coordinate by coordinate\n   * @param {Position} pos\n   */\n  add(pos) {\n    return new Position(this.#x + pos.x, this.#y + pos.y);\n  }\n\n  /**\n   * Return a new position by subtracting another instance of\n   * position coordinate by coordinate\n   * @param {Position} pos\n   */\n  sub(pos) {\n    return new Position(this.#x - pos.x, this.#y - pos.y);\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"./component\";\nimport { Position } from \"./position\";\n\n/**\n * A Socket is a special case of component. Tipically, to design\n * a component node in canvas-ui, you define a base component, and attach\n * to it a list of subcomponents that derives from Socket class, for\n * give the user the chance to link nodes\n */\nexport class SocketComponent extends Component {\n  /** This socket is connecting, the user is dragging with the mouse */\n  #connecting = false;\n\n  /** The last (other) socket pointed by the mouse cursor while connecting */\n  #currentPeerSocketComponent = null;\n\n  /** This SVG component is used to display a temporary floating link during the connection */\n  #tempConnectionEl = null;\n\n  constructor() {\n    super();\n  }\n\n  get connecting() {\n    return this.#connecting;\n  }\n  set connecting(val) {\n    this.#connecting = val;\n  }\n  get currentPeerSocketComponent() {\n    return this.#currentPeerSocketComponent;\n  }\n  get tempConnectionEl() {\n    return this.#tempConnectionEl;\n  }\n  set tempConnectionEl(val) {\n    this.#tempConnectionEl = val;\n  }\n\n  /**\n   * Sets up a socket. A socket is not movable by default and\n   * calls the createElement() method to prepare the SVG element\n   */\n  setup() {\n    this.moveable = false;\n    super.setup();\n\n    // All sockets does not manage pointer events so events\n    // can pass through to the base componentEl element....\n    this.componentEl.style[\"pointer-events\"] = \"none\";\n    // ... but the dragEle element (that by default is the entire componentEl ;-)\n    this.dragElement.style[\"pointer-events\"] = \"auto\";\n\n    let self = this;\n\n    this.dragElement.addEventListener(\"pointerdown\", (e) => {\n      self.onPointerDown(e);\n    });\n    this.dragElement.addEventListener(\"pointerup\", (e) => {\n      self.onPointerUp(e);\n    });\n    this.dragElement.addEventListener(\"pointermove\", (e) => {\n      self.onPointerMove(e);\n    });\n  }\n\n  /**\n   * Returns the element that responds to pointer events. By\n   * default this is the entire root element\n   */\n  get dragElement() {\n    return this.componentEl;\n  }\n\n  /**\n   * Manages the pointerdown event to implement the start of the\n   * drag-and-link process. If the socket is a one-link socket, such as\n   * a \"next\" connection to another node, a pointerdown should disconnect\n   * the old connection and restart the dragging of the peek socket, to give\n   * the user the chance to connect the peer socket to another one.\n   * If the socket was not already connected, call the connectionStarted()\n   * method that will be overridden in subclasses\n   * @param {Event} e The pointerdown event\n   */\n  onPointerDown(e) {\n    if (e.button === 0) {\n      // Cancel previous context menu\n      if (this.#tempConnectionEl) {\n        this.canvas.cancelContextMenu();\n        this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n        this.#tempConnectionEl = null;\n      }\n\n      if (!this.hasSingleConnection || !this.isConnected) {\n        this.#connecting = true;\n        this.dragElement.setPointerCapture(e.pointerId);\n        e.stopPropagation();\n\n        // Connect action is started\n        this.connectionStarted();\n      } else {\n        let peerComponent = this.getSinglePeerComponent();\n        peerComponent.onPointerDown(e);\n\n        let con = this.canvas.getConnectionsFor(this)[0];\n        this.canvas.removeConnection(con);\n\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * This method manages the pointerup event to implement\n   * the final part of the connection. If the pointer is overing a\n   * valid peer socket, then the connection ca be done, and the\n   * connectionDone() method can be call. Otherwise the\n   * connectionEndedOutOfSocket() is called.\n   * @param {Event} e The pointerup event\n   */\n  onPointerUp(e) {\n    if (e.button === 0) {\n      this.#connecting = false;\n      this.dragElement.releasePointerCapture(e.pointerId);\n      e.stopPropagation();\n\n      if (this.#currentPeerSocketComponent) {\n        let connectingSocketComponent = this.#currentPeerSocketComponent;\n        this.#currentPeerSocketComponent = null;\n        this.connectionDone(connectingSocketComponent);\n      } else {\n        this.connectionEndedOutOfSocket(e);\n      }\n    }\n  }\n\n  /**\n   * This method manages the pointermove event to implement the\n   * middle part of the connection process. During this phase, cnodes-ui\n   * check if the pointer is overing a valid peer socket component, and\n   * if true, show the temprary link in a \"valid state\", such as a special color\n   * of the stroke stroke, and store the peer component in the currentPeerSocketComponent\n   * for future use.\n   * @param {Event} e The pointermove event\n   */\n  onPointerMove(e) {\n    if (this.#connecting) {\n      // Test if a socket is pointed\n      let pointedComponent = this.canvas.componentFromPosition(e.clientX, e.clientY, true);\n\n      let p = this.canvas.clientToSvgPoint(e.clientX, e.clientY);\n      if (pointedComponent) {\n        if (this.canAcceptPeerSocket(pointedComponent)) {\n          this.connectionMoving(p.x, p.y, false);\n          this.#currentPeerSocketComponent = pointedComponent;\n        } else {\n          this.connectionMoving(p.x, p.y, true);\n          this.#currentPeerSocketComponent = null;\n        }\n      } else {\n        this.connectionMoving(p.x, p.y, false);\n        this.#currentPeerSocketComponent = null;\n      }\n\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * The user has began dragging the socket to create a connection\n   */\n  connectionStarted() {\n    this.#tempConnectionEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    this.#tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${this.absPos.x} ${this.absPos.y}\n      `\n    );\n\n    this.canvas.connectionsEl.appendChild(this.#tempConnectionEl);\n  }\n\n  /**\n   * The user is moving the pointer around, with a connection pending\n   * @param {number} x The x coordinate in SVG space\n   * @param {number} y The y coordinate in SVG space\n   * @param {boolean} invalid true if the pointer is overing a unacceptable socket\n   */\n  connectionMoving(x, y, invalid) {\n    let sourcePoint = new Position(this.absPos.x, this.absPos.y);\n    let targetPoint = new Position(\n      this.currentPeerSocketComponent ? this.currentPeerSocketComponent.absPos.x : x,\n      this.currentPeerSocketComponent ? this.currentPeerSocketComponent.absPos.y : y\n    );\n\n    this.#tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      L ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.#tempConnectionEl.setAttribute(\"stroke-width\", 2);\n    this.#tempConnectionEl.setAttribute(\"stroke\", \"black\");\n    this.#tempConnectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n    this.#tempConnectionEl = null;\n  }\n\n  /**\n   * The user has released the pointer button out of a valid socket,\n   * so by default, cancel the connection\n   * @param {Event} e The event pointerup\n   */\n  connectionEndedOutOfSocket(e) {\n    this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n    this.#tempConnectionEl = null;\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    throw new Error(\"This method must be overridden in a subclass!\");\n  }\n\n  /**\n   * Return true if this socket only support one connection at most\n   */\n  get hasSingleConnection() {\n    throw new Error(\"This method must be overridden in a subclass!\");\n  }\n\n  /**\n   * Is this socket actually connected?\n   */\n  get isConnected() {\n    return this.canvas.getConnectionsFor(this).length > 0;\n  }\n\n  /**\n   * Return the peer component of the socket in case\n   * of this socket is a single connection. Otherwise return null\n   */\n  getSinglePeerComponent() {\n    if (!this.hasSingleConnection) {\n      return null;\n    } else {\n      let con = this.canvas.getConnectionsFor(this)[0];\n      if (this === con.source) {\n        return con.target;\n      } else {\n        return con.source;\n      }\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"../canvas/component\";\nimport { Position } from \"../canvas/position\";\nimport { PrevSocketComponent } from \"./prev\";\nimport { NextSocketComponent } from \"./next\";\nimport { Theme } from \"./theme\";\nimport { OutputSocketComponent } from \"./output\";\nimport { InputSocketComponent } from \"./input\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { Program } from \"@marco.jacovone/cnodes/cnodes\";\n\n/**\n * This is the main class for managing a single CNode\n * inside the cnodes-ui canvas. It embed a cnodes node instance\n */\nexport class CnodeComponent extends Component {\n  /** The cnodes nod instance */\n  #node;\n\n  /** An SVG element to draw the container of the node */\n  #containerEl;\n\n  /** An SVG element to draw the title of the node */\n  #titleEl;\n\n  /** An SVG element to draw the top-left symbol for the node */\n  #symbolEl;\n\n  /** An SVG element to draw the top-left sign for the node */\n  #signEl;\n\n  constructor(node, canvas) {\n    super();\n    this.#node = node;\n\n    // write a back-reference\n    this.#node.__comp = this;\n\n    super.setup();\n    canvas.addComponent(this);\n\n    // If there is an active program, add this node to it\n    if (this.canvas.program) {\n      this.canvas.program.addNode(this.#node);\n    }\n\n    this.updateSubcomponents();\n  }\n\n  get node() {\n    return this.#node;\n  }\n\n  /**\n   * Computes the node vertical size, based on node\n   * characteristics in terms of number of input, output,\n   * and nexts. It takes account of the current theme\n   */\n  get height() {\n    let leftSocketsHeight = this.node.inputs.length;\n    if (this.node.prev && this.node.nexts.length === 0 && this.node.outputs.length === 0) {\n      leftSocketsHeight++;\n    }\n    let rightSocketsHeight = this.node.outputs.length + this.node.nexts.length;\n\n    return (\n      Theme.current.NODE_BORDER_RADIUS * 0.5 +\n      40 + // Title\n      30 * (leftSocketsHeight + rightSocketsHeight) +\n      15 // Padding\n    );\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    let nodeEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    this.#containerEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    this.#titleEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n    this.#symbolEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    this.#signEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    nodeEl.appendChild(this.#containerEl);\n    nodeEl.appendChild(this.#titleEl);\n    nodeEl.appendChild(this.#symbolEl);\n    nodeEl.appendChild(this.#signEl);\n\n    this.#titleEl.innerHTML = this.node.name;\n    this.#titleEl.style = `\n      font: ${Theme.current.NODE_TITLE_FONT}; \n      color: ${!this.node.functional ? Theme.current.NODE_TITLE_COLOR : Theme.current.NODE_FUNCTIONAL_TITLE_COLOR}; \n      text-align: center; \n      user-select: none`;\n    this.#titleEl.setAttribute(\"x\", Theme.current.NODE_BORDER_RADIUS * 0.5);\n    this.#titleEl.setAttribute(\"y\", Theme.current.NODE_BORDER_RADIUS * 0.5);\n    this.#titleEl.setAttribute(\"width\", Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS * 0.5 * 2);\n    this.#titleEl.setAttribute(\"height\", 30);\n\n    this.#containerEl.setAttribute(\n      \"stroke\",\n      !this.node.functional ? Theme.current.NODE_STROKE_COLOR : Theme.current.NODE_FUNCTIONAL_STROKE_COLOR\n    );\n    this.#containerEl.setAttribute(\"stroke-width\", Theme.current.NODE_STROKE_WIDTH);\n    this.#containerEl.setAttribute(\"fill\", this.node.functional ? Theme.current.NODE_FUNCTIONAL_FILL_COLOR : Theme.current.NODE_FILL_COLOR);\n    this.#containerEl.setAttribute(\"x\", \"0\");\n    this.#containerEl.setAttribute(\"y\", \"0\");\n\n    this.#symbolEl.setAttribute(\"cx\", 0);\n    this.#symbolEl.setAttribute(\"cy\", 0);\n    this.#symbolEl.setAttribute(\"r\", Theme.current.NODE_BORDER_RADIUS * 0.9);\n    this.#symbolEl.setAttribute(\"stroke\", Theme.current.NODE_SYMBOL_STROKE_COLOR);\n    this.#symbolEl.setAttribute(\"stroke-width\", Theme.current.NODE_SYMBOL_STROKE_WIDTH);\n    this.#symbolEl.setAttribute(\"fill\", Theme.current.NODE_SYMBOL_FILL_COLOR);\n\n    let signRadius = Theme.current.NODE_BORDER_RADIUS * 0.7;\n    this.#signEl.setAttribute(\n      \"d\",\n      !this.node.functional\n        ? `\n      M ${signRadius * 0.5} 0\n      L ${-signRadius * 0.3} ${-signRadius / 2}\n      L ${-signRadius * 0.3} ${signRadius / 2}\n      Z\n      `\n        : `\n      M ${signRadius * 0.6} 0\n      L ${-signRadius * 0.5} 0\n\n      M 0 ${-signRadius * 0.6}\n      L ${-signRadius * 0.5} 0\n      L 0 ${+signRadius * 0.6}\n      `\n    );\n    this.#signEl.setAttribute(\"stroke\", !this.node.functional ? Theme.current.NODE_SIGN_COLOR : Theme.current.NODE_FUNCTIONAL_SIGN_COLOR);\n    this.#signEl.setAttribute(\"stroke-width\", !this.node.functional ? 1 : 3);\n    this.#signEl.setAttribute(\"fill\", !this.node.functional ? Theme.current.NODE_SIGN_COLOR : \"transparent\");\n    this.#signEl.setAttribute(\"stroke-linejoin\", \"null\");\n    this.#signEl.setAttribute(\"x\", \"0\");\n    this.#signEl.setAttribute(\"y\", \"0\");\n\n    nodeEl.setAttribute(\"x\", \"0\");\n    nodeEl.setAttribute(\"y\", \"0\");\n\n    return nodeEl;\n  }\n\n  /**\n   * This method construct and/or update all sub components. They are all sockets\n   * representing input, outputs, prev and nexts.\n   */\n  updateSubcomponents() {\n    let posY = 40 + 0.5 * Theme.current.NODE_BORDER_RADIUS;\n\n    // Prev\n    if (this.node.prev) {\n      let nComp = this.node.prev.__comp;\n      if (!nComp) {\n        nComp = new PrevSocketComponent(this.node.prev);\n        this.addComponent(nComp);\n\n        // write a back_reference\n        this.node.prev.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(0, posY);\n    }\n\n    // Nexts\n    for (const next of this.node.nexts) {\n      let nComp = next.__comp;\n      if (!nComp) {\n        nComp = new NextSocketComponent(next);\n        this.addComponent(nComp);\n\n        // write a back-reference\n        next.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(Theme.current.NODE_WIDTH, posY);\n      posY += 30;\n    }\n\n    // Output\n    for (const output of this.node.outputs) {\n      let nComp = output.__comp;\n      if (!nComp) {\n        nComp = new OutputSocketComponent(output);\n        this.addComponent(nComp);\n\n        // write a back-reference\n        output.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(Theme.current.NODE_WIDTH, posY);\n      posY += 30;\n    }\n\n    // Input\n    for (const input of this.node.inputs) {\n      let nComp = input.__comp;\n      if (!nComp) {\n        nComp = new InputSocketComponent(input);\n        this.addComponent(nComp);\n\n        // write a back-reference\n        input.__comp = nComp;\n      }\n\n      // Update status\n      nComp.updateSVGElement();\n      nComp.pos = new Position(0, posY);\n      posY += 30;\n    }\n  }\n\n  /**\n   * Intercept by overriding this method to update\n   * graphical cooordinates in the program structure\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#containerEl.setAttribute(\n      \"d\",\n      `\n      M 0 ${Theme.current.NODE_BORDER_RADIUS * 1.3} \n      A ${Theme.current.NODE_BORDER_RADIUS * 1.3} ${Theme.current.NODE_BORDER_RADIUS * 1.3} 0 0 0 ${Theme.current.NODE_BORDER_RADIUS * 1.3} 0 \n      L ${Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS} 0 \n      A ${Theme.current.NODE_BORDER_RADIUS} ${Theme.current.NODE_BORDER_RADIUS} 0 0 1 ${Theme.current.NODE_WIDTH} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } \n      L ${Theme.current.NODE_WIDTH} ${this.height - Theme.current.NODE_BORDER_RADIUS} \n      A ${Theme.current.NODE_BORDER_RADIUS} ${Theme.current.NODE_BORDER_RADIUS} 0 0 1 ${\n        Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS\n      } ${this.height} \n      L ${Theme.current.NODE_BORDER_RADIUS} ${this.height} \n      A ${Theme.current.NODE_BORDER_RADIUS} ${Theme.current.NODE_BORDER_RADIUS} 0 0 1 0 ${this.height - Theme.current.NODE_BORDER_RADIUS} \n      Z\n      `\n    );\n\n    this.updateSubcomponents();\n\n    // Update UI data in meta info\n    if (!this.#node.meta) {\n      this.node.meta = {};\n    }\n    this.#node.meta.pos = {\n      x: this.pos.x,\n      y: this.pos.y,\n    };\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    if (this.node instanceof Program) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Edit...</tspan>`, () => {\n          this.canvas.pushProgram(this.node);\n        })\n      );\n    }\n\n    // The node can add inputs?\n    if (this.node.canAddInput) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Add input</tspan>`, () => {\n          this.node.addInput();\n          this.updateSVGElement();\n        })\n      );\n    }\n\n    // The node can add inputs?\n    if (this.node.canAddOutput) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Add output</tspan>`, () => {\n          this.node.addOutput();\n          this.updateSVGElement();\n        })\n      );\n    }\n\n    items.push(\n      new MenuItem(`<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`, () => {\n        for (let comp of this.components) {\n          if (comp instanceof SocketComponent && comp.isConnected) {\n            for (let conn of this.canvas.getConnectionsFor(comp)) {\n              this.canvas.removeConnection(conn);\n            }\n          }\n        }\n      })\n    );\n\n    // The node can be removed?\n    if (this.node.removable) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Delete</tspan>`, () => {\n          this.canvas.removeComponent(this);\n        })\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Remove the internal node reference to the component\n   * upon destroy\n   */\n  destroy() {\n    this.node.__comp = null;\n\n    // If there is acrive program, remove the node from it\n    if (this.canvas.program) {\n      this.canvas.program.removeNode(this.node);\n    }\n\n    super.destroy();\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Program } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Canvas } from \"../canvas/canvas\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { IOConnection } from \"../connections/io_connection\";\nimport { PrevNextConnection } from \"../connections/prevnext_connection\";\nimport { CnodeComponent } from \"./cnode\";\nimport { CnodesMenu } from \"./cnodesmenu\";\nimport { Theme } from \"./theme\";\n\n/**\n * This is the entry-point class for managing the canvas\n * relative to a cnodes program.\n */\nexport class CnodesCanvas extends Canvas {\n  /** The edited program */\n  #program = null;\n\n  /** The stack of edited programs */\n  #stack = [];\n\n  constructor(el) {\n    super(el);\n\n    let defsEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n\n    defsEl.innerHTML = `\n      <filter xmlns=\"http://www.w3.org/2000/svg\" id=\"dropshadow\" height=\"130%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> \n        <feOffset dx=\"0\" dy=\"0\" result=\"offsetblur\"/> \n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.3\"/>\n        </feComponentTransfer>\n        <feMerge> \n          <feMergeNode/>\n          <feMergeNode in=\"SourceGraphic\"/> \n        </feMerge>\n      </filter>\n      <marker id=\"io-arrow\" viewBox=\"0 0 10 10\" refX=\"7\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.CONNECTION_IO_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 0 0 L 10 5 L 0 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"prevnext-arrow\" viewBox=\"0 0 10 10\" refX=\"7\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.CONNECTION_PREV_NEXT_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 0 0 L 10 5 L 0 10 Z\">\n        </path>\n      </marker>      \n    `;\n\n    this.svgEl.appendChild(defsEl);\n  }\n\n  get program() {\n    return this.#program;\n  }\n\n  /**\n   * This setter is a trigger for the import procedure\n   */\n  set program(val) {\n    this.importCnodesProgram(val);\n    this.#program = val;\n  }\n\n  /**\n   * Executes the program\n   */\n  run() {\n    this.#program.process();\n  }\n\n  /**\n   * Dump the internal CNODES program to the console\n   */\n  dump() {\n    console.log(Env.export(this.#program));\n  }\n\n  /**\n   * Return a list of MenuItem for the context menu\n   */\n  getCanvasContextMenuItems() {\n    let items = [];\n\n    if (this.canPopProgram()) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n            Return to parent...\n          </tspan>\n          `,\n          () => {\n            this.popProgram();\n          }\n        )\n      );\n    }\n\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          items.push(\n            new MenuItem(\n              `\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                New\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                ${nodeDef.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                ${nodeDef.category}\n              </tspan>\n              `,\n              (x, y) => {\n                let node = new CnodeComponent(n, this);\n                node.pos = new Position(x, y);\n              }\n            )\n          );\n        }\n      }\n    }\n\n    if (items.length === 0) {\n      return null;\n    } else {\n      return items;\n    }\n  }\n\n  /**\n   * Cancels the current open context menu, and closes it.\n   * Override this to ensure cancel menu inform menu callback clients\n   */\n  cancelContextMenu() {\n    if (this.contextMenuComponent && this.contextMenuComponent.menuCallback) {\n      this.contextMenuComponent.menuCallback(null);\n      this.contextMenuComponent.menuCallback = null;\n    }\n    super.cancelContextMenu();\n  }\n\n  /**\n   * Shows the context menu retated to the component or to the canvas\n   * @param {MenuItem[]} items Items that compose the menu\n   * @param {number} x The x coordinate for the menu\n   * @param {number} y The y coordinate for the menu\n   * @param {Function} menuCallback If the client is interested to the user selection or cancel\n   */\n  showContextMenu(items, x, y, menuCallback) {\n    if (items) {\n      if (this.contextMenuComponent) {\n        this.cancelContextMenu();\n      }\n\n      this.contextMenuComponent = new CnodesMenu(this, items);\n      this.contextMenuComponent.menuCallback = menuCallback;\n      this.contextMenuComponent.show(x, y);\n    }\n  }\n\n  /**\n   * This method imports an entire cnodes program\n   * @param {Program} program Program to import\n   */\n  importCnodesProgram(program) {\n    // By temporary clearing the instance of the program, we inform\n    // components that all creation/destruction will not have effect\n    // on the program instance\n    this.#program = null;\n\n    this.removeAll();\n\n    // Import the program\n    for (let n of program.nodes) {\n      let comp = new CnodeComponent(n, this);\n      comp.moveable = true;\n\n      // Extract meta info\n      if (!n.meta) {\n        n.meta = {};\n      }\n      if (n.meta.pos) {\n        comp.pos = new Position(n.meta.pos.x, n.meta.pos.y);\n      } else {\n        comp.pos = new Position(100, 100);\n      }\n    }\n\n    // Setup connections\n    for (let n of program.nodes) {\n      // Setup prev\n      if (n.prev && n.prev.peers.length > 0) {\n        for (let peer of n.prev.peers) {\n          if (!this.alreadyConnected(peer.__comp, n.prev.__comp)) {\n            // Create connection component\n            new PrevNextConnection(peer.__comp, n.prev.__comp, this);\n          }\n        }\n      }\n      // Setup nexts\n      for (let next of n.nexts) {\n        if (next.peer) {\n          if (!this.alreadyConnected(next.peer.__comp, next.__comp)) {\n            // Create connection component\n            new PrevNextConnection(next.__comp, next.peer.__comp, this);\n          }\n        }\n      }\n      // Setup inputs\n      for (let inp of n.inputs) {\n        if (inp.peer) {\n          if (!this.alreadyConnected(inp.peer.__comp, inp.__comp)) {\n            // Create connection component\n            new IOConnection(inp.peer.__comp, inp.__comp, this);\n          }\n        }\n      }\n      // Setup outputs\n      for (let outp of n.outputs) {\n        if (outp.peers.length > 0) {\n          for (let peer of outp.peers) {\n            if (!this.alreadyConnected(outp.__comp, peer.__comp)) {\n              // Create connection component\n              new IOConnection(outp.__comp, peer.__comp, this);\n            }\n          }\n        }\n      }\n    }\n\n    // Restore the program instance\n    this.#program = program;\n  }\n\n  /**\n   * Push a subprogram on the canvas. The current program\n   * is pushed on to the stack and the new one is placed on the canvas\n   * @param {*} program The new program to edit\n   */\n  pushProgram(program) {\n    setTimeout(() => {\n      // Push this current program to the stack\n      this.#stack.unshift(this.program);\n\n      // Set the new Program\n      this.program = program;\n    });\n  }\n\n  /**\n   * Pops the last program and place it on the canvas. The actual\n   * program (that is a subprogram of the popped) is abandoned\n   */\n  popProgram() {\n    setTimeout(() => {\n      this.program = this.#stack.shift();\n    });\n  }\n\n  /**\n   * Can this canvas pop a program from the stack, that is:\n   * there is at least one program on the stack?\n   */\n  canPopProgram() {\n    return this.#stack.length > 0;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Menu } from \"../canvas/menu\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\nimport { Theme } from \"./theme\";\n\n/**\n * This class implements a context menu for cnodes canvas\n */\nexport class CnodesMenu extends Menu {\n  /** The input element for the search */\n  #inputElement = null;\n\n  /** Container element around items*/\n  #containerEl = null;\n\n  /** Current search result items */\n  #itemsEls = [];\n\n  /** The search filter (value of the search input) */\n  #searchFilter = \"\";\n\n  /**\n   * The result of the selection of the user. If who request the menu is interested.\n   * Some components, like sockets, can open a context menu to select items, instead of\n   * the canvas. In such case, the originating component have to know the final\n   * result of the menu selection. In this case, tho variable contains a callback to\n   * the menu \"client\", and the menu, upon a user selection, calls this callback passing\n   * the result value of the context menu item callback, as parameter.\n   * Please see the class CnodesSocket component to check this behavior.\n   */\n  #menuCallback = null;\n\n  /**\n   * Construct a new Menu for the canvas\n   * @param {CnodesCanvas} canvas The canvas\n   * @param {MenuItem[]} items The menu items\n   */\n  constructor(canvas, items) {\n    super(canvas, items);\n  }\n\n  get searchFilter() {\n    return this.#searchFilter;\n  }\n  set searchFilter(val) {\n    this.#searchFilter = val;\n  }\n  get menuCallback() {\n    return this.#menuCallback;\n  }\n  set menuCallback(val) {\n    this.#menuCallback = val;\n  }\n\n  /** Returns the filtered items of the menu */\n  get filteredElements() {\n    let filterElems = this.items.filter((i, idx) => i.text.toUpperCase().includes(this.searchFilter.toUpperCase()));\n    return filterElems.filter((i, idx) => idx <= 10);\n  }\n\n  /**\n   * Computes the menu vertical size, based on menu items\n   * filtered by search filter\n   */\n  get height() {\n    return (\n      Theme.current.MENU_BORDER_RADIUS * 2 + // Padding\n      30 + // Search input\n      Theme.current.MENU_ITEM_HEIGHT * this.filteredElements.length // Items\n    );\n  }\n\n  /**\n   * Shows the menu\n   * @param {*} x The x coordinate\n   * @param {*} y The y coordinate\n   */\n  show(x, y) {\n    super.show(x, y);\n    this.#inputElement.focus();\n    this.createMenuItemsElements();\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    let menuEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n    let textInputElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n    textInputElem.style = `\n      font: ${Theme.current.MENU_SEARCH_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      text-align: left;\n      line-height: 30px;\n      user-select: none;\n      pointer-events: auto;\n    `;\n\n    textInputElem.setAttribute(\"x\", 0);\n    textInputElem.setAttribute(\"y\", 0);\n    textInputElem.setAttribute(\"transform\", `translate(${Theme.current.MENU_BORDER_RADIUS}, ${Theme.current.MENU_BORDER_RADIUS})`);\n    textInputElem.setAttribute(\"width\", Theme.current.MENU_MIN_WIDTH - 2 * Theme.current.MENU_BORDER_RADIUS);\n    textInputElem.setAttribute(\"height\", Theme.current.MENU_ITEM_HEIGHT);\n\n    this.#inputElement = document.createElement(\"input\");\n    this.#inputElement.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      width: ${textInputElem.getAttribute(\"width\") - 10}px; // 10px less than foreignObject\n      height: ${20}px;\n      border: 0;\n      padding: 2px;\n      margin: 2px;\n    `;\n    this.#inputElement.setAttribute(\"value\", \"\");\n    this.#inputElement.setAttribute(\"type\", \"text\");\n\n    let self = this;\n    this.#inputElement.addEventListener(\"input\", (e) => {\n      self.#searchFilter = this.#inputElement.value;\n      self.createMenuItemsElements();\n    });\n    this.#inputElement.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 27) {\n        self.canvas.cancelContextMenu();\n\n        // If there is client of the menu interested to user selection or abort\n        if (self.menuCallback) {\n          self.menuCallback(null);\n          self.menuCallback = null;\n        }\n        return;\n      }\n      if (e.keyCode === 13) {\n        if (self.filteredElements.length > 0) {\n          let menuEl = this.canvas.contextMenuComponent.componentEl.getBoundingClientRect();\n          let p = this.canvas.clientToSvgPoint(menuEl.left, menuEl.top);\n\n          // Items can return a result to inform the menu client about the item selection\n          let itemResult = self.filteredElements[0].callback(p.x, p.y);\n\n          // If there is client of the menu interested to user selection or abort\n          if (self.menuCallback) {\n            self.menuCallback(itemResult);\n            self.menuCallback = null;\n          }\n\n          self.canvas.cancelContextMenu();\n\n          return;\n        }\n      }\n    });\n\n    textInputElem.appendChild(this.#inputElement);\n\n    this.#containerEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    this.#containerEl.setAttribute(\"fill\", Theme.current.MENU_FILL_COLOR);\n    this.#containerEl.setAttribute(\"stroke\", Theme.current.MENU_STROKE_COLOR);\n    this.#containerEl.setAttribute(\"stroke-width\", Theme.current.MENU_STROKE_WIDTH);\n    this.#containerEl.setAttribute(\"filter\", \"url(#dropshadow)\");\n\n    menuEl.appendChild(this.#containerEl);\n    menuEl.appendChild(textInputElem);\n\n    return menuEl;\n  }\n\n  /**\n   * Creates/Updates menu items based on the search input field, and\n   * adjust the size of the container element\n   */\n  createMenuItemsElements() {\n    this.#containerEl.setAttribute(\n      \"d\",\n      `\n      M 0 ${Theme.current.MENU_BORDER_RADIUS * 1.3} \n      A ${Theme.current.MENU_BORDER_RADIUS * 1.3} ${Theme.current.MENU_BORDER_RADIUS * 1.3} 0 0 1 ${Theme.current.MENU_BORDER_RADIUS * 1.3} 0 \n      L ${Theme.current.MENU_MIN_WIDTH - Theme.current.MENU_BORDER_RADIUS} 0 \n      A ${Theme.current.MENU_BORDER_RADIUS} ${Theme.current.MENU_BORDER_RADIUS} 0 0 1 ${Theme.current.MENU_MIN_WIDTH} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } \n      L ${Theme.current.MENU_MIN_WIDTH} ${this.height - Theme.current.MENU_BORDER_RADIUS} \n      A ${Theme.current.MENU_BORDER_RADIUS} ${Theme.current.MENU_BORDER_RADIUS} 0 0 1 ${\n        Theme.current.MENU_MIN_WIDTH - Theme.current.MENU_BORDER_RADIUS\n      } ${this.height} \n      L ${Theme.current.MENU_BORDER_RADIUS} ${this.height} \n      A ${Theme.current.MENU_BORDER_RADIUS} ${Theme.current.MENU_BORDER_RADIUS} 0 0 1 0 ${this.height - Theme.current.MENU_BORDER_RADIUS} \n      Z\n      `\n    );\n\n    while (this.#itemsEls.length > 0) {\n      this.componentEl.removeChild(this.#itemsEls[0].itemEl);\n      this.componentEl.removeChild(this.#itemsEls[0].itemTextEl);\n      this.#itemsEls.splice(0, 1);\n    }\n\n    // Create menu items\n    for (let [i, item] of this.filteredElements.entries()) {\n      let itemX = Theme.current.MENU_BORDER_RADIUS;\n      let itemY = Theme.current.MENU_BORDER_RADIUS + Theme.current.MENU_ITEM_HEIGHT * (i + 1);\n      let itemWidth = Theme.current.MENU_MIN_WIDTH - 2 * Theme.current.MENU_BORDER_RADIUS;\n      let itemHeight = Theme.current.MENU_ITEM_HEIGHT;\n\n      let itemEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      itemEl.setAttribute(\"x\", itemX);\n      itemEl.setAttribute(\"y\", itemY);\n      itemEl.setAttribute(\"width\", itemWidth);\n      itemEl.setAttribute(\"height\", itemHeight);\n      itemEl.setAttribute(\"style\", Theme.current.MENU_ITEM_FONT);\n      itemEl.setAttribute(\"stroke\", \"transparent\");\n      itemEl.setAttribute(\"stroke-width\", 0);\n      itemEl.setAttribute(\"fill\", \"transparent\");\n\n      let itemTextEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n      itemTextEl.setAttribute(\"x\", itemX + 5);\n      itemTextEl.setAttribute(\"y\", itemY + Theme.current.MENU_ITEM_HEIGHT / 2);\n      itemTextEl.setAttribute(\"width\", itemWidth - 10);\n      itemTextEl.setAttribute(\"height\", itemHeight - 10);\n      itemTextEl.setAttribute(\"style\", Theme.current.MENU_ITEM_FONT);\n      // itemTextEl.setAttribute(\"alignment-baseline\", \"middle\");\n      itemTextEl.style[\"pointer-events\"] = \"none\";\n      itemTextEl.style[\"user-select\"] = \"none\";\n      itemTextEl.innerHTML = item.text;\n\n      itemEl.addEventListener(\"pointerenter\", (e) => {\n        itemEl.setAttribute(\"fill\", Theme.current.MENU_ITEM_HIGHLIGHT);\n      });\n      itemEl.addEventListener(\"pointerleave\", (e) => {\n        itemEl.setAttribute(\"fill\", \"transparent\");\n      });\n      itemEl.addEventListener(\"pointerdown\", (e) => {\n        let menuEl = this.canvas.contextMenuComponent.componentEl.getBoundingClientRect();\n        let p = this.canvas.clientToSvgPoint(menuEl.left, menuEl.top);\n\n        let result = item.callback(p.x, p.y);\n\n        // If there is client of the menu interested to user selection or abort\n        if (this.menuCallback) {\n          this.menuCallback(result);\n          this.menuCallback = null;\n        }\n        this.canvas.cancelContextMenu();\n      });\n\n      this.componentEl.appendChild(itemEl);\n      this.componentEl.appendChild(itemTextEl);\n      this.#itemsEls.push({ itemEl: itemEl, itemTextEl: itemTextEl });\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Socket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Position } from \"../canvas/position\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { Theme } from \"./theme\";\n\n/**\n * This class is the base class for all sockets components\n * of cnodes. The class introduces the socket field that is\n * a \"cnodes\" socket the internal structure to store links\n * between cnodes nodes. In addition implements the base functionality\n * of the \"smart\" connection flow, in case the user drag out\n * of a socket component and release the pointer outside of\n * a destination socket\n */\nexport class CnodesSocketComponent extends SocketComponent {\n  /** The cnodes socket object */\n  #socket = null;\n\n  /**\n   * Construct a new CnodesSocket object\n   * @param {Socket} socket The internal cnodes socket object\n   */\n  constructor(socket) {\n    super();\n    this.#socket = socket;\n  }\n\n  get socket() {\n    return this.#socket;\n  }\n\n  /**\n   * The user has released the pointer button out of a valid socket,\n   * display a context menu that presents all valid possible nodes\n   * and relative sockets to connect...\n   * Possible nodes items are returned by subclasses; this method display the\n   * context menu via canvas.showContextMenu(...) and specifying a menuCallback\n   * that inform this client about the final selection of the user, so\n   * complete the connection or abort that\n   * @param {Event} e The event pointerup\n   */\n  connectionEndedOutOfSocket(e) {\n    // Enumerates all possible socket to connect\n    let items = this.getRegisteredPossiblePeers();\n\n    let p = this.canvas.clientToSvgPoint(e.clientX, e.clientY);\n    this.canvas.showContextMenu(items, p.x, p.y, (socketComp) => {\n      if (!socketComp) {\n        this.canvas.connectionsEl.removeChild(this.tempConnectionEl);\n        this.tempConnectionEl = null;\n      } else {\n        this.connectionDone(socketComp);\n      }\n    });\n  }\n\n  /**\n   * The user is moving the pointer around, with a connection pending\n   * @param {number} x The x coordinate in SVG space\n   * @param {number} y The y coordinate in SVG space\n   * @param {boolean} invalid true if the pointer is overing a unacceptable socket\n   */\n  connectionMoving(x, y, invalid) {\n    let sourcePoint = new Position(this.absPos.x, this.absPos.y);\n    let targetPoint = new Position(\n      this.currentPeerSocketComponent ? this.currentPeerSocketComponent.absPos.x : x,\n      this.currentPeerSocketComponent ? this.currentPeerSocketComponent.absPos.y : y\n    );\n\n    let cpXDistance = Math.max(0.8 * Math.abs(sourcePoint.x - targetPoint.x), 100);\n    let cp1 = sourcePoint.add(new Position(cpXDistance * this.getSourcePointDirection(), -0.1 * (sourcePoint.y - targetPoint.y)));\n    let cp2 = targetPoint.add(new Position(-cpXDistance * this.getSourcePointDirection(), 0.1 * (sourcePoint.y - targetPoint.y)));\n\n    this.tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${this.absPos.x} ${this.absPos.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.tempConnectionEl.setAttribute(\"stroke-width\", Theme.current.CONNECTION_TEMP_WIDTH);\n    this.tempConnectionEl.setAttribute(\n      \"stroke\",\n      invalid\n        ? Theme.current.CONNECTION_TEMP_INVALID_COLOR\n        : this.currentPeerSocketComponent\n        ? Theme.current.CONNECTION_TEMP_VALID_COLOR\n        : Theme.current.CONNECTION_TEMP_COLOR\n    );\n    this.tempConnectionEl.setAttribute(\"stroke-dasharray\", \"5 5\");\n    this.tempConnectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * Remove the internal socket reference to the component\n   * upon destroy\n   */\n  destroy() {\n    this.socket.__comp = null;\n    super.destroy();\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"./theme\";\nimport { OutputSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { IOConnection } from \"../connections/io_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { Position } from \"../canvas/position\";\n\n/**\n * This class implement a socket to draw a Input element\n * in the cnodes world\n */\nexport class InputSocketComponent extends CnodesSocketComponent {\n  /** A reference to the imput value element */\n  #inputValueElement = null;\n\n  /** A reference to the imput name element, if there is one */\n  #inputNameElement = null;\n\n  /** A reference to the label element, if there is one */\n  #labelElement = null;\n\n  /** The symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n\n    this.#socketSymbol.setAttribute(\"cx\", 0);\n    this.#socketSymbol.setAttribute(\"cy\", 0);\n    this.#socketSymbol.setAttribute(\"r\", Theme.current.NODE_IO_POINT_RADIUS);\n    this.#socketSymbol.setAttribute(\"stroke-width\", Theme.current.NODE_IO_STROKE_WIDTH);\n    this.#socketSymbol.setAttribute(\"stroke\", Theme.current.NODE_IO_STROKE_COLOR);\n    this.#socketSymbol.setAttribute(\"fill\", Theme.current.NODE_IO_FILL_COLOR);\n    \n    let textInputNameElem = null;\n\n    /*\n     * If this socket can edit name, we create an input element for\n     * this name, otherwise, we create a label\n     */\n    if(this.socket.canEditName) {\n      textInputNameElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n      textInputNameElem.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        line-height: 30px;\n        user-select: none;\n        pointer-events: auto;\n      `;\n  \n      textInputNameElem.setAttribute(\"x\", 0);\n      textInputNameElem.setAttribute(\"y\", 0);\n      textInputNameElem.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n      textInputNameElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n      textInputNameElem.setAttribute(\"height\", 30);\n  \n      this.#inputNameElement = document.createElement(\"input\");\n      this.#inputNameElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        width: ${Theme.current.NODE_WIDTH / 2 - 25}px; // 5px less than foreignObject\n        height: ${20}px;\n        border: 0;\n        padding: 2px;\n        margin: 2px;\n      `;\n  \n      this.#inputNameElement.addEventListener(\"keyup\", (e) => {\n        this.socket.name = e.target.value;\n      });\n  \n      this.#inputNameElement.setAttribute(\"value\", this.socket.name);\n      this.#inputNameElement.setAttribute(\"type\", \"text\");\n  \n      textInputNameElem.appendChild(this.#inputNameElement);\n  \n    } else {\n      this.#labelElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n      this.#labelElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n        height: 30px;\n        line-height: 30px;\n        user-select: none;\n      `;\n  \n      this.#labelElement.innerHTML = `${this.socket.name}`;\n  \n      this.#labelElement.setAttribute(\"x\", 0);\n      this.#labelElement.setAttribute(\"y\", 0);\n      this.#labelElement.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n      this.#labelElement.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n      this.#labelElement.setAttribute(\"height\", 30);\n    }\n\n    let textInputValueElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n    textInputValueElem.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      text-align: left;\n      line-height: 30px;\n      user-select: none;\n      pointer-events: auto;\n    `;\n\n    textInputValueElem.setAttribute(\"x\", 0);\n    textInputValueElem.setAttribute(\"y\", 0);\n    textInputValueElem.setAttribute(\"transform\", `translate(${Theme.current.NODE_WIDTH / 2}, ${-15})`);\n    textInputValueElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    textInputValueElem.setAttribute(\"height\", 30);\n\n    this.#inputValueElement = document.createElement(\"input\");\n    this.#inputValueElement.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      width: ${Theme.current.NODE_WIDTH / 2 - 25}px; // 5px less than foreignObject\n      height: ${20}px;\n      border: 0;\n      padding: 2px;\n      margin: 2px;\n    `;\n\n    this.#inputValueElement.addEventListener(\"keyup\", (e) => {\n      this.socket.value = e.target.value;\n    });\n\n    this.#inputValueElement.setAttribute(\"value\", this.socket.value);\n    this.#inputValueElement.setAttribute(\"type\", \"text\");\n\n    textInputValueElem.appendChild(this.#inputValueElement);\n\n    let inputElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    inputElem.setAttribute(\"x\", 0);\n    inputElem.setAttribute(\"y\", 0);\n    inputElem.appendChild(this.#socketSymbol);\n\n    if(this.socket.canEditName) {\n      inputElem.appendChild(textInputNameElem);\n    } else {\n      inputElem.appendChild(this.#labelElement);\n    }\n    \n    inputElem.appendChild(textInputValueElem);\n\n    return inputElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // This creates the connection and connects sockets\n    new IOConnection(socketComp, this, this.canvas);\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof OutputSocket;\n  }\n\n  /**\n   * This socket supports single connection, so if the user\n   * connects another socket to it, we have to delete previous connections\n   */\n  get hasSingleConnection() {\n    return true;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return -1;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed. In addition, this override will reflect the status of the\n   * socket by hiding/showing the text field related to the input socket\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    // Show/Hide the imput component\n    this.#inputValueElement.style[\"display\"] = this.isConnected ? \"none\" : \"table-cell\";\n\n    if(this.socket.canEditName) {\n      this.#inputNameElement.value = `${this.socket.name}`;\n    } else {\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n    }\n    this.socket.value = this.#inputValueElement.value;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let out of n.outputs) {\n            items.push(\n              new MenuItem(\n                `\n                <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_IO_FILL_COLOR}\">\n                  ${out.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                  ${nodeDef.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                  ${nodeDef.category}\n                </tspan>\n                `,\n                (x, y) => {\n                  // create the node and return the specific socket component to\n                  // the context menu client\n                  let node = new CnodeComponent(n, this.canvas);\n                  node.pos = new Position(x, y);\n                  // Return the connected component instead\n                  return out.__comp;\n                }\n              )\n            );\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conn = this.canvas.getConnectionsFor(this)[0];\n    if (conn) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Disconnect</tspan>`, () => {\n          // Disconnect this socket\n          this.canvas.removeConnection(conn);\n          this.socket.disconnect();\n        })\n      );\n    }\n    if (this.socket.node.canRemoveInput(this.socket)) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Delete input</tspan>`, () => {\n          // First, disconnect if connected\n          let conn = this.canvas.getConnectionsFor(this)[0];\n          if (conn) {\n            this.canvas.removeConnection(conn);\n            this.socket.disconnect();\n          }\n          this.socket.node.removeInput(this.socket);\n          this.parent.removeComponent(this);\n          this.parent.updateSVGElement();\n        })\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { PrevSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Theme } from \"./theme\";\nimport { Position } from \"../canvas/position\";\nimport { PrevNextConnection } from \"../connections/prevnext_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\n\n/**\n * This class implements a socket representing the Next socket in the\n * cnodes context\n */\nexport class NextSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    this.#socketSymbol.setAttribute(\n      \"d\",\n      `\n      M -7 -8\n      L 7 -8\n      L 12 0\n      L 7 8\n      L -7 8\n      Z\n      `\n    );\n    this.#socketSymbol.setAttribute(\"stroke\", Theme.current.NODE_PREV_NEXT_STROKE_COLOR);\n    this.#socketSymbol.setAttribute(\"stroke-width\", Theme.current.NODE_PREV_NEXT_STROKE_WIDTH);\n    this.#socketSymbol.setAttribute(\"fill\", Theme.current.NODE_PREV_NEXT_FILL_COLOR);\n\n    let labelElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n    labelElem.style = `\n      font: ${Theme.current.NODE_PREV_NEXT_NAME_FONT}; \n      color: ${Theme.current.NODE_PREV_NEXT_NAME_COLOR}; \n      text-align: right;\n      width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n      height: 30px;\n      line-height: 30px;\n      user-select: none;\n      `;\n\n    labelElem.innerHTML = `${this.socket.name}`;\n\n    labelElem.setAttribute(\"x\", 0);\n    labelElem.setAttribute(\"y\", 0);\n    labelElem.setAttribute(\"transform\", `translate(${-Theme.current.NODE_WIDTH / 2}, ${-15})`);\n    labelElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    labelElem.setAttribute(\"height\", 30);\n\n    let prevElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    prevElem.setAttribute(\"x\", 0);\n    prevElem.setAttribute(\"y\", 0);\n    prevElem.appendChild(this.#socketSymbol);\n    prevElem.appendChild(labelElem);\n\n    return prevElem;\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof PrevSocket;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // This creates the connection and connects sockets\n    new PrevNextConnection(this, socketComp, this.canvas);\n  }\n\n  /**\n   * Quesry if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof PrevSocket;\n  }\n\n  /**\n   * This socket supports single connection, so if the user\n   * connects another socket to it, we have to delete previous connections\n   */\n  get hasSingleConnection() {\n    return true;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return 1;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable && n.prev) {\n          items.push(\n            new MenuItem(\n              `\n              <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_PREV_NEXT_FILL_COLOR}\">\n                ${n.prev.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n              ${nodeDef.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n              ${nodeDef.category}\n              </tspan>\n              `,\n              (x, y) => {\n                // create the node and return the specific socket component to\n                // the context menu client\n                let node = new CnodeComponent(n, this.canvas);\n                node.pos = new Position(x, y);\n                // Return the connected component instead\n                return n.prev.__comp;\n              }\n            )\n          );\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conn = this.canvas.getConnectionsFor(this)[0];\n    if (conn) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Disconnect</tspan>`, () => {\n          // Disconnect this socket\n          this.canvas.removeConnection(conn);\n          this.socket.disconnect();\n        })\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"./theme\";\nimport { InputSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { IOConnection } from \"../connections/io_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { Position } from \"../canvas/position\";\n\n/**\n * This class implements a socket representing a Output in the\n * cnodes world\n */\nexport class OutputSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  /** A reference to the output name element, if there is one */\n  #outputNameElement = null;\n\n  /** A reference to the label element, if there is one */\n  #labelElement = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n\n    this.#socketSymbol.setAttribute(\"cx\", 0);\n    this.#socketSymbol.setAttribute(\"cy\", 0);\n    this.#socketSymbol.setAttribute(\"r\", Theme.current.NODE_IO_POINT_RADIUS);\n    this.#socketSymbol.setAttribute(\"stroke-width\", Theme.current.NODE_IO_STROKE_WIDTH);\n    this.#socketSymbol.setAttribute(\"stroke\", Theme.current.NODE_IO_STROKE_COLOR);\n    this.#socketSymbol.setAttribute(\"fill\", Theme.current.NODE_IO_FILL_COLOR);\n    \n    let textOutputNameElem = null;\n\n    /*\n     * If this socket can edit name, we create an output element for\n     * this name, otherwise, we create a label\n     */\n    if(this.socket.canEditName) {\n      textOutputNameElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n      textOutputNameElem.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        line-height: 30px;\n        user-select: none;\n        pointer-events: auto;\n      `;\n  \n      textOutputNameElem.setAttribute(\"x\", 0);\n      textOutputNameElem.setAttribute(\"y\", 0);\n      textOutputNameElem.setAttribute(\"transform\", `translate(${-Theme.current.NODE_WIDTH / 2}, ${-15})`);\n      textOutputNameElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n      textOutputNameElem.setAttribute(\"height\", 30);\n  \n      this.#outputNameElement = document.createElement(\"input\");\n      this.#outputNameElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        width: ${Theme.current.NODE_WIDTH / 2 - 25}px; // 5px less than foreignObject\n        height: ${20}px;\n        border: 0;\n        padding: 2px;\n        margin: 2px;\n        text-align: right\n      `;\n  \n      this.#outputNameElement.addEventListener(\"keyup\", (e) => {\n        this.socket.name = e.target.value;\n      });\n  \n      this.#outputNameElement.setAttribute(\"value\", this.socket.name);\n      this.#outputNameElement.setAttribute(\"type\", \"text\");\n  \n      textOutputNameElem.appendChild(this.#outputNameElement);\n  \n    } else {\n      this.#labelElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n      this.#labelElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: right;\n        width: ${Theme.current.NODE_WIDTH - 30}px;\n        height: 30px;\n        line-height: 30px;\n        user-select: none;\n        `;\n  \n      this.#labelElement.innerHTML = `${this.socket.name}`;\n  \n      this.#labelElement.setAttribute(\"x\", 0);\n      this.#labelElement.setAttribute(\"y\", 0);\n      this.#labelElement.setAttribute(\"transform\", `translate(${-Theme.current.NODE_WIDTH + 15}, ${-15})`);\n      this.#labelElement.setAttribute(\"width\", Theme.current.NODE_WIDTH - 30);\n      this.#labelElement.setAttribute(\"height\", 30);\n      }\n\n    let outputElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    outputElem.setAttribute(\"x\", 0);\n    outputElem.setAttribute(\"y\", 0);\n    outputElem.appendChild(this.#socketSymbol);\n\n    if(this.socket.canEditName) {\n      outputElem.appendChild(textOutputNameElem);\n    } else {\n      outputElem.appendChild(this.#labelElement);\n    }\n\n    return outputElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // if there is another connection for the target component,\n    // delete the oldest one\n    if (socketComp.isConnected) {\n      this.canvas.removeConnection(this.canvas.getConnectionsFor(socketComp)[0]);\n    }\n\n    // This creates the connection and connects sockets\n    new IOConnection(this, socketComp, this.canvas);\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof InputSocket;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return 1;\n  }\n\n  /**\n   * This socket is a multi-connection socket. This means that\n   * many sockets can be connected to it\n   */\n  get hasSingleConnection() {\n    return false;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let inp of n.inputs) {\n            items.push(\n              new MenuItem(\n                `\n                <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_IO_FILL_COLOR}\">\n                  ${inp.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                  ${nodeDef.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                  ${nodeDef.category}\n                </tspan>\n                `,\n                (x, y) => {\n                  // create the node and return the specific socket component to\n                  // the context menu client\n                  let node = new CnodeComponent(n, this.canvas);\n                  node.pos = new Position(x, y);\n                  // Return the connected component instead\n                  return inp.__comp;\n                }\n              )\n            );\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conns = this.canvas.getConnectionsFor(this);\n    if (conns.length > 0) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`, () => {\n          for (let c of conns) {\n            // Disconnect this socket\n            this.canvas.removeConnection(c);\n            this.socket.disconnect(c.target);\n          }\n        })\n      );\n    }\n    if (this.socket.node.canRemoveOutput(this.socket)) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Delete output</tspan>`, () => {\n          // First, disconnect all peers\n          let conns = this.canvas.getConnectionsFor(this);\n          if (conns.length > 0) {\n            for(let c of conns) {\n              this.canvas.removeConnection(c);\n              this.socket.disconnect(c.target);\n            }\n          }\n          this.socket.node.removeOutput(this.socket);\n          this.parent.removeComponent(this);\n          this.parent.updateSVGElement();\n        })\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { NextSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Theme } from \"./theme\";\nimport { PrevNextConnection } from \"../connections/prevnext_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { Position } from \"../canvas/position\";\n\n/**\n * This class implements a socket that represents a Prev object\n * in the cnodes world\n */\nexport class PrevSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    this.#socketSymbol.setAttribute(\n      \"d\",\n      `\n      M ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS}\n      L ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS}\n      Z\n      `\n    );\n    this.#socketSymbol.setAttribute(\"stroke\", Theme.current.NODE_PREV_NEXT_STROKE_COLOR);\n    this.#socketSymbol.setAttribute(\"stroke-width\", Theme.current.NODE_PREV_NEXT_STROKE_WIDTH);\n    this.#socketSymbol.setAttribute(\"fill\", Theme.current.NODE_PREV_NEXT_FILL_COLOR);\n\n    let labelElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n    labelElem.style = `\n      font: ${Theme.current.NODE_PREV_NEXT_NAME_FONT}; \n      color: ${Theme.current.NODE_PREV_NEXT_NAME_COLOR}; \n      text-align: left;\n      width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n      height: 30px;\n      line-height: 30px;\n      user-select: none;\n      `;\n\n    labelElem.innerHTML = `${this.socket.name}`;\n\n    labelElem.setAttribute(\"x\", 0);\n    labelElem.setAttribute(\"y\", 0);\n    labelElem.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n    labelElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    labelElem.setAttribute(\"height\", 30);\n\n    let prevElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    prevElem.setAttribute(\"x\", 0);\n    prevElem.setAttribute(\"y\", 0);\n    prevElem.appendChild(this.#socketSymbol);\n    prevElem.appendChild(labelElem);\n\n    return prevElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // if there is another connection for the target component,\n    // delete the oldest one\n    if (socketComp.isConnected) {\n      this.canvas.removeConnection(this.canvas.getConnectionsFor(socketComp)[0]);\n    }\n\n    // This creates the connection and connects sockets\n    new PrevNextConnection(socketComp, this, this.canvas);\n  }\n\n  /**\n   * Quesry if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof NextSocket;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return -1;\n  }\n\n  /**\n   * This socket is a multi-connection socket. This means that\n   * many sockets can be connected to it\n   */\n  get hasSingleConnection() {\n    return false;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let next of n.nexts) {\n            items.push(\n              new MenuItem(\n                `\n                <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_PREV_NEXT_FILL_COLOR}\">\n                  ${next.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                  ${nodeDef.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                  ${nodeDef.category}\n                </tspan>\n                `,\n                (x, y) => {\n                  // create the node and return the specific socket component to\n                  // the context menu client\n                  let node = new CnodeComponent(n, this.canvas);\n                  node.pos = new Position(x, y);\n                  // Return the connected component instead\n                  return next.__comp;\n                }\n              )\n            );\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conns = this.canvas.getConnectionsFor(this);\n    if (conns.length > 0) {\n      items.push(\n        new MenuItem(`<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`, () => {\n          for (let c of conns) {\n            // Disconnect this socket\n            this.canvas.removeConnection(c);\n            this.socket.disconnect(c.source);\n          }\n        })\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * This class contains all values needed to draw all elements\n * of design for cnodes-ui. The user can customize the graphic\n * aspect of element by defining a theme.\n * For exemple to modify the node with you can define your own\n * property inside a custom theme:\n *\n * class MyTheme extends cnui.Theme {\n *   get NODE_WIDTH() {\n *     return 400;\n *   }\n * }\n *\n * Now activate the theme by setting:\n *\n * cnui.Theme.current = new MyTheme();\n *\n */\nexport class Theme {\n  constructor() {}\n\n  // Canvas\n\n  get CANVAS_BACKGROUND_COLOR() {\n    return \"white\";\n  }\n\n  // Node container\n\n  get NODE_WIDTH() {\n    return 200;\n  }\n\n  get NODE_BORDER_RADIUS() {\n    return 15;\n  }\n  get NODE_FILL_COLOR() {\n    return \"#FAD7A0\";\n  }\n  get NODE_FUNCTIONAL_FILL_COLOR() {\n    return \"#C5F0FF\";\n  }\n  get NODE_STROKE_COLOR() {\n    return \"#FFFFFF\";\n  }\n  get NODE_FUNCTIONAL_STROKE_COLOR() {\n    return \"#FFFFFF\";\n  }\n  get NODE_STROKE_WIDTH() {\n    return 3;\n  }\n\n  get NODE_TITLE_COLOR() {\n    return \"brown\";\n  }\n  get NODE_FUNCTIONAL_TITLE_COLOR() {\n    return \"#069DD1\";\n  }\n  get NODE_TITLE_FONT() {\n    return \"bold 18px verdana\";\n  }\n\n  get NODE_SYMBOL_STROKE_WIDTH() {\n    return 3;\n  }\n  get NODE_SYMBOL_STROKE_COLOR() {\n    return \"#FEF9E7\";\n  }\n  get NODE_SYMBOL_FILL_COLOR() {\n    return \"#FEF9E7\";\n  }\n\n  get NODE_SIGN_COLOR() {\n    return \"#31A200\";\n  }\n\n  get NODE_FUNCTIONAL_SIGN_COLOR() {\n    return \"#008EBF\";\n  }\n\n  // Sockets\n\n  get NODE_PREV_NEXT_STROKE_WIDTH() {\n    return 2;\n  }\n  get NODE_PREV_NEXT_STROKE_COLOR() {\n    return \"#31A200\";\n  }\n  get NODE_PREV_NEXT_FILL_COLOR() {\n    return \"#31A200\";\n  }\n  get NODE_PREV_NEXT_NAME_FONT() {\n    return \"bold 11px verdana\";\n  }\n  get NODE_PREV_NEXT_NAME_COLOR() {\n    return \"bold 11px black\";\n  }\n  get NODE_PREV_NEXT_POINT_RADIUS() {\n    return 8;\n  }\n\n  get NODE_IO_STROKE_WIDTH() {\n    return 2;\n  }\n  get NODE_IO_STROKE_COLOR() {\n    return \"#008EBF\";\n  }\n  get NODE_IO_FILL_COLOR() {\n    return \"#008EBF\";\n  }\n  get NODE_IO_NAME_FONT() {\n    return \"bold 11px verdana\";\n  }\n  get NODE_IO_NAME_COLOR() {\n    return \"bold 11px black\";\n  }\n  get NODE_IO_POINT_RADIUS() {\n    return 10;\n  }\n\n  // IO Connections\n\n  get CONNECTION_TEMP_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_TEMP_INVALID_COLOR() {\n    return \"red\";\n  }\n  get CONNECTION_TEMP_VALID_COLOR() {\n    return \"gray\";\n  }\n  get CONNECTION_TEMP_COLOR() {\n    return \"#DDDDDD\";\n  }\n  get CONNECTION_IO_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_IO_COLOR() {\n    return \"#008EBF\";\n  }\n  get CONNECTION_PREV_NEXT_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_PREV_NEXT_COLOR() {\n    return \"#31A200\";\n  }\n\n  // Menu\n\n  get MENU_MIN_WIDTH() {\n    return 200;\n  }\n  get MENU_BORDER_RADIUS() {\n    return 10;\n  }\n  get MENU_FILL_COLOR() {\n    return \"#F3F3F3\";\n  }\n  get MENU_STROKE_COLOR() {\n    return \"#EEEEEE\";\n  }\n  get MENU_STROKE_WIDTH() {\n    return 2;\n  }\n  get MENU_ITEM_HEIGHT() {\n    return 33;\n  }\n  get MENU_ITEM_FONT() {\n    return \"font: bold 14px sans-serif\";\n  }\n  get MENU_ITEM_CATEGORY_FONT() {\n    return \"font: bold 10px sans-serif\";\n  }\n  get MENU_ITEM_COLOR() {\n    return \"black\";\n  }\n  get MENU_ITEM_CATEGORY_COLOR() {\n    return \"lightgray\";\n  }\n  get MENU_ITEM_HIGHLIGHT() {\n    return \"white\";\n  }\n  get MENU_SEARCH_FONT() {\n    return \"bold 11px verdana\";\n  }\n\n  static current = new Theme();\n}\n\n/** Default Light Theme */\nexport const defaultLight = new Theme();\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Connection } from \"../canvas/connection\";\nimport { Position } from \"../canvas/position\";\nimport { Theme } from \"../components/theme\";\n\n/**\n * This class implements a connection for Input->Output connection\n * in the cnodes world. It embed both source and target sockets that\n * must be of type InputSocketComponent and OutputSocketComponent, and manages\n * the connection status of the embedded cnodes's socket\n */\nexport class IOConnection extends Connection {\n  constructor(source, target, canvas) {\n    super(source, target);\n    super.setup();\n    canvas.addConnection(this);\n    this.updateSVGElement();\n\n    if (canvas.program) {\n      // Connect cnodes sockets\n      this.source.socket.connect(this.target.socket);\n    }\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    let el = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    return el;\n  }\n\n  /**\n   * Update the aspect of the connection\n   */\n  updateSVGElement() {\n    let sourcePoint = new Position(this.source.absPos.x, this.source.absPos.y);\n    let targetPoint = new Position(this.target.absPos.x - Theme.current.NODE_IO_POINT_RADIUS, this.target.absPos.y);\n\n    let cpXDistance = Math.max(0.8 * Math.abs(sourcePoint.x - targetPoint.x), 100);\n    let cp1 = sourcePoint.add(new Position(cpXDistance, -0.1 * (sourcePoint.y - targetPoint.y)));\n    let cp2 = targetPoint.add(new Position(-cpXDistance, 0.1 * (sourcePoint.y - targetPoint.y)));\n\n    this.connectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.connectionEl.setAttribute(\"stroke-width\", Theme.current.CONNECTION_IO_WIDTH);\n    this.connectionEl.setAttribute(\"stroke\", Theme.current.CONNECTION_IO_COLOR);\n    this.connectionEl.setAttribute(\"marker-end\", \"url(#io-arrow)\");\n    this.connectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * Diconnect the internal cnodes sockets\n   */\n  destroy() {\n    // If there is an active program, remove the connection\n    if (this.canvas.program) {\n      this.source.socket.disconnect(this.target.socket);\n    }\n    super.destroy();\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Connection } from \"../canvas/connection\";\nimport { Position } from \"../canvas/position\";\nimport { Theme } from \"../components/theme\";\n\n/**\n * This class implements a connection for Input->Output connection\n * in the cnodes world. It embed both source and target sockets that\n * must be of type InputSocketComponent and OutputSocketComponent, and manages\n * the connection status of the embedded cnodes's socket\n */\nexport class PrevNextConnection extends Connection {\n  constructor(source, target, canvas, connect = true) {\n    super(source, target);\n    super.setup();\n    canvas.addConnection(this);\n    this.updateSVGElement();\n\n    if (connect) {\n      // Connect cnodes sockets\n      this.source.socket.connect(this.target.socket);\n    }\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    let el = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    return el;\n  }\n\n  /**\n   * Update the aspect of the connection\n   */\n  updateSVGElement() {\n    let sourcePoint = new Position(this.source.absPos.x, this.source.absPos.y);\n    let targetPoint = new Position(this.target.absPos.x - Theme.current.NODE_PREV_NEXT_POINT_RADIUS, this.target.absPos.y);\n\n    let cpXDistance = Math.max(0.8 * Math.abs(sourcePoint.x - targetPoint.x), 100);\n    let cp1 = sourcePoint.add(new Position(cpXDistance, -0.1 * (sourcePoint.y - targetPoint.y)));\n    let cp2 = targetPoint.add(new Position(-cpXDistance, 0.1 * (sourcePoint.y - targetPoint.y)));\n\n    this.connectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.connectionEl.setAttribute(\"stroke-width\", Theme.current.CONNECTION_PREV_NEXT_WIDTH);\n    this.connectionEl.setAttribute(\"stroke\", Theme.current.CONNECTION_PREV_NEXT_COLOR);\n    this.connectionEl.setAttribute(\"marker-end\", \"url(#prevnext-arrow)\");\n    this.connectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * Diconnect the internal cnodes sockets\n   */\n  destroy() {\n    // If there is an active program, remove the connection\n    if (this.canvas.program) {\n      this.source.socket.disconnect(this.target.socket);\n    }\n    super.destroy();\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Canvas } from \"./canvas/canvas\";\nimport { Component } from \"./canvas/component\";\nimport { Position } from \"./canvas/position\";\nimport { CnodeComponent } from \"./components/cnode\";\nimport { Theme, defaultLight } from \"./components/theme\";\nimport { CnodesCanvas } from \"./components/cnodescanvas\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\n\nexport { Canvas, Component, CnodeComponent, Position, Theme, defaultLight, CnodesCanvas };\n\nexport * from \"@marco.jacovone/cnodes/cnodes\";\n\n/**\n * This is the main entrypoint function. You can pass an ID of a\n * DOM element by parameter (tipically a DIV element).\n * For example, having a simple DOM element like\n *\n * <div id=\"mycanvas\" class=\"fullscreen\"></div>\n *\n * You can do\n *\n * <script>\n *  let canvas = cnui.canvas('mycanvas');\n *  let prg = cnui.Env.import(JSON.parse('...'));\n *  canvas.program = prg;\n * </script>\n *\n * @param {string} elId The id of the DOM element you want to become a CNODES-UI canvas\n */\nexport function canvas(elId) {\n  let el = document.getElementById(elId);\n  if (!el) {\n    console.log(`No element with id '${elId}'`);\n    return null;\n  }\n  Env.init();\n  return new CnodesCanvas(el);\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n// Export core nodes\nexport * from \"./lib/core/env.js\";\nexport * from \"./lib/core/node.js\";\nexport * from \"./lib/core/program.js\";\nexport * from \"./lib/core/socket.js\";\nexport * from \"./lib/core/type.js\";\nexport * from \"./lib/nodes/call.js\";\nexport * from \"./lib/nodes/console.js\";\nexport * from \"./lib/nodes/fgetvar.js\";\nexport * from \"./lib/nodes/for.js\";\nexport * from \"./lib/nodes/getvar.js\";\nexport * from \"./lib/nodes/if.js\";\nexport * from \"./lib/nodes/setvar.js\";\nexport * from \"./lib/nodes/while.js\";\nexport * from \"./lib/nodes/fif.js\";\n\n// Export boolean nodes\nexport * from \"./lib/nodes/bool/fcompare.js\";\n\n// Export string nodes\nexport * from \"./lib/nodes/string/fsconst.js\";\nexport * from \"./lib/nodes/string/fconcat.js\";\n\n// Export math nodes\nexport * from \"./lib/nodes/math/fnconst.js\";\nexport * from \"./lib/nodes/math/fadd.js\";\nexport * from \"./lib/nodes/math/fdiv.js\";\nexport * from \"./lib/nodes/math/fmul.js\";\nexport * from \"./lib/nodes/math/fsqrt.js\";\nexport * from \"./lib/nodes/math/fmod.js\";\n\n// Export arrays nodes\nexport * from \"./lib/nodes/array/apush.js\";\nexport * from \"./lib/nodes/array/faconst.js\";\nexport * from \"./lib/nodes/array/famake.js\";\nexport * from \"./lib/nodes/array/faget.js\";\nexport * from \"./lib/nodes/array/falength.js\";\n\n// Export objects nodes\nexport * from \"./lib/nodes/object/fomake.js\";\nexport * from \"./lib/nodes/object/fobreak.js\";\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"./node.js\";\nimport { NextSocket, OutputSocket, InputSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class implements a cnode that is the starting point for a\n * program. The program can be top-level or not\n */\nexport class Enter extends Node {\n  constructor() {\n    super(\"Enter\");\n    this.removable = false;\n    this.creatable = false;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Begin\", this)];\n    this.prev = null;\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Val\").value;\n    this.output(\"Val\").type = this.input(\"Val\").type;\n    return this.getFlowResult(this.next(\"Begin\"));\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function enterNode() {\n  return new Enter();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { program, Program } from \"./program.js\";\nimport { enterNode } from \"./enter.js\";\nimport { exitNode } from \"./exit.js\";\nimport { callNode } from \"../nodes/call.js\";\nimport { consoleNode } from \"../nodes/console.js\";\nimport { fgetvarNode } from \"../nodes/fgetvar.js\";\nimport { forNode } from \"../nodes/for.js\";\nimport { getvarNode } from \"../nodes/getvar.js\";\nimport { setvarNode } from \"../nodes/setvar.js\";\nimport { whileNode } from \"../nodes/while.js\";\nimport { ifNode } from \"../nodes/if.js\";\nimport { apushNode } from \"../nodes/array/apush.js\";\nimport { faconstNode } from \"../nodes/array/faconst.js\";\nimport { famakeNode } from \"../nodes/array/famake.js\";\nimport { fagetNode } from \"../nodes/array/faget.js\";\nimport { falengthNode } from \"../nodes/array/falength.js\";\nimport { faddNode } from \"../nodes/math/fadd.js\";\nimport { fdivNode } from \"../nodes/math/fdiv.js\";\nimport { fmulNode } from \"../nodes/math/fmul.js\";\nimport { fsqrtNode } from \"../nodes/math/fsqrt.js\";\nimport { fequalNode } from \"../nodes/bool/fequal.js\";\nimport { fgtNode } from \"../nodes/bool/fgt.js\";\nimport { fgteNode } from \"../nodes/bool/fgte.js\";\nimport { fltNode } from \"../nodes/bool/flt.js\";\nimport { flteNode } from \"../nodes/bool/flte.js\";\nimport { fnotequalNode } from \"../nodes/bool/fnotequal.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n  Socket,\n} from \"./socket.js\";\nimport { Node } from \"./node.js\";\nimport { fsconstNode } from \"../nodes/string/fsconst.js\";\nimport { fconcatNode } from \"../nodes/string/fconcat.js\";\nimport { fmodNode } from \"../nodes/math/fmod.js\";\nimport { fifNode } from \"../nodes/fif.js\";\nimport { fnconstNode } from \"../nodes/math/fnconst.js\";\nimport { fomakeNode } from \"../nodes/object/fomake.js\";\nimport { fobreakNode } from \"../nodes/object/fobreak.js\";\n\n/**\n * This class represents a main global environment for cnodes.\n * The class is a \"static\" class that is responible for maintaining a global\n * registry of registered nodes. A node registration is a object with three fields: a node name,\n * a category name and a factory, that returns a new instance for that node.\n * The global Env instance must be initialized one-time by calling the Env.init() method,\n * this method register all built-in nodes. Eventual custom nodes must be registered manually\n * via Env.registerNode(name, category, factory).\n */\nexport class Env {\n  static #nodeRegistry = new Map();\n\n  /**\n   * Initialize the CNodes global environment\n   */\n  static init() {\n    Env.#nodeRegistry = new Map();\n\n    // Core nodes\n\n    Env.registerNode(\"Program\", \"Core\", program);\n    Env.registerNode(\"Call\", \"Core\", callNode);\n    Env.registerNode(\"Console\", \"Core\", consoleNode);\n    Env.registerNode(\"FGetvar\", \"Core\", fgetvarNode);\n    Env.registerNode(\"For\", \"Core\", forNode);\n    Env.registerNode(\"Getvar\", \"Core\", getvarNode);\n    Env.registerNode(\"If\", \"Core\", ifNode);\n    Env.registerNode(\"FIf\", \"Core\", fifNode);\n    Env.registerNode(\"Setvar\", \"Core\", setvarNode);\n    Env.registerNode(\"While\", \"Core\", whileNode);\n    Env.registerNode(\"Enter\", \"Core\", enterNode);\n    Env.registerNode(\"Exit\", \"Core\", exitNode);\n\n    // String nodes\n    Env.registerNode(\"FSConst\", \"String\", fsconstNode);\n    Env.registerNode(\"FConcat\", \"String\", fconcatNode);\n\n    // Math nodes\n    Env.registerNode(\"FNConst\", \"Math\", fnconstNode);\n    Env.registerNode(\"FAdd\", \"Math\", faddNode);\n    Env.registerNode(\"FDiv\", \"Math\", fdivNode);\n    Env.registerNode(\"FMod\", \"Math\", fmodNode);\n    Env.registerNode(\"FMul\", \"Math\", fmulNode);\n    Env.registerNode(\"FSqrt\", \"Math\", fsqrtNode);\n\n    // Boolean Nodes\n    Env.registerNode(\"FEqual\", \"Boolean\", fequalNode);\n    Env.registerNode(\"FGT\", \"Boolean\", fgtNode);\n    Env.registerNode(\"FGTE\", \"Boolean\", fgteNode);\n    Env.registerNode(\"FLT\", \"Boolean\", fltNode);\n    Env.registerNode(\"FLTE\", \"Boolean\", flteNode);\n    Env.registerNode(\"FNotEqual\", \"Boolean\", fnotequalNode);\n\n    // Arrays Nodes\n    Env.registerNode(\"APush\", \"Arrays\", apushNode);\n    Env.registerNode(\"FAConst\", \"Arrays\", faconstNode);\n    Env.registerNode(\"FAMake\", \"Arrays\", famakeNode);\n    Env.registerNode(\"FAGet\", \"Arrays\", fagetNode);\n    Env.registerNode(\"FALength\", \"Arrays\", falengthNode);\n\n    // Object Nodes\n    Env.registerNode(\"FOMake\", \"Objects\", fomakeNode);\n    Env.registerNode(\"FOBreak\", \"Objects\", fobreakNode);\n  }\n\n  /**\n   * Register a node type\n   * @param {string} name The name of the node\n   * @param {string} category The category of the node\n   * @param {any} factory A class that instantiate the node\n   */\n  static registerNode(name, category, factory) {\n    Env.#nodeRegistry.set(name, { category: category, factory: factory });\n  }\n\n  /**\n   * Return the list of unique registered categories\n   */\n  static getCategories() {\n    let categoryMap = new Map();\n    Array.from(this.#nodeRegistry.values()).forEach((element) => {\n      categoryMap.set(element.category, 0);\n    });\n    return Array.from(categoryMap.keys());\n  }\n\n  /**\n   * Return an array of registrations for nodes.\n   * Registrations have the sign: {name, category, factory}\n   * @param {string} category The category for which seacrh registrations\n   */\n  static getCategoryNodes(category) {\n    let registrations = [];\n    Array.from(this.#nodeRegistry.entries()).forEach((entry) => {\n      if (entry[1].category === category) {\n        registrations.push({\n          name: entry[0],\n          category: entry[1].category,\n          factory: entry[1].factory,\n        });\n      }\n    });\n    return registrations;\n  }\n\n  /**\n   * Instantiate a node by name\n   * @param {string} name The name of the node\n   */\n  static getInstance(name) {\n    let reg = this.#nodeRegistry.get(name);\n    if (reg) {\n      return reg.factory();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Creates and returns a JSON representation of the entire program\n   * @param {Program} program The program to export\n   */\n  static export(program) {\n    let exp = {\n      id: program.id,\n      version: Program.version,\n      lastNodeIndex: Node.lastNodeIdIndex,\n      lastSocketIndex: Socket.lastSocketIdIndex,\n      enter: program.enter.id,\n      exit: program.exit.id,\n      nodes: [],\n      connections: [],\n    };\n\n    for (let node of program.nodes) {\n      let nodeExp = {\n        id: node.id,\n        name: node.name,\n        functional: node.functional,\n        meta: node.meta,\n        program: node instanceof Program ? Env.export(node) : undefined,\n        inputs: node.inputs.map((inp) => {\n          return {\n            id: inp.id,\n            name: inp.name,\n            node: null,\n            type: inp.type,\n            value: inp.value,\n            peer: null,\n          };\n        }),\n        outputs: node.outputs.map((outp) => {\n          return {\n            id: outp.id,\n            name: outp.name,\n            node: null,\n            type: outp.type,\n            value: outp.value,\n            peers: [],\n          };\n        }),\n        prev: !node.prev\n          ? null\n          : {\n              id: node.prev.id,\n              name: node.prev.name,\n              node: null,\n              peers: [],\n            },\n        nexts: node.nexts.map((next) => {\n          return {\n            id: next.id,\n            name: next.name,\n            node: null,\n            peer: null,\n          };\n        }),\n      };\n\n      exp.nodes.push(nodeExp);\n    }\n\n    /**\n     * Define a inner-function that prevent duplicates connections\n     * @param {any} connection The connection to push\n     */\n    function pushConnection(connection) {\n      if (\n        exp.connections.findIndex(\n          (c) =>\n            c.type === connection.type &&\n            c.sourceNode === connection.sourceNode &&\n            c.sourceSocket === connection.sourceSocket &&\n            c.targetNode === connection.targetNode &&\n            c.targetSocket === connection.targetSocket\n        ) === -1\n      ) {\n        exp.connections.push(connection);\n      }\n    }\n\n    for (let node of program.nodes) {\n      if (node.prev && node.prev.peers && node.prev.peers.length > 0) {\n        for (let peer of node.prev.peers) {\n          let connectionExp = {\n            type: \"pn\",\n            sourceNode: peer.node.id,\n            sourceSocket: peer.id,\n            targetNode: node.id,\n            targetSocket: node.prev.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n      for (let inp of node.inputs) {\n        if (inp.peer) {\n          let connectionExp = {\n            type: \"io\",\n            sourceNode: inp.peer.node.id,\n            sourceSocket: inp.peer.id,\n            targetNode: node.id,\n            targetSocket: inp.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n      for (let outp of node.outputs) {\n        for (let peer of outp.peers) {\n          if (peer) {\n            let connectionExp = {\n              type: \"io\",\n              sourceNode: node.id,\n              sourceSocket: outp.id,\n              targetNode: peer.node.id,\n              targetSocket: peer.id,\n            };\n            pushConnection(connectionExp);\n          }\n        }\n      }\n      for (let next of node.nexts) {\n        if (next.peer) {\n          let connectionExp = {\n            type: \"pn\",\n            sourceNode: node.id,\n            sourceSocket: next.id,\n            targetNode: next.peer.node.id,\n            targetSocket: next.peer.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n    }\n\n    return exp;\n  }\n\n  /**\n   * Create a program instance based on export data created with export() method\n   * @param {any} data A object with the export data format\n   */\n  static import(data) {\n    if (data.version !== 1) {\n      throw new Error(\"Imported data must have version 1\");\n    }\n\n    let p = new Program();\n\n    // Removes enter and exit auto-nodes, these\n    // will be re-created by import procedure\n    p.removeNode(p.enter);\n    p.removeNode(p.exit);\n\n    Program.version = data.version;\n\n    // Now import nodes without connections\n    for (let nodeData of data.nodes) {\n      let node;\n\n      // If this node is a program node, let the import\n      // procedure to create the node\n      if (nodeData.program) {\n        node = Env.import(nodeData.program);\n      } else {\n        // Otherwise import the node\n        node = Env.getInstance(nodeData.name);\n      }\n      // Delete default sockets (created by getInstance())\n      node.inputs = [];\n      node.outputs = [];\n      node.prev = null;\n      node.nexts = [];\n\n      if (!node) {\n        throw new Error(`Node type '${nodeData.name}' is not registered`);\n      }\n      node.id = nodeData.id;\n      node.functional = nodeData.functional;\n      node.meta = nodeData.meta;\n      for (let inpData of nodeData.inputs) {\n        let inp = new InputSocket(\n          inpData.name,\n          node,\n          inpData.type,\n          inpData.value\n        );\n        inp.id = inpData.id;\n        node.inputs.push(inp);\n      }\n      for (let outpData of nodeData.outputs) {\n        let outp = new OutputSocket(\n          outpData.name,\n          node,\n          outpData.type,\n          outpData.value\n        );\n        outp.id = outpData.id;\n        node.outputs.push(outp);\n      }\n      if (nodeData.prev) {\n        let prev = new PrevSocket(nodeData.prev.name, node);\n        prev.id = nodeData.prev.id;\n        node.prev = prev;\n      }\n      for (let nextData of nodeData.nexts) {\n        let next = new NextSocket(nextData.name, node);\n        next.id = nextData.id;\n        node.nexts.push(next);\n      }\n\n      p.addNode(node);\n    }\n\n    p.enter = p.nodes.find((n) => n.id === data.enter);\n    p.exit = p.nodes.find((n) => n.id === data.exit);\n\n    // Now import connections\n    for (let connectionData of data.connections) {\n      let sourceNode = p.nodes.find((n) => n.id === connectionData.sourceNode);\n      let targetNode = p.nodes.find((n) => n.id === connectionData.targetNode);\n\n      let sourceSocket =\n        connectionData.type === \"pn\"\n          ? sourceNode.nexts.find((n) => n.id === connectionData.sourceSocket)\n          : sourceNode.outputs.find(\n              (o) => o.id === connectionData.sourceSocket\n            );\n      let targetSocket =\n        connectionData.type === \"pn\"\n          ? targetNode.prev\n          : targetNode.inputs.find((i) => i.id === connectionData.targetSocket);\n\n      sourceSocket.connect(targetSocket);\n    }\n\n    // These two static variable must be assigned at the end because\n    // the new InputSocket(), new OutputSocket(), ... increment it during\n    // the import phase\n    Node.lastNodeIdIndex = data.lastNodeIndex;\n    Socket.lastSocketIdIndex = data.lastSocketIndex;\n\n    return p;\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node, Result } from \"./node.js\";\nimport { PrevSocket, InputSocket, OutputSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class implements a cnode that is the starting point for a\n * program. The program can be top-level or not\n */\nexport class Exit extends Node {\n  constructor() {\n    super(\"Exit\");\n    this.removable = false;\n    this.creatable = false;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [];\n    this.prev = new PrevSocket(\"End\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Val\").value;\n    this.output(\"Val\").type = this.input(\"Val\").type;\n    return new Result(); // End process\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function exitNode() {\n  return new Exit();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { InputSocket, OutputSocket, Socket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This is the base node class. A node have some input and output\n * to exchange data with other nodes, some nexts to determine next\n * execution nodes, and a prev to identify the entry point.\n * A node can be functional or iterative. If the node is funcitonal\n * the execution of the process method is repeated each time other\n * nodes read the output values, otherwise output nodes reports\n * the last computed value. Each node has a unique id to identify it\n */\nexport class Node {\n  /** An incremental index to generate unique node IDs */\n  static lastNodeIdIndex = 0;\n\n  /** The internal unique identifier */\n  #id = null;\n\n  /** The internal name of the node */\n  #name = \"\";\n\n  /** Is this node a functional node? */\n  #functional = false;\n\n  /** List of node's inputs */\n  #inputs = [];\n\n  /** List of node's outputs */\n  #outputs = [];\n\n  /** List of node's nexts in execution */\n  #nexts = [];\n\n  /** The execution entry point */\n  #prev = null;\n\n  /** Reference to the enclosing program */\n  #program = null;\n\n  /** Additional info (UIs can write anything to store graphical behaviors) */\n  #meta = null;\n\n  /** Can the node be removed by the user? */\n  #removable = true;\n\n  /** Can the node be created by the user? */\n  #creatable = true;\n\n  /** Can the user add an input? */\n  #canAddInput = false;\n\n  /** Can the user add an output? */\n  #canAddOutput = false;\n\n  /** Can the user add a next? */\n  #canAddNext = false;\n\n  constructor(name) {\n    this.#name = name;\n    this.#id = \"NID_\" + Node.lastNodeIdIndex++;\n  }\n\n  get id() {\n    return this.#id;\n  }\n  set id(val) {\n    this.#id = val;\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(val) {\n    this.#name = val;\n  }\n  get functional() {\n    return this.#functional;\n  }\n  set functional(val) {\n    this.#functional = val;\n  }\n  get inputs() {\n    return this.#inputs;\n  }\n  set inputs(val) {\n    this.#inputs = val;\n  }\n  get outputs() {\n    return this.#outputs;\n  }\n  set outputs(val) {\n    this.#outputs = val;\n  }\n  get nexts() {\n    return this.#nexts;\n  }\n  set nexts(val) {\n    this.#nexts = val;\n  }\n  get prev() {\n    return this.#prev;\n  }\n  set prev(val) {\n    this.#prev = val;\n  }\n  get program() {\n    return this.#program;\n  }\n  set program(val) {\n    this.#program = val;\n  }\n  get removable() {\n    return this.#removable;\n  }\n  set removable(val) {\n    this.#removable = val;\n  }\n  get creatable() {\n    return this.#creatable;\n  }\n  set creatable(val) {\n    this.#creatable = val;\n  }\n  get canAddInput() {\n    return this.#canAddInput;\n  }\n  set canAddInput(val) {\n    this.#canAddInput = val;\n  }\n  get canAddOutput() {\n    return this.#canAddOutput;\n  }\n  set canAddOutput(val) {\n    this.#canAddOutput = val;\n  }\n  get canAddNext() {\n    return this.#canAddNext;\n  }\n  set canAddNext(val) {\n    this.#canAddNext = val;\n  }\n  get meta() {\n    return this.#meta;\n  }\n  set meta(val) {\n    this.#meta = val;\n  }\n\n  /**\n   * Returns the input by name\n   * @param {string} name Name of the input\n   */\n  input(name) {\n    return this.inputs.find((i) => i.name === name);\n  }\n\n  /**\n   * Returns the output by name\n   * @param {string} name The name of the output\n   */\n  output(name) {\n    return this.outputs.find((o) => o.name === name);\n  }\n\n  /**\n   * Returns the next by name\n   * @param {string} name The name of the next\n   */\n  next(name) {\n    if (!name) {\n      return this.nexts[0];\n    }\n    return this.nexts.find((n) => n.name === name);\n  }\n\n  /**\n   * Evaluate all imputs of this node. Inputs are sockets.\n   * If the socket is connected the evaluation will search\n   * for the socket's peer and evaluate the output counterpart\n   * eventually reprocess the output's nod, if the node is\n   * functional\n   */\n  evaluateInputs() {\n    for (let inp of this.inputs) {\n      inp.evaluate();\n    }\n  }\n\n  /**\n   * This is an helper method to construct a Result instance\n   * by name\n   * @param {Socket} socket The Socket on which construct the Result instance\n   */\n  getFlowResult(socket) {\n    if (socket.peer) {\n      return new Result(socket.peer.node);\n    } else {\n      return new Result();\n    }\n  }\n\n  /**\n   * This method disconnect all sockets from the node\n   */\n  disconnectAllSockets() {\n    if (this.#prev) {\n      while (this.#prev.peers.length > 0) {\n        this.#prev.disconnect(this.#prev.peers[0]);\n      }\n    }\n    for (let i of this.#inputs) {\n      if (i.peer) {\n        i.disconnect();\n      }\n    }\n    for (let o of this.#outputs) {\n      while (o.peers.length > 0) {\n        o.peers[0].disconnect();\n      }\n    }\n    for (let n of this.#nexts) {\n      if (n.peer) {\n        n.disconnect();\n      }\n    }\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * Subclass with variable number of input should override this method\n   */\n  addInput() {\n    throw new Error(\"Can't add input!\");\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * Subclass with variable number of input should override this method\n   * @param {*} input The input to remove\n   */\n  removeInput(input) {\n    throw new Error(\"Can't remove input\");\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * Subclass with variable number of input should override this method\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return false;\n  }\n\n  /**\n   * If this.#canAddOutput is true, the user can add an output\n   * Subclass with variable number of output should override this method\n   */\n  addOutput() {\n    throw new Error(\"Can't add output!\");\n  }\n\n  /**\n   * This method removes a specific output from the node, if\n   * this is possible whit this instance\n   * Subclass with variable number of output should override this method\n   * @param {OutputSocket} output The output to remove\n   */\n  removeOutput(output) {\n    throw new Error(\"Can't remove output\");\n  }\n\n  /**\n   * Can this node remove a specific output?\n   * Subclass with variable number of output should override this method\n   * @param {OutputSocket} output The output to remove\n   */\n  canRemoveOutput(input) {\n    return false;\n  }\n\n  /** The base version of the node does nothing */\n  process() {\n    return new Result();\n  }\n}\n\n/**\n * The result class used by programs to receive\n * the next \"next\" in the flow\n */\nexport class Result {\n  /** The next node */\n  #next = null;\n\n  constructor(next = null) {\n    this.#next = next;\n  }\n  get next() {\n    return this.#next;\n  }\n  set next(val) {\n    this.#next = val;\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Enter } from \"./enter.js\";\nimport { Exit } from \"./exit.js\";\nimport { Node } from \"./node.js\";\nimport { InputSocket, NextSocket, OutputSocket, PrevSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * A program is a special node that contains nodes. The program\n * manages the flow of the global execution by starting from the\n * \"Enter\" default, autocreated node, call its process() method and receive the next\n * \"next\". A program also store a global variable space\n */\nexport class Program extends Node {\n  /** Engine version */\n  static version = 1;\n\n  /** The nodes in this program */\n  #nodes = [];\n\n  /** The Enter node */\n  #enter = null;\n\n  /** The Exit node */\n  #exit = null;\n\n  /** The instruction pointer equivalent :) */\n  #currentNode = null;\n\n  /** The variable global space */\n  #vars = new Map();\n\n  constructor() {\n    super(\"Program\");\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n\n    // Create default enter, exit nodes\n    this.addNode((this.#enter = new Enter())).addNode(\n      (this.#exit = new Exit())\n    );\n  }\n\n  get vars() {\n    return this.#vars;\n  }\n  set vars(val) {\n    this.#vars = val;\n  }\n  get enter() {\n    return this.#enter;\n  }\n  set enter(val) {\n    this.#enter = val;\n  }\n  get exit() {\n    return this.#exit;\n  }\n  set exit(val) {\n    this.#exit = val;\n  }\n  get currentNode() {\n    return this.#currentNode;\n  }\n  set currentNode(val) {\n    this.#currentNode = val;\n  }\n  get nodes() {\n    return this.#nodes;\n  }\n  set nodes(val) {\n    this.#nodes = val;\n  }\n\n  /**\n   * Add a new node to this program\n   * @param {Node} node The node to add\n   */\n  addNode(node) {\n    this.#nodes.push(node);\n\n    // Set this program to the node\n    node.program = this;\n    return this;\n  }\n\n  /**\n   * Removes a node from this program, disconnect all sockets\n   * @param {Node} node The node to remove\n   */\n  removeNode(node) {\n    // Disconnect its sockets\n    node.disconnectAllSockets();\n\n    this.#nodes = this.#nodes.filter((n) => n.id !== node.id);\n    node.program = null;\n    return this;\n  }\n\n  /**\n   * The process method will start from the Enter node and\n   * cycle over nexts returned by the process functions of nodes.\n   * The Program node couldn't be a top-level program, but a sub-nod\n   * of another program. For that reason, the process() method copy the\n   * value of the only input in the Program node to the only one\n   * input of the \"Enter\" forst node.\n   * This is a limitation: The Program node can be actually only 1 input\n   * and only 1 output. At the same, Enter and Exit nodes will have only\n   * 1 input and output respectively.\n   * At the end, the process() methos of the Program node, will copy the\n   * value of the Exit's output to the unique output of the Program node\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Copy input to enter's input\n    this.#enter.input(\"Val\").value = this.input(\"Val\").value;\n    this.#enter.input(\"Val\").type = this.input(\"Val\").type;\n\n    this.processFrom(this.#enter);\n\n    // Copy output to exit's output\n    this.output(\"Val\").value = this.#exit.output(\"Val\").value;\n    this.output(\"Val\").type = this.#exit.output(\"Val\").type;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n\n  /**\n   * Execute a program useng node as starting point\n   * @param {Node} node Starting point node\n   */\n  processFrom(node) {\n    this.currentNode = node;\n    while (this.currentNode !== null) {\n      let result = this.currentNode.process();\n      this.currentNode = result.next;\n    }\n  }\n}\n\n/**\n * A helper function to create the program\n * @param {string} name The name of the program\n */\nexport function program() {\n  return new Program();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Types } from \"./type.js\";\n\n/**\n * A socket is an object that represent an input,\n * output, next or prev for the node\n */\nexport class Socket {\n  /** An incremental index to generate unique socket IDs */\n  static lastSocketIdIndex = 0;\n\n  /** The internal id of the socket */\n  #id = \"\";\n\n  /** The name of this socket */\n  #name = \"\";\n\n  /** The parent node */\n  #node = null;\n\n  /**\n   * Construct a new socket on a node with a given name\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node of the socket\n   */\n  constructor(name, node) {\n    this.#id = \"SID_\" + Socket.lastSocketIdIndex++;\n\n    this.#name = name;\n    this.#node = node;\n  }\n  get id() {\n    return this.#id;\n  }\n  set id(val) {\n    this.#id = val;\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(val) {\n    this.#name = val;\n  }\n  get node() {\n    return this.#node;\n  }\n  set node(val) {\n    this.#node = val;\n  }\n}\n\n/**\n * The value socket represent a input or a output value\n * for the node, so it has a value and a type\n */\nexport class ValueSocket extends Socket {\n  /** The type for the socket's value */\n  #type = Types.NUMBER;\n\n  /** The stored value */\n  #value = 0;\n\n  /**\n   * Some input/output sockets needs to have a name that users can change.\n   * That's because the name of the socket is part of what the user can\n   * choose. Think for example at a node that can make a data structure,\n   * the user will want configure each field of the structure, in terms of\n   * data value and name. The node will have a single output with the structure\n   * as output. In this case the user can select a variable number of input\n   * sockets, and can configure values (or connection) for each input as well\n   * as the name of each socket, that whill be the name of the field in the structure.\n   * This type of socket should be represented as a text field in a UI library.\n   */\n  #canEditName = false;\n\n  /**\n   * Construct a new ValueSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of this socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node);\n    this.type = type;\n    this.value = value;\n  }\n\n  get type() {\n    return this.#type;\n  }\n  set type(val) {\n    this.#type = val;\n  }\n  get value() {\n    return this.#value;\n  }\n  set value(val) {\n    this.#value = val;\n  }\n  get canEditName() {\n    return this.#canEditName;\n  }\n  set canEditName(val) {\n    this.#canEditName = val;\n  }\n}\n\n/**\n * This is an input socket value for the node, it\n * can have only a peer socket, because its value\n * have to be defined in a deterministic way\n */\nexport class InputSocket extends ValueSocket {\n  /** The only peer socket */\n  #peer = null;\n\n  /**\n   * Construct a new InputSocket\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of the socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node, type, value);\n  }\n  get peer() {\n    return this.#peer;\n  }\n  set peer(val) {\n    this.#peer = val;\n  }\n\n  /**\n   * Evaluate the socket value. If the socket is connected,\n   * this method goes to the peer socket and take the value.\n   * If the peer socket is part of a functional node, the process()\n   * method is executed before taking the value\n   */\n  evaluate() {\n    if (this.peer !== null) {\n      if (this.peer.node && this.peer.node.functional) {\n        this.peer.node.process();\n      }\n      this.type = this.peer.type;\n      this.value = this.peer.value;\n    }\n  }\n\n  /**\n   * Connect this socket to another (output) socket\n   * @param {Socket} socket The output socket to connect\n   */\n  connect(socket) {\n    this.peer = socket;\n    if (socket.peers.find((s) => s === this) === undefined) {\n      socket.peers.push(this);\n    }\n  }\n\n  /**\n   * Disconnects this socket from its peer\n   */\n  disconnect() {\n    if (this.peer) {\n      let index = this.peer.peers.findIndex((s) => s === this);\n      if (index !== -1) {\n        this.peer.peers.splice(index, 1);\n      }\n    }\n    this.peer = null;\n  }\n}\n\n/**\n * This is a output value socket and represent an output\n * value for the node. Output value socket can be connected to\n * many peer input value sockets, because many socket would like\n * to take the value from this.\n */\nexport class OutputSocket extends ValueSocket {\n  /** A list of input value connected sockets */\n  #peers = [];\n\n  /**\n   * Construct a new OutputSocket\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of the socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node, type, value);\n  }\n  get peers() {\n    return this.#peers;\n  }\n  set peers(val) {\n    this.#peers = val;\n  }\n\n  /**\n   * Connects this socket to a input socket\n   * @param {Socket} socket Socket to connect to\n   */\n  connect(socket) {\n    if (this.peers.find((s) => s === socket) === undefined) {\n      this.peers.push(socket);\n    }\n    socket.peer = this;\n  }\n\n  /**\n   * Disconnect this socket from a specific input peer\n   * @param {Socket} socket The socket to disconnect\n   */\n  disconnect(socket) {\n    let index = this.peers.findIndex((s) => s === socket);\n    if (index !== undefined) {\n      this.peers.splice(index, 1);\n      socket.peer = null;\n    }\n  }\n}\n\n/**\n * A flow socket is a socket to connect two nodes in\n * terms of execution flow\n */\nexport class FlowSocket extends Socket {\n  /**\n   * Construct a new FlowSocket\n   * @param {sring} name Name of the socket\n   * @param {Node} node The parent node\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n}\n\n/**\n * This class representa a prev socket, a socket that\n * can be connected to other nexts sockets. The prev socket\n * cab have many peer (next) socket because the execution\n * can come from anywhere in the program\n */\nexport class PrevSocket extends FlowSocket {\n  /** List of (next) peer sockets */\n  #peers = [];\n\n  /**\n   * Construct a new PrevSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node Parent node\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n  get peers() {\n    return this.#peers;\n  }\n  set peers(val) {\n    this.#peers = val;\n  }\n\n  /**\n   * Connect this socket to a next socket\n   * @param {Socket} socket The next socket to connect\n   */\n  connect(socket) {\n    if (this.peers.find((s) => s === socket) === undefined) {\n      this.peers.push(socket);\n    }\n    socket.peer = this;\n  }\n\n  /**\n   * Disconnect this socket from a next socket\n   * @param {Socket} socket The next socket to disconnect\n   */\n  disconnect(socket) {\n    let index = this.peers.findIndex((s) => s === socket);\n    if (index !== undefined) {\n      this.peers.splice(index, 1);\n      socket.peer = null;\n    }\n  }\n}\n\n/**\n * This class represents a socket to redirect the flow\n * to another node via a node's prev socket. This socket can\n * be connected to only one (prev) socket, because the program\n * flow have to be well defined\n */\nexport class NextSocket extends FlowSocket {\n  /** The peer (prev) socket */\n  #peer = null;\n\n  /**\n   * Construct a new NextSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node The parent node of the socket\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n  get peer() {\n    return this.#peer;\n  }\n  set peer(val) {\n    this.#peer = val;\n  }\n\n  /**\n   * Connect this socket to another (prev) socket\n   * @param {Socket} socket The prev socket to connect to\n   */\n  connect(socket) {\n    this.peer = socket;\n    if (socket.peers.find((s) => s === this) === undefined) {\n      socket.peers.push(this);\n    }\n  }\n\n  /**\n   * Disconnect this socket from the peer\n   */\n  disconnect() {\n    if (this.peer) {\n      let index = this.peer.peers.findIndex((s) => s === this);\n      if (index !== -1) {\n        this.peer.peers.splice(index, 1);\n      }\n      this.peer = null;\n    }\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * Possible types for values\n */\nexport const Types = {\n  NUMBER: \"number\",\n  STRING: \"string\",\n  BOOLEAN: \"boolean\",\n  OBJECT: \"object\",\n  ARRAY: \"array\",\n  ANY: \"any\",\n};\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that pushes a value\n * into an array\n */\nexport class APush extends Node {\n  constructor() {\n    super(\"APush\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Val\", this, Types.ANY),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY)];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n    let val = this.input(\"Val\").value;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      arr.push(val);\n      this.output(\"Val\").value = arr;\n    }\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function apushNode() {\n  return new APush();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an array\n * as a string constant by JSON.parse() the input string.\n */\nexport class FAConst extends Node {\n  constructor() {\n    super(\"FAConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.STRING, \"[0, 1, 2]\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ARRAY, [])];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to an array\n    try {\n      this.output(\"Val\").value = JSON.parse(this.input(\"Val\").value);\n      if (!Array.isArray(this.output(\"Val\").value)) {\n        throw new Error(\n          `The input value (${this.output(\"Val\").value}) is not an array`\n        );\n      }\n    } catch (error) {\n      // TODO: Manage error\n      console.log(error);\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function faconstNode() {\n  return new FAConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for pick\n * a single value from an array\n */\nexport class FAGet extends Node {\n  constructor() {\n    super(\"FAGet\");\n\n    // The node is pure functional\n    this.functional = true;\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY, 0),\n      new InputSocket(\"Index\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n    let index = parseInt(this.input(\"Index\").value, 10);\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      this.output(\"Val\").value = arr[index];\n    }\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fagetNode() {\n  return new FAGet();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for get\n * the length of an array\n */\nexport class FALength extends Node {\n  constructor() {\n    super(\"FALength\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [new InputSocket(\"Array\", this, Types.ARRAY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      this.output(\"Val\").value = arr.length;\n    }\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function falengthNode() {\n  return new FALength();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an array\n * from a list of inputs\n */\nexport class FAMake extends Node {\n  constructor() {\n    super(\"FAMake\");\n    this.canAddInput = true;\n    this.functional = true;\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.ANY, \"\"),\n      new InputSocket(\"1\", this, Types.ANY, \"\"),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ARRAY, [])];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = [];\n\n    arr.push(...this.inputs.map((i) => i.value));\n    this.output(\"Val\").value = arr;\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 1 input\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 0;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.ANY, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function famakeNode() {\n  return new FAMake();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * Supported comparision types\n */\nexport const Comparision = {\n  EQUAL: \"equal\",\n  GT: \"gt\",\n  GTE: \"gte\",\n  LT: \"lt\",\n  LTE: \"lte\",\n  NOT_EQUAL: \"not_equal\",\n};\n\n/**\n * This class implements a functional node for compairing numeric values.\n */\nexport class FCompare extends Node {\n  /** Configured comparision for this node */\n  #comparision = Comparision.EQUAL;\n\n  constructor(comparision = Comparision.EQUAL) {\n    super(\"FCompare\");\n    this.#comparision = comparision;\n\n    // The node is pure functional\n    this.functional = true;\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.ANY, 0),\n      new InputSocket(\"Val2\", this, Types.ANY, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.BOOLEAN, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  get comparision() {\n    return this.#comparision;\n  }\n  set comparision(val) {\n    this.#comparision = val;\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let val1 = this.input(\"Val1\").value;\n    let val2 = this.input(\"Val2\").value;\n\n    let ret;\n    switch (this.comparision) {\n      case Comparision.EQUAL: {\n        ret = val1 === val2;\n        break;\n      }\n      case Comparision.NOT_EQUAL: {\n        ret = val1 !== val2;\n        break;\n      }\n      case Comparision.GT: {\n        ret = val1 > val2;\n        break;\n      }\n      case Comparision.GTE: {\n        ret = val1 >= val2;\n        break;\n      }\n      case Comparision.LT: {\n        ret = val1 < val2;\n        break;\n      }\n      case Comparision.LTE: {\n        ret = val1 <= val2;\n        break;\n      }\n      default: {\n        throw \"Comparision type not valid\";\n      }\n    }\n\n    this.output(\"Val\").value = ret;\n  }\n\n  get comparision() {\n    return this.#comparision;\n  }\n  set comparision(val) {\n    this.#comparision = val;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fcompareNode() {\n  return new FCompare();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of EQUAL\n */\nexport class FEqual extends FCompare {\n  constructor() {\n    super(Comparision.EQUAL);\n    this.name = \"FEqual\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fequalNode() {\n  return new FEqual();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of GT\n */\nexport class FGT extends FCompare {\n  constructor() {\n    super(Comparision.GT);\n    this.name = \"FGT\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fgtNode() {\n  return new FGT();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of GTE\n */\nexport class FGTE extends FCompare {\n  constructor() {\n    super(Comparision.GTE);\n    this.name = \"FGTE\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fgteNode() {\n  return new FGTE();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of FLT\n */\nexport class FLT extends FCompare {\n  constructor() {\n    super(Comparision.LT);\n    this.name = \"FLT\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fltNode() {\n  return new FLT();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of FLTE\n */\nexport class FLTE extends FCompare {\n  constructor() {\n    super(Comparision.LTE);\n    this.name = \"FLTE\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function flteNode() {\n  return new FLTE();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of NOT_EQUAL\n */\nexport class FNotEqual extends FCompare {\n  constructor() {\n    super(Comparision.NOT_EQUAL);\n    this.name = \"FNotEqual\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fnotequalNode() {\n  return new FNotEqual();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { NextSocket, PrevSocket } from \"../core/socket.js\";\n\n/**\n * This class implements a subroutine/function call\n */\nexport class Call extends Node {\n  constructor() {\n    super(\"Call\");\n    this.inputs = [];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Call\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n\n    // Execute a sub program beginning on that node\n    this.program.processFrom(this.next(\"Call\").peer.node);\n\n    // Restore the current program's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function callNode() {\n  return new Call();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, NextSocket, PrevSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a cnode that print to the\n * console the input value\n */\nexport class Console extends Node {\n  constructor() {\n    super(\"Console\");\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY)];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    console.log(this.input(\"Val\").value);\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function consoleNode() {\n  return new Console();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a functional GetVar node,\n * a node to read a variable's value from the global\n * program's space\n */\nexport class FGetvar extends Node {\n  constructor() {\n    super(\"FGetvar\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Name\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    this.output(\"Val\").value = this.program.vars.get(varName);\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function fgetvarNode() {\n  return new FGetvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a functional conditional node\n */\nexport class FIf extends Node {\n  constructor() {\n    super(\"FIf\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two any inputs\n    this.inputs = [\n      new InputSocket(\"Condition\", this, Types.BOOLEAN, false),\n      new InputSocket(\"True\", this, Types.ANY, 0),\n      new InputSocket(\"False\", this, Types.ANY, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Condition\").value\n      ? this.input(\"True\").value\n      : this.input(\"False\").value;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fifNode() {\n  return new FIf();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * iterate over a range of integers, like the form\n * for(let i=start; i<end; i++) do();\n */\nexport class For extends Node {\n  constructor() {\n    super(\"For\");\n    this.inputs = [\n      new InputSocket(\"From\", this, Types.NUMBER, 0),\n      new InputSocket(\"To\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Index\", this, Types.NUMBER, 0)];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n\n    // Set the \"Index\" output value to Index\n    this.output(\"Index\").value = parseInt(this.input(\"From\").value);\n\n    // Re evaluate inputs in case of Condition depends on Index output\n    this.evaluateInputs();\n\n    // Let's cycle from \"From\" to \"To\" values\n    for (\n      let index = parseInt(this.input(\"From\").value);\n      index < parseInt(this.input(\"To\").value);\n      index++\n    ) {\n      // If there's a node connected to the \"Do\" next socket...\n      if (this.next(\"Do\").peer !== null && this.next(\"Do\").peer.node !== null) {\n        // Set the \"Index\" output value to Index\n        this.output(\"Index\").value = index;\n\n        // Execute a sub program beginning on that node\n        this.program.processFrom(this.next(\"Do\").peer.node);\n      }\n    }\n\n    // Restore the current program's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function forNode() {\n  return new For();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node to get a variable's value\n * in the program's global space. This node has a functional\n * counterpart naamed FGetvar\n */\nexport class Getvar extends Node {\n  constructor() {\n    super(\"Getvar\");\n    this.inputs = [new InputSocket(\"Name\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    this.output(\"Val\").value = this.program.vars.get(varName);\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function getvarNode() {\n  return new Getvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket as NextSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * redirect the flow of execution based on the\n * \"condition\" input value\n */\nexport class If extends Node {\n  constructor() {\n    super(\"If\");\n    this.inputs = [new InputSocket(\"Condition\", this, Types.BOOLEAN, false)];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Then\", this), new NextSocket(\"Else\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let flow = null;\n    if (this.input(\"Condition\").value) {\n      flow = this.next(\"Then\");\n    } else {\n      flow = this.next(\"Else\");\n    }\n\n    return this.getFlowResult(flow);\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function ifNode() {\n  return new If();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for adding numeric values.\n * Supports a indefinite number of value inputs and one single output\n */\nexport class FAdd extends Node {\n  constructor() {\n    super(\"FAdd\");\n    // The node is pure functional\n    this.functional = true;\n\n    // This node has a variable number of inputs\n    this.canAddInput = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.NUMBER, 0),\n      new InputSocket(\"1\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    let sum = 0;\n    this.evaluateInputs();\n    for (let inp of this.inputs) {\n      sum += parseFloat(inp.value);\n    }\n    this.output(\"Val\").value = sum;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.ANY, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function faddNode() {\n  return new FAdd();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for divide numeric values.\n */\nexport class FDiv extends Node {\n  constructor() {\n    super(\"FDiv\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.NUMBER, 0),\n      new InputSocket(\"Val2\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value =\n      parseFloat(this.input(\"Val1\").value) /\n      parseFloat(this.input(\"Val2\").value);\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fdivNode() {\n  return new FDiv();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for modulus (%)\n */\nexport class FMod extends Node {\n  constructor() {\n    super(\"FMod\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.NUMBER, 0),\n      new InputSocket(\"Val2\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value =\n      parseFloat(this.input(\"Val1\").value) %\n      parseFloat(this.input(\"Val2\").value);\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fmodNode() {\n  return new FMod();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for multiply numeric values.\n * Supports a indefinite number of value inputs and one single output\n */\nexport class FMul extends Node {\n  constructor() {\n    super(\"FMul\");\n    // The node is pure functional\n    this.functional = true;\n\n    // This node has a variable number of inputs\n    this.canAddInput = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.NUMBER, 0),\n      new InputSocket(\"1\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    let mul = 1;\n    this.evaluateInputs();\n    for (let inp of this.inputs) {\n      mul *= parseFloat(inp.value);\n    }\n    this.output(\"Val\").value = mul;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.ANY, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fmulNode() {\n  return new FMul();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get return a simple\n * number constant. This is a functional node.\n */\nexport class FNConst extends Node {\n  constructor() {\n    super(\"FNConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = parseFloat(this.input(\"Val\").value);\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fnconstNode() {\n  return new FNConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for Square Root.\n */\nexport class FSqrt extends Node {\n  constructor() {\n    super(\"FSqrt\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to one numeric inputs\n    this.inputs = [new InputSocket(\"Val\", this, Types.NUMBER, 0)];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = Math.sqrt(parseFloat(this.input(\"Val\").value));\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fsqrtNode() {\n  return new FSqrt();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to break down\n * an object to its fields, or part of them\n */\nexport class FOBreak extends Node {\n  constructor() {\n    super(\"FOBreak\");\n    this.canAddOutput = true;\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.OBJECT, {})];\n\n    this.outputs = [\n      new OutputSocket(\"field1\", this, Types.ANY, \"\"),\n      new OutputSocket(\"field2\", this, Types.ANY, \"\"),\n    ];\n\n    // Sets all output as changeable in terms of name\n    for (let o of this.outputs) {\n      o.canEditName = true;\n    }\n\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    for (let o of this.outputs) {\n      o.value = this.input(\"Val\").value[o.name];\n    }\n  }\n\n  /**\n   * If this.#canAddOutput is true, the user can add an output\n   * equal to the (at least one) output that already exists\n   * Subclass with variable number of input should override this method\n   */\n  addOutput() {\n    if (this.canAddOutput) {\n      let o = new OutputSocket(\"\", this, Types.ANY, \"\");\n      o.canEditName = true;\n      this.outputs.push(o);\n    } else {\n      throw new Error(\"Can't add output!\");\n    }\n  }\n\n  /**\n   * This method removes a specific output from the node\n   * @param {OutputSocket} output The output to remove\n   */\n  removeOutput(output) {\n    if (this.canRemoveOutput(output)) {\n      this.outputs = this.outputs.filter((o) => o !== output);\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific output?\n   * There must be at least 1 output\n   * @param {OutputSocket} output The output to remove\n   */\n  canRemoveOutput(output) {\n    return this.outputs.length > 1;\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fobreakNode() {\n  return new FOBreak();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an object\n * from a list of fields\n */\nexport class FOMake extends Node {\n  constructor() {\n    super(\"FOMake\");\n    this.canAddInput = true;\n    this.functional = true;\n    this.inputs = [\n      new InputSocket(\"field1\", this, Types.ANY, \"\"),\n      new InputSocket(\"field2\", this, Types.ANY, \"\"),\n    ];\n\n    // Sets all input as changeable in terms of name\n    for (let i of this.inputs) {\n      i.canEditName = true;\n    }\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.OBJECT, {})];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let obj = this.inputs.reduce((acc, val) => {\n      return { ...acc, [val.name]: val.value };\n    }, {});\n\n    this.output(\"Val\").value = obj;\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 1 input\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 0;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * the new input must have this.#canEditName === true.\n   * in this particular case the name is editable, so let the user\n   * to choose and left it blank\n   */\n  addInput() {\n    let is = new InputSocket(\"\", this, Types.ANY, \"\");\n    is.canEditName = true;\n    this.inputs.push(is);\n  }\n\n  /**\n   * This method removes a specific input from the node\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fomakeNode() {\n  return new FOMake();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node to set a variable\n * value in the program's global space. If the variable\n * don't exists, the processo function will create it\n */\nexport class Setvar extends Node {\n  constructor() {\n    super(\"Setvar\");\n    this.inputs = [\n      new InputSocket(\"Name\", this, Types.STRING, 0),\n      new InputSocket(\"Val\", this, Types.ANY, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process fmethod\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    let varVal = this.input(\"Val\").value;\n    this.program.vars.set(varName, varVal);\n    this.output(\"Val\").value = varVal;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function setvarNode() {\n  return new Setvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node that conctas two strings.\n * If other type are passed, these are converted to strings\n */\nexport class FConcat extends Node {\n  constructor() {\n    super(\"FConcat\");\n    this.functional = true;\n    this.canAddInput = true;\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.STRING, \"\"),\n      new InputSocket(\"1\", this, Types.STRING, \"\"),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    let res = \"\";\n    for (let i of this.inputs) {\n      res += i.value.toString();\n    }\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = res;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.ANY, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fconcatNode() {\n  return new FConcat();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get return a simple\n * string constant. This is a functional node.\n */\nexport class FSConst extends Node {\n  constructor() {\n    super(\"FSConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.STRING, \"\")];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = this.input(\"Val\").value.toString();\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fsconstNode() {\n  return new FSConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * iterate until a condition become false, like\n * while(condition) do();\n */\nexport class While extends Node {\n  constructor() {\n    super(\"While\");\n    this.inputs = [\n      new InputSocket(\"Index\", this, Types.NUMBER, 0),\n      new InputSocket(\"Condition\", this, Types.BOOLEAN, false),\n    ];\n    this.outputs = [new OutputSocket(\"Index\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n    // A bouns index variable ;-)\n    let index = parseFloat(this.input(\"Index\").value);\n\n    // Set the \"Index\" output value to Index\n    this.output(\"Index\").value = index;\n\n    // Re evaluate inputs in case of Condition depends on Index output\n    this.evaluateInputs();\n\n    // Let's cycle while condition is true\n    while (this.input(\"Condition\").value) {\n      // If there's a node connected to the \"Do\" next socket...\n      if (this.next(\"Do\").peer !== null && this.next(\"Do\").peer.node !== null) {\n        // Set the \"Index\" output value to Index\n        this.output(\"Index\").value = index++;\n\n        // Execute a sub program beginning on that node\n        this.program.processFrom(this.next(\"Do\").peer.node);\n\n        // Re-compute the guard...\n        this.evaluateInputs();\n      }\n    }\n\n    // Restore the currentprogram's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function whileNode() {\n  return new While();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}
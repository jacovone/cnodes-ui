{"version":3,"sources":["webpack://cnui/./node_modules/events/events.js","webpack://cnui/./src/canvas/canvas.js","webpack://cnui/./src/canvas/component.js","webpack://cnui/./src/canvas/connection.js","webpack://cnui/./src/canvas/menu.js","webpack://cnui/./src/canvas/position.js","webpack://cnui/./src/canvas/socket.js","webpack://cnui/./src/components/cnode.js","webpack://cnui/./src/components/cnodescanvas.js","webpack://cnui/./src/components/cnodesconnection.js","webpack://cnui/./src/components/cnodeseditabletext.js","webpack://cnui/./src/components/cnodesmenu.js","webpack://cnui/./src/components/cnodessocket.js","webpack://cnui/./src/components/input.js","webpack://cnui/./src/components/next.js","webpack://cnui/./src/components/nodes/cnodebreak.js","webpack://cnui/./src/components/nodes/cnodeprogram.js","webpack://cnui/./src/components/output.js","webpack://cnui/./src/components/prev.js","webpack://cnui/./src/components/theme.js","webpack://cnui/./src/connections/ioconnection.js","webpack://cnui/./src/connections/prevnextconnection.js","webpack://cnui/./src/index.js","webpack://cnui/../cnodes/cnodes.js","webpack://cnui/../cnodes/lib/core/enter.js","webpack://cnui/../cnodes/lib/core/env.js","webpack://cnui/../cnodes/lib/core/exit.js","webpack://cnui/../cnodes/lib/core/node.js","webpack://cnui/../cnodes/lib/core/program.js","webpack://cnui/../cnodes/lib/core/socket.js","webpack://cnui/../cnodes/lib/core/type.js","webpack://cnui/../cnodes/lib/nodes/array/amap.js","webpack://cnui/../cnodes/lib/nodes/array/apush.js","webpack://cnui/../cnodes/lib/nodes/array/areduce.js","webpack://cnui/../cnodes/lib/nodes/array/faconst.js","webpack://cnui/../cnodes/lib/nodes/array/faget.js","webpack://cnui/../cnodes/lib/nodes/array/falength.js","webpack://cnui/../cnodes/lib/nodes/array/famake.js","webpack://cnui/../cnodes/lib/nodes/array/famap.js","webpack://cnui/../cnodes/lib/nodes/array/fareduce.js","webpack://cnui/../cnodes/lib/nodes/bool/fcompare.js","webpack://cnui/../cnodes/lib/nodes/bool/fequal.js","webpack://cnui/../cnodes/lib/nodes/bool/fgt.js","webpack://cnui/../cnodes/lib/nodes/bool/fgte.js","webpack://cnui/../cnodes/lib/nodes/bool/flt.js","webpack://cnui/../cnodes/lib/nodes/bool/flte.js","webpack://cnui/../cnodes/lib/nodes/bool/fnotequal.js","webpack://cnui/../cnodes/lib/nodes/call.js","webpack://cnui/../cnodes/lib/nodes/console.js","webpack://cnui/../cnodes/lib/nodes/fgetvar.js","webpack://cnui/../cnodes/lib/nodes/fif.js","webpack://cnui/../cnodes/lib/nodes/for.js","webpack://cnui/../cnodes/lib/nodes/getvar.js","webpack://cnui/../cnodes/lib/nodes/if.js","webpack://cnui/../cnodes/lib/nodes/math/fadd.js","webpack://cnui/../cnodes/lib/nodes/math/fdiv.js","webpack://cnui/../cnodes/lib/nodes/math/fmod.js","webpack://cnui/../cnodes/lib/nodes/math/fmul.js","webpack://cnui/../cnodes/lib/nodes/math/fnconst.js","webpack://cnui/../cnodes/lib/nodes/math/fsqrt.js","webpack://cnui/../cnodes/lib/nodes/object/fobreak.js","webpack://cnui/../cnodes/lib/nodes/object/fomake.js","webpack://cnui/../cnodes/lib/nodes/setvar.js","webpack://cnui/../cnodes/lib/nodes/string/fconcat.js","webpack://cnui/../cnodes/lib/nodes/string/fsconst.js","webpack://cnui/../cnodes/lib/nodes/while.js","webpack://cnui/webpack/bootstrap","webpack://cnui/webpack/runtime/compat get default export","webpack://cnui/webpack/runtime/define property getters","webpack://cnui/webpack/runtime/hasOwnProperty shorthand","webpack://cnui/webpack/runtime/make namespace object","webpack://cnui/webpack/startup"],"names":["R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","module","exports","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","_getMaxListeners","that","getMaxListeners","emit","type","i","arguments","length","push","doError","events","error","er","Error","err","message","context","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","name","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","bind","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","Array","index","pop","ret","Promise","resolve","reject","eventListener","errorListener","slice","Canvas","el","document","createElementNS","style","width","height","appendChild","Theme","self","window","addEventListener","e","cancelContextMenu","clientX","clientY","p","createSVGPoint","x","y","pSVG","matrixTransform","getScreenCTM","inverse","onlySockets","pointedEl","elementFromPoint","componentRef","SocketComponent","parentElement","connection","canvas","connectionEl","source","updateSVGElement","destroy","filter","c","removeChild","socket1","socket2","connections","findIndex","component","componentEl","components","s","getConnectionsFor","removeConnection","conns","socket","removeComponent","removeAllConnections","removeAllComponents","items","contextMenuComponent","val","setAttribute","clientWidth","clientHeight","clientToSvgPoint","zoomFactor","zoom","deltaY","newWidth","newHeight","newLeft","newTop","stopPropagation","button","setPointerCapture","pointerId","releasePointerCapture","movePoint","xDiff","yDiff","preventDefault","componentFromPosition","getCanvasContextMenuItems","getContextMenuItems","showContextMenu","Component","Position","createElement","moveable","pos","absPos","updateAllConnectionsFor","parent","svgEl","forEach","parentPos","add","Connection","MenuItem","text","callback","searchText","Menu","setup","addComponent","dragElement","onPointerDown","onPointerUp","onPointerMove","connectionsEl","hasSingleConnection","isConnected","connectionStarted","peerComponent","getSinglePeerComponent","con","connectingSocketComponent","connectionDone","connectionEndedOutOfSocket","pointedComponent","canAcceptPeerSocket","connectionMoving","invalid","sourcePoint","targetPoint","currentPeerSocketComponent","socketComp","CnodeComponent","node","__comp","program","addNode","updateSubcomponents","nodeEl","functional","signRadius","posY","prev","nComp","PrevSocketComponent","nexts","next","NextSocketComponent","outputs","output","OutputSocketComponent","inputs","input","InputSocketComponent","CnodesEditableTextComponent","title","color","font","meta","titlePos","canAddInput","addInput","canAddOutput","addOutput","comp","conn","removable","createCommentComponent","comment","initialEdit","setEditing","removeNode","leftSocketsHeight","rightSocketsHeight","CnodesCanvas","defsEl","innerHTML","process","log","Env","canPopProgram","popProgram","cat","nodeDef","creatable","category","getNodeUIInstance","menuCallback","CnodesMenu","show","removeAll","nodes","titleComp","peers","peer","alreadyConnected","PrevNextConnection","inp","IOConnection","outp","setTimeout","importCnodesProgram","factory","constructor","Map","CnodesConnection","addConnection","connect","disconnect","type1","type2","Types","editMode","focus","select","groupEl","textEl","textInputEl","inputEl","createMenuItemsElements","menuEl","textInputElem","getAttribute","keyCode","filteredElements","getBoundingClientRect","left","top","itemResult","itemEl","itemTextEl","splice","maxWidth","entries","item","itemX","itemY","result","Math","max","getBBox","itemWidth","itemHeight","filterElems","idx","toUpperCase","includes","searchFilter","CnodesSocketComponent","getRegisteredPossiblePeers","tempConnectionEl","cpXDistance","abs","min","cp1","getSourcePointDirection","cp2","textInputNameElem","canEditName","textInputValueElem","inputElem","canBeConnected","removeAttribute","parseFloat","out","canRemoveInput","removeInput","canEditType","labelElem","prevElem","PrevSocket","CnodeBreakComponent","o","canRemoveOutput","removeOutput","CnodeProgramComponent","pushProgram","textOutputNameElem","outputElem","NextSocket","defaultLight","getRelevantType","elId","getElementById","Program","FOBreak","Enter","InputSocket","OutputSocket","evaluateInputs","getFlowResult","Node","enterNode","registerNode","callNode","consoleNode","fgetvarNode","forNode","getvarNode","ifNode","fifNode","setvarNode","whileNode","exitNode","fsconstNode","fconcatNode","fnconstNode","faddNode","fdivNode","fmodNode","fmulNode","fsqrtNode","fequalNode","fgtNode","fgteNode","fltNode","flteNode","fnotequalNode","apushNode","faconstNode","famakeNode","fagetNode","falengthNode","amapNode","famapNode","areduceNode","fareduceNode","fomakeNode","fobreakNode","categoryMap","from","values","element","registrations","entry","reg","obj","opts","createMake","makeNode","FOMake","field","is","editableInputs","forceTypes","fillValues","recursive","registerMaker","createBreak","breakNode","os","editableOutputs","registerBreaker","exp","id","version","lastNodeIndex","lastSocketIndex","Socket","enter","exit","nodeExp","map","cached","pushConnection","sourceNode","sourceSocket","targetNode","targetSocket","connectionExp","data","nodeData","getInstance","inpData","outpData","nextData","find","connectionData","Exit","Result","lastNodeIdIndex","evaluate","thisSocket","otherSocket","FlowSocket","disconnectAllSockets","processFrom","currentNode","lastSocketIdIndex","ValueSocket","NUMBER","STRING","BOOLEAN","OBJECT","ARRAY","ANY","AMap","outArr","isArray","APush","AReduce","acc0","reduced","reduce","acc","FAConst","JSON","parse","FAGet","parseInt","FALength","FAMake","FAMap","FAReduce","Comparision","EQUAL","GT","GTE","LT","LTE","NOT_EQUAL","FCompare","comparision","val1","val2","fcompareNode","FEqual","FGT","FGTE","FLT","FLTE","FNotEqual","Call","prevCurrentNode","Console","FGetvar","varName","vars","FIf","For","Getvar","If","flow","FAdd","sum","FDiv","FMod","FMul","mul","FNConst","FSqrt","sqrt","Setvar","varVal","FConcat","res","toString","FSConst","While"],"mappings":"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","file":"main.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"../components/theme\";\nimport { Component } from \"./component\";\nimport { Connection } from \"./connection\";\nimport { SocketComponent } from \"./socket\";\n\n/**\n * This is the main Canvas class. This class implement a general purpose canvas\n * that can manage nodes, components, sockets (a special subset of components) and connections\n * between sockets. The canvas is able to zoom and pan itself as well as to move\n * components. Components are organized in a hierarchical way, so that moving a component\n * will move all its subcomponents, including sockets. Sockets are (sub)components\n * that can be connected through connections to other sockets.\n * The class use SVG elements to render all elements.\n */\nexport class Canvas {\n  /** The main svg element */\n  #svgEl = null;\n\n  /** A group under the main svg element to store connections */\n  #connectionsEl = null;\n\n  /** The current SVG box view left coord */\n  #vbX = 0;\n\n  /** The current SVG box view top coord */\n  #vbY = 0;\n\n  /** The current SVG box view width */\n  #vbWidth = 100;\n\n  /** The current SVG box view height */\n  #vbHeight = 100;\n\n  /**\n   * Define the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  #minVBSize = 10;\n\n  /**\n   * Define the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  #maxVBSize = 50000;\n\n  /** The user is dragging the canvas backgorund? */\n  #dragging = false;\n\n  /** The point in which the drag was started */\n  #startDragPos;\n\n  /** The component for the contextual menu */\n  #contextMenuComponent = null;\n\n  /** The list of components in the canvas */\n  #components = [];\n\n  /** The list of connections between components in the canvas */\n  #connections = [];\n\n  /**\n   * The constructor of the Canvas object. Initializes the SVG element,\n   * set up all listeners to manage panning, zooming and selection.\n   * @param {HTMLElement} el The parent element in which create the SVG element\n   */\n  constructor(el) {\n    // Create the main SVG element\n    this.#svgEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n    this.#svgEl.style.width = \"100%\";\n    this.#svgEl.style.height = \"100%\";\n    el.appendChild(this.#svgEl);\n\n    // Background color\n    this.#svgEl.style[\"background-color\"] =\n      Theme.current.CANVAS_BACKGROUND_COLOR;\n\n    // Now create a \"g\" element that will be the parent of all connections. This is\n    // important to guarantee that connections will be always behind components\n    this.#connectionsEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    this.#svgEl.appendChild(this.#connectionsEl);\n\n    this.#adaptSVGSize();\n\n    // Define all pointer events to manager pan and zoom\n    let self = this;\n    window.addEventListener(\"resize\", () => {\n      self.#adaptSVGSize();\n    });\n    this.#svgEl.addEventListener(\"wheel\", (e) => {\n      self.#onWheel(e);\n    });\n    this.#svgEl.addEventListener(\"pointerdown\", (e) => {\n      this.cancelContextMenu();\n      self.#onPointerDown(e);\n    });\n    this.#svgEl.addEventListener(\"pointerup\", (e) => {\n      self.#onPointerUp(e);\n    });\n    this.#svgEl.addEventListener(\"pointermove\", (e) => {\n      self.#onPointerMove(e);\n    });\n    this.#svgEl.addEventListener(\"contextmenu\", (e) => {\n      self.#onContextMenu(e);\n    });\n  }\n\n  /**\n   * Returns the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  get minVBSize() {\n    return this.#minVBSize;\n  }\n  /**\n   * Sets the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  set minVBSize(val) {\n    this.#minVBSize = val;\n  }\n  /**\n   * Returns the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  get maxVBSize() {\n    return this.#maxVBSize;\n  }\n  /**\n   * Sets the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  set maxVBSize(val) {\n    this.#maxVBSize = val;\n  }\n  get components() {\n    return this.#components;\n  }\n  set components(val) {\n    this.#components = val;\n  }\n  get connections() {\n    return this.#connections;\n  }\n  set connections(val) {\n    this.#connections = val;\n  }\n  get contextMenuComponent() {\n    return this.#contextMenuComponent;\n  }\n  set contextMenuComponent(val) {\n    this.#contextMenuComponent = val;\n  }\n\n  /**\n   * Return the internal SVG element\n   */\n  get svgEl() {\n    return this.#svgEl;\n  }\n\n  /**\n   * Return the internal SVG connections element\n   */\n  get connectionsEl() {\n    return this.#connectionsEl;\n  }\n\n  /**\n   * Updates the box view coordinates based on coordinates\n   * stored in private fields #vbX, #vbY, #vbWidth and #vbHeight\n   */\n  #updateSVGViewBox() {\n    this.#svgEl.setAttribute(\n      \"viewBox\",\n      `${this.#vbX} ${this.#vbY} ${this.#vbWidth} ${this.#vbHeight}`\n    );\n  }\n\n  /**\n   * Adjust the view box of the svg element based of the container\n   * current size. It's called when a resize event is received\n   */\n  #adaptSVGSize() {\n    this.#vbWidth = this.#svgEl.parentElement.clientWidth;\n    this.#vbHeight = this.#svgEl.parentElement.clientHeight;\n    this.#updateSVGViewBox();\n  }\n\n  /**\n   * Manages the wheel event to imlement zooming\n   * @param {Event} e Wheel event\n   */\n  #onWheel(e) {\n    let p = this.clientToSvgPoint(e.clientX, e.clientY);\n\n    let zoomFactor = 0.003;\n    let zoom = 1 + e.deltaY * zoomFactor;\n\n    let newWidth = this.#vbWidth * zoom;\n    let newHeight = this.#vbHeight * zoom;\n\n    if (newHeight < this.#minVBSize) return;\n    if (newWidth < this.#minVBSize) return;\n    if (newHeight > this.#maxVBSize) return;\n    if (newWidth > this.#maxVBSize) return;\n\n    let newLeft =\n      this.#vbX -\n      (newWidth - this.#vbWidth) * ((p.x - this.#vbX) / this.#vbWidth);\n    let newTop =\n      this.#vbY -\n      (newHeight - this.#vbHeight) * ((p.y - this.#vbY) / this.#vbHeight);\n\n    this.#vbHeight = newHeight;\n    this.#vbWidth = newWidth;\n    this.#vbX = newLeft;\n    this.#vbY = newTop;\n\n    this.#updateSVGViewBox();\n    e.stopPropagation();\n  }\n\n  /**\n   * This method is responsible for translate client (browser) coordinates\n   * to SVG space coordinates\n   * @param {number} clientX The client x coordinate\n   * @param {number} clientY The client y coordinate\n   */\n  clientToSvgPoint(clientX, clientY) {\n    // Create a point in SVG space\n    let p = this.#svgEl.createSVGPoint();\n\n    p.x = clientX;\n    p.y = clientY;\n\n    // Translate coordinates using the SVG transofrmation matrix\n    let pSVG = p.matrixTransform(this.#svgEl.getScreenCTM().inverse());\n    return pSVG;\n  }\n\n  /**\n   * Manage the mousedown event to implement pan\n   * @param {Event} e The mousedown event\n   */\n  #onPointerDown(e) {\n    if (e.button === 0) {\n      this.#dragging = true;\n      this.#startDragPos = this.clientToSvgPoint(e.clientX, e.clientY);\n      this.#svgEl.setPointerCapture(e.pointerId);\n    }\n  }\n\n  /**\n   * Manages the mouseup event to implement pan\n   * @param {Event} e The mouseup event\n   */\n  #onPointerUp(e) {\n    if (e.button === 0) {\n      this.#dragging = false;\n      this.#svgEl.releasePointerCapture(e.pointerId);\n    }\n  }\n\n  /**\n   * Manages the mousemove event to implement pan\n   * @param {Event} e The mousemove event\n   */\n  #onPointerMove(e) {\n    if (!this.#dragging) {\n      return;\n    }\n    let movePoint = this.clientToSvgPoint(e.clientX, e.clientY);\n    let xDiff = movePoint.x - this.#startDragPos.x;\n    let yDiff = movePoint.y - this.#startDragPos.y;\n    this.#vbX -= xDiff;\n    this.#vbY -= yDiff;\n    this.#updateSVGViewBox();\n  }\n\n  /**\n   * Manages the contextmenu event to implement custom menu\n   * @param {Event} e The contextmenu event\n   */\n  #onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let component = this.componentFromPosition(e.clientX, e.clientY);\n    let p = this.clientToSvgPoint(e.clientX, e.clientY);\n\n    let items;\n    if (!component) {\n      items = this.getCanvasContextMenuItems();\n    } else {\n      items = component.getContextMenuItems();\n    }\n\n    this.showContextMenu(items, p.x, p.y);\n  }\n\n  /**\n   * This method detect a cnodes-ui component inside the canvas\n   * at specified location (x,y). Optionally the user can request\n   * only sockets component, this is useful when you want to search\n   * a possible connection peer during the link process\n   * @param {number} x The x coordinate in the canvas\n   * @param {number} y Te y coordinate in the canvas\n   * @param {boolean} onlySockets If true, this method search only for socket components\n   */\n  componentFromPosition(x, y, onlySockets = false) {\n    // Get the DOM element at x,y in client space\n    let pointedEl = document.elementFromPoint(x, y);\n\n    // Searching for an element with the property \"componentRef\". When cnodes-ui\n    // add a component, insert this property inside the SVG root element of the component\n    while (pointedEl) {\n      // Traverse the DOM tree\n      if (\n        pointedEl.componentRef &&\n        (!onlySockets || pointedEl.componentRef instanceof SocketComponent)\n      ) {\n        return pointedEl.componentRef;\n      }\n      pointedEl = pointedEl.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * Add a new connection to the canvas, also add the related element to\n   * the main SVG group of connections\n   * @param {Connection} connection The connection to add\n   */\n  addConnection(connection) {\n    this.#connections.push(connection);\n    connection.canvas = this;\n    this.#connectionsEl.appendChild(connection.connectionEl);\n\n    // Update connected sockets\n    connection.source.updateSVGElement();\n    connection.target.updateSVGElement();\n  }\n\n  /**\n   * Remove a connection from the canvas, also remove the related SVG element\n   * @param {Connection} connection The connection to remove\n   */\n  removeConnection(connection) {\n    // Signal the connection that will be destroyed\n    connection.destroy();\n    this.#connections = this.#connections.filter((c) => c !== connection);\n    this.#connectionsEl.removeChild(connection.connectionEl);\n\n    // Update connected sockets\n    connection.source.updateSVGElement();\n    connection.target.updateSVGElement();\n  }\n\n  /**\n   * Checks if there is a connection between sockets already\n   * @param {SocketComponent} socket1 First socket component\n   * @param {SocketComponent} socket2 Second socket component\n   */\n  alreadyConnected(socket1, socket2) {\n    return (\n      this.connections.findIndex(\n        (c) =>\n          (c.source === socket1 && c.target === socket2) ||\n          (c.source === socket2 && c.target === socket1)\n      ) !== -1\n    );\n  }\n\n  /**\n   * Add a new component to the canvas\n   * @param {Component} component Component to add\n   */\n  addComponent(component) {\n    this.#components.push(component);\n    component.canvas = this;\n    this.#svgEl.appendChild(component.componentEl);\n  }\n\n  /**\n   * Remove a component from the canvas\n   * @param {Component} component Component to remove\n   */\n  removeComponent(component) {\n    // Remove related connections\n    for (let s of component.components) {\n      if (s instanceof SocketComponent) {\n        for (let c of this.getConnectionsFor(s)) {\n          this.removeConnection(c);\n        }\n      }\n    }\n\n    // Signal component that will be removed\n    component.destroy();\n\n    // Remove the component from the SVG space\n    this.components = this.#components.filter((c) => c !== component);\n    this.#svgEl.removeChild(component.componentEl);\n  }\n\n  /**\n   * Update all connections in terms of SVG properties. This is\n   * important because when components are moved, this ensures that\n   * connections will follow them\n   */\n  updateAllConnections() {\n    for (let connection of this.#connections) {\n      connection.updateSVGElement();\n    }\n  }\n\n  /**\n   * Update all connections for a component in terms of SVG properties. This is\n   * important because when components are moved, this ensures that\n   * connections will follow them\n   * @param {Component} component The component for which update connections\n   */\n  updateAllConnectionsFor(component) {\n    let conns = this.getConnectionsFor(component);\n    for (let connection of conns) {\n      connection.updateSVGElement();\n    }\n  }\n\n  /**\n   * This method extract all connections in the canvas, that have\n   * the source or the target SocketComponent as endpoint\n   * @param {SocketComponent} socket The socket component for which search the connection\n   */\n  getConnectionsFor(socket) {\n    return this.#connections.filter(\n      (c) => c.source === socket || c.target === socket\n    );\n  }\n\n  /**\n   * Removes all connections from the canvas\n   */\n  removeAllConnections() {\n    while (this.#connections.length > 0) {\n      this.removeConnection(this.#connections[0]);\n    }\n  }\n\n  /**\n   * Removes all components from the canvas\n   */\n  removeAllComponents() {\n    while (this.#components.length > 0) {\n      this.removeComponent(this.#components[0]);\n    }\n  }\n\n  /**\n   * Remoives all connections and all components from the canvas\n   */\n  removeAll() {\n    this.removeAllConnections();\n    this.removeAllComponents();\n  }\n\n  /**\n   * Return a list of MenuItem for the context menu\n   */\n  getCanvasContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * Shows the context menu retated to the component or the canvas\n   * @param {MenuItem[]} items Items that compose the menu\n   * @param {number} x The x coordinate for the menu\n   * @param {number} y The y coordinate for the menu\n   */\n  showContextMenu(items, x, y) {\n    throw new Error(\"You must override this method in a subclass!\");\n  }\n\n  /**\n   * Cancels the current open context menu, and closes it\n   */\n  cancelContextMenu() {\n    if (this.#contextMenuComponent) {\n      this.removeComponent(this.#contextMenuComponent);\n      this.contextMenuComponent = null;\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"./position\";\nimport { EventEmitter } from \"events\";\n\n/**\n * This class is the base class for all components in the cnodes-ui canvas.\n * The class is responsible for manage mobility of components. This is not\n * yet the class for the cnodes nodes, is more abstract so that the user can\n * derive from that to implement components that are not explicitly connected\n * to the cnodes library, such as decorators, comments, etc.\n * In general component can have subcomponents. Special examples of subcomponents are\n * sockets. The socket is a component that can be connected through connections,\n * in the canvas-ui class model.\n */\nexport class Component {\n  /** A reference to the enclosing canvas */\n  #canvas = null;\n\n  /** A reference to the SVG element that implement the component */\n  #componentEl = null;\n\n  /** The parent component if there is one */\n  #parent = null;\n\n  /** Is this component moveable? */\n  #moveable = true;\n\n  /** The position fo this component inside the canvas, in SVG coordinates */\n  #pos = new Position(0, 0);\n\n  /** The component is actually moving */\n  #moving = false;\n\n  /** A reference to the position of the component at the time hi starts moving */\n  #startMovePos = null;\n\n  /** The pointer position at the time in which the component starts moving */\n  #startMovePointerPos = null;\n\n  /** The list of eventual child components */\n  #components = [];\n\n  /**\n   * Events connected to the component:\n   *\n   * This attribute emits following events:\n   *\n   * - cnui:change(comp), when something changes inside component, comp\n   *   is the entire component passed as event parameter\n   * - cnui:componentAdded(comp, subComp), when a component is added as a child,\n   *   comp is this component, while subComp is the component being added\n   * - cnui:componentRemoved(comp, subComp), when a component is from children,\n   *   comp is this component, while subComp is the component being removed\n   * - cnui:destroy(comp), when the component is destroyed. comp is this component\n   */\n  events = new EventEmitter();\n\n  constructor() {}\n\n  /**\n   * Sets up the component. The component creation follow a specific flow.\n   * The user that creates the component have to call this method after, to\n   * initializes the internal SVG component and optionally installs pointer\n   * event listeners to manage moving.\n   * By default setup() return this, so you can concatenate construction such as\n   * new Component(...).setup();\n   */\n  setup() {\n    // Create the SVG element. A subclass must override this method\n    // to define the graphical aspect of the component\n    this.#componentEl = this.createElement();\n\n    let self = this;\n\n    // Register a reference of this component inside the HTML element\n    this.#componentEl.componentRef = this;\n\n    // Cancel context menu on any pointerdown event\n    this.#componentEl.addEventListener(\"pointerdown\", (e) => {\n      self.canvas.cancelContextMenu();\n    });\n\n    if (this.moveable) {\n      this.#componentEl.addEventListener(\"pointerdown\", (e) => {\n        self.#onPointerDown(e);\n      });\n      this.#componentEl.addEventListener(\"pointerup\", (e) => {\n        self.#onPointerUp(e);\n      });\n      this.#componentEl.addEventListener(\"pointermove\", (e) => {\n        self.#onPointerMove(e);\n      });\n    }\n\n    return this;\n  }\n\n  get pos() {\n    return this.#pos;\n  }\n  set pos(val) {\n    this.#pos = val;\n    this.updateSVGElement();\n  }\n  get canvas() {\n    return this.#canvas;\n  }\n  set canvas(val) {\n    this.#canvas = val;\n  }\n  get componentEl() {\n    return this.#componentEl;\n  }\n  get components() {\n    return this.#components;\n  }\n  set components(val) {\n    this.#components = val;\n  }\n\n  get svgEl() {\n    return this.#canvas.svgEl;\n  }\n\n  get moveable() {\n    return this.#moveable;\n  }\n  set moveable(val) {\n    this.#moveable = val;\n  }\n  get parent() {\n    return this.#parent;\n  }\n  set parent(val) {\n    this.#parent = val;\n  }\n\n  /**\n   * Manages the mousedown event to implement moving\n   * @param {Event} e The mousedown event\n   */\n  #onPointerDown(e) {\n    if (e.button === 0) {\n      if (this.#moveable) {\n        this.#moving = true;\n        this.#startMovePos = this.#canvas.clientToSvgPoint(\n          e.clientX,\n          e.clientY\n        );\n        this.#startMovePointerPos = this.#canvas.svgEl.createSVGPoint();\n        this.#startMovePointerPos.x = this.#pos.x;\n        this.#startMovePointerPos.y = this.#pos.y;\n        this.#componentEl.setPointerCapture(e.pointerId);\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * Manages the mouseup event to implement pan\n   * @param {Event} e The mouseup event\n   */\n  #onPointerUp(e) {\n    if (this.#moveable && e.button === 0) {\n      this.#moving = false;\n      this.#componentEl.releasePointerCapture(e.pointerId);\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Manages the mousemove event to implement pan\n   * @param {Event} e The mousemove event\n   */\n  #onPointerMove(e) {\n    if (this.#moveable) {\n      if (!this.#moving) {\n        return;\n      }\n      let movePoint = this.#canvas.clientToSvgPoint(e.clientX, e.clientY);\n      let xDiff = movePoint.x - this.#startMovePos.x;\n      let yDiff = movePoint.y - this.#startMovePos.y;\n\n      // This effectively move the element\n      this.#pos.x = xDiff + this.#startMovePointerPos.x;\n      this.#pos.y = yDiff + this.#startMovePointerPos.y;\n      this.updateSVGElement();\n\n      this.events.emit(\"cnui:change\", this);\n\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * This method must be overridden in a child concrete class.\n   * The setup() mthod calls this one during the creation process\n   */\n  createElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * Returns the absolute position of this component, in terms\n   * of canvas coordinates, by travering the child-parent component\n   * hierarchy\n   */\n  get absPos() {\n    let pos = new Position(this.#pos.x, this.#pos.y);\n    if (this.#parent) {\n      let parentPos = this.#parent.absPos;\n      pos = pos.add(parentPos);\n    }\n    return pos;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed\n   */\n  updateSVGElement() {\n    let pos = this.absPos;\n    this.#componentEl.setAttribute(\"transform\", `translate(${pos.x},${pos.y})`);\n\n    // Also update all children and its connections\n    for (let c of this.#components) {\n      c.updateSVGElement();\n      this.canvas.updateAllConnectionsFor(c);\n    }\n  }\n\n  /**\n   * Add a new component as child component.\n   * WARNING: before attach child components, this component\n   * must to be attached to the canvas itself, otherwise the method\n   * fails\n   * @param {Component} component Component to add\n   */\n  addComponent(component) {\n    this.#components.push(component);\n    component.parent = this;\n    component.canvas = this.canvas;\n    this.svgEl.appendChild(component.componentEl);\n    component.updateSVGElement();\n\n    this.events.emit(\"cnui:componentAdded\", this, component);\n  }\n\n  /**\n   * Remove a child subcomponent\n   * @param {Component} component The component to remove\n   */\n  removeComponent(component) {\n    this.components = this.#components.filter((c) => c !== component);\n    component.destroy();\n    this.svgEl.removeChild(component.componentEl);\n\n    this.events.emit(\"cnui:componentRemoved\", this, component);\n  }\n\n  /**\n   * This method is called when this component is removed\n   * from the canvas of from its parent component\n   */\n  destroy() {\n    // Removes all subcomponents\n    this.components.forEach((c) => this.removeComponent(c));\n    this.events.emit(\"cnui:destroy\", this);\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * This is tha base class of all connections. A Connection is always a\n * link from two sockets. Sockets are special subclass of components, tipically\n * child of base components\n */\nexport class Connection {\n  /** A reference to the enclosing canvas */\n  #canvas = null;\n\n  /** A reference to the SVG element of this connection */\n  #connectionEl = null;\n\n  /** The source socket component for the link */\n  #source = null;\n\n  /** Yhe destination socket component for the link */\n  #target = null;\n\n  /**\n   * Construct a connection instance by setting its source and target\n   */\n  constructor(source, target) {\n    this.#source = source;\n    this.#target = target;\n    this.source.updateSVGElement();\n    this.target.updateSVGElement();\n  }\n\n  /**\n   * Sets up this connection. In terms of construction flow\n   * this means create the SVG element that will be shown\n   */\n  setup() {\n    this.#connectionEl = this.createElement();\n    return this;\n  }\n\n  get canvas() {\n    return this.#canvas;\n  }\n  set canvas(val) {\n    this.#canvas = val;\n  }\n  get source() {\n    return this.#source;\n  }\n  set source(val) {\n    this.#source = val;\n  }\n  get target() {\n    return this.#target;\n  }\n  set target(val) {\n    this.#target = val;\n  }\n  get connectionEl() {\n    return this.#connectionEl;\n  }\n  get svgEl() {\n    return this.#canvas.svgEl;\n  }\n\n  /**\n   * This method is responsible to create the SVG element\n   * for display the connetion. Subclasses must override this method\n   */\n  createElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * This method is called when the connetion needs to be updated.\n   * This happens when sockets and/or components connected to this\n   * object where moved\n   */\n  updateSVGElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * This method is called when the connection is removed from the canvas\n   */\n  destroy() {}\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Canvas } from \"./canvas\";\nimport { Component } from \"./component\";\nimport { Position } from \"./position\";\n\n/**\n * This class represents a single Menu item.\n * A menu itemhas a text, and a callback to call on click\n */\nexport class MenuItem {\n  /** The \"click\" callback */\n  #callback = null;\n\n  /** The text for the item */\n  #text = \"\";\n\n  /** The text to consider during the search */\n  #searchText = \"\";\n\n  /**\n   * Constructs a menu item\n   * @param {string} text Title of the menu item\n   * @param {function} callback The callback function to call on click event\n   */\n  constructor(text, callback, searchText = text) {\n    this.#text = text;\n    this.#callback = callback;\n    this.#searchText = searchText;\n  }\n\n  get text() {\n    return this.#text;\n  }\n  set text(val) {\n    this.#text = val;\n  }\n  get callback() {\n    return this.#callback;\n  }\n  set callback(val) {\n    this.#callback = val;\n  }\n  get searchText() {\n    return this.#searchText;\n  }\n  set searchText(val) {\n    this.#searchText = val;\n  }\n}\n\n/**\n * This class implements a menu\n */\nexport class Menu extends Component {\n  /** Menu items */\n  #items = [];\n\n  /**\n   * Construct a new Menu for the canvas\n   * @param {Canvas} canvas The canvas\n   * @param {MenuItem[]} items The menu items\n   */\n  constructor(canvas, items) {\n    super();\n    this.moveable = false;\n    this.canvas = canvas;\n    this.#items = items;\n  }\n\n  get items() {\n    return this.#items;\n  }\n  set items(val) {\n    this.#items = val;\n  }\n\n  /**\n   * Show the menu\n   * @param {number} x The x coordinate\n   * @param {number} y The y coordinate\n   */\n  show(x, y) {\n    this.setup();\n\n    canvas.addComponent(this);\n    this.pos = new Position(x, y);\n  }\n\n  /**\n   * Computes the menu vertical size, based on menu items\n   */\n  get height() {\n    throw new Error(\"A subclass must implement this method!\");\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    throw new Error(\"A subclass must implement this method!\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * A class that represents a position in SVG space\n */\nexport class Position {\n  /** The x coordinate */\n  #x = 0;\n\n  /** The y coordinate */\n  #y = 0;\n\n  /**\n   * Construct a new Position\n   * @param {number} x The x coordinate\n   * @param {number} y The y coordinate\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  get x() {\n    return this.#x;\n  }\n  set x(val) {\n    this.#x = val;\n  }\n  get y() {\n    return this.#y;\n  }\n  set y(val) {\n    this.#y = val;\n  }\n\n  /**\n   * Return a new position by adding another instance of\n   * position coordinate by coordinate\n   * @param {Position} pos\n   */\n  add(pos) {\n    return new Position(this.#x + pos.x, this.#y + pos.y);\n  }\n\n  /**\n   * Return a new position by subtracting another instance of\n   * position coordinate by coordinate\n   * @param {Position} pos\n   */\n  sub(pos) {\n    return new Position(this.#x - pos.x, this.#y - pos.y);\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"./component\";\nimport { Position } from \"./position\";\n\n/**\n * A Socket is a special case of component. Tipically, to design\n * a component node in canvas-ui, you define a base component, and attach\n * to it a list of subcomponents that derives from Socket class, for\n * give the user the chance to link nodes\n */\nexport class SocketComponent extends Component {\n  /** This socket is connecting, the user is dragging with the mouse */\n  #connecting = false;\n\n  /** The last (other) socket pointed by the mouse cursor while connecting */\n  #currentPeerSocketComponent = null;\n\n  /** This SVG component is used to display a temporary floating link during the connection */\n  #tempConnectionEl = null;\n\n  constructor() {\n    super();\n  }\n\n  get connecting() {\n    return this.#connecting;\n  }\n  set connecting(val) {\n    this.#connecting = val;\n  }\n  get currentPeerSocketComponent() {\n    return this.#currentPeerSocketComponent;\n  }\n  get tempConnectionEl() {\n    return this.#tempConnectionEl;\n  }\n  set tempConnectionEl(val) {\n    this.#tempConnectionEl = val;\n  }\n\n  /**\n   * Sets up a socket. A socket is not movable by default and\n   * calls the createElement() method to prepare the SVG element\n   */\n  setup() {\n    // Set as non-movable befor calling super.setip() so\n    // no pointer event handler will be added by the base\n    // component to manage drag to move functionality\n    this.moveable = false;\n    super.setup();\n\n    // All sockets does not manage pointer events so events\n    // can pass through to the base componentEl element....\n    this.componentEl.style[\"pointer-events\"] = \"none\";\n    // ... but the dragEle element (that by default is the entire componentEl ;-)\n    this.dragElement.style[\"pointer-events\"] = \"auto\";\n\n    let self = this;\n\n    this.dragElement.addEventListener(\"pointerdown\", (e) => {\n      self.onPointerDown(e);\n    });\n    this.dragElement.addEventListener(\"pointerup\", (e) => {\n      self.onPointerUp(e);\n    });\n    this.dragElement.addEventListener(\"pointermove\", (e) => {\n      self.onPointerMove(e);\n    });\n\n    return this;\n  }\n\n  /**\n   * Returns the element that responds to pointer events. By\n   * default this is the entire root element\n   */\n  get dragElement() {\n    return this.componentEl;\n  }\n\n  /**\n   * Manages the pointerdown event to implement the start of the\n   * drag-and-link process. If the socket is a one-link socket, such as\n   * a \"next\" connection to another node, a pointerdown should disconnect\n   * the old connection and restart the dragging of the peek socket, to give\n   * the user the chance to connect the peer socket to another one.\n   * If the socket was not already connected, call the connectionStarted()\n   * method that will be overridden in subclasses\n   * @param {Event} e The pointerdown event\n   */\n  onPointerDown(e) {\n    if (e.button === 0) {\n      // Cancel previous context menu\n      if (this.#tempConnectionEl) {\n        this.canvas.cancelContextMenu();\n        this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n        this.#tempConnectionEl = null;\n      }\n\n      if (!this.hasSingleConnection || !this.isConnected) {\n        this.#connecting = true;\n        this.dragElement.setPointerCapture(e.pointerId);\n        e.stopPropagation();\n\n        // Connect action is started\n        this.connectionStarted();\n      } else {\n        let peerComponent = this.getSinglePeerComponent();\n        peerComponent.onPointerDown(e);\n\n        let con = this.canvas.getConnectionsFor(this)[0];\n        this.canvas.removeConnection(con);\n\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * This method manages the pointerup event to implement\n   * the final part of the connection. If the pointer is overing a\n   * valid peer socket, then the connection ca be done, and the\n   * connectionDone() method can be call. Otherwise the\n   * connectionEndedOutOfSocket() is called.\n   * @param {Event} e The pointerup event\n   */\n  onPointerUp(e) {\n    if (e.button === 0) {\n      this.#connecting = false;\n      this.dragElement.releasePointerCapture(e.pointerId);\n      e.stopPropagation();\n\n      if (this.#currentPeerSocketComponent) {\n        let connectingSocketComponent = this.#currentPeerSocketComponent;\n        this.#currentPeerSocketComponent = null;\n        this.connectionDone(connectingSocketComponent);\n      } else {\n        this.connectionEndedOutOfSocket(e);\n      }\n    }\n  }\n\n  /**\n   * This method manages the pointermove event to implement the\n   * middle part of the connection process. During this phase, cnodes-ui\n   * check if the pointer is overing a valid peer socket component, and\n   * if true, show the temprary link in a \"valid state\", such as a special color\n   * of the stroke stroke, and store the peer component in the currentPeerSocketComponent\n   * for future use.\n   * @param {Event} e The pointermove event\n   */\n  onPointerMove(e) {\n    if (this.#connecting) {\n      // Test if a socket is pointed\n      let pointedComponent = this.canvas.componentFromPosition(\n        e.clientX,\n        e.clientY,\n        true\n      );\n\n      let p = this.canvas.clientToSvgPoint(e.clientX, e.clientY);\n      if (pointedComponent) {\n        if (this.canAcceptPeerSocket(pointedComponent)) {\n          this.connectionMoving(p.x, p.y, false);\n          this.#currentPeerSocketComponent = pointedComponent;\n        } else {\n          this.connectionMoving(p.x, p.y, true);\n          this.#currentPeerSocketComponent = null;\n        }\n      } else {\n        this.connectionMoving(p.x, p.y, false);\n        this.#currentPeerSocketComponent = null;\n      }\n\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * The user has began dragging the socket to create a connection\n   */\n  connectionStarted() {\n    this.#tempConnectionEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${this.absPos.x} ${this.absPos.y}\n      `\n    );\n\n    this.canvas.connectionsEl.appendChild(this.#tempConnectionEl);\n  }\n\n  /**\n   * The user is moving the pointer around, with a connection pending\n   * @param {number} x The x coordinate in SVG space\n   * @param {number} y The y coordinate in SVG space\n   * @param {boolean} invalid true if the pointer is overing a unacceptable socket\n   */\n  connectionMoving(x, y, invalid) {\n    let sourcePoint = new Position(this.absPos.x, this.absPos.y);\n    let targetPoint = new Position(\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.x\n        : x,\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.y\n        : y\n    );\n\n    this.#tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      L ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.#tempConnectionEl.setAttribute(\"stroke-width\", 2);\n    this.#tempConnectionEl.setAttribute(\"stroke\", \"black\");\n    this.#tempConnectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    if (this.#tempConnectionEl) {\n      this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n    }\n    this.#tempConnectionEl = null;\n  }\n\n  /**\n   * The user has released the pointer button out of a valid socket,\n   * so by default, cancel the connection\n   * @param {Event} e The event pointerup\n   */\n  connectionEndedOutOfSocket(e) {\n    this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n    this.#tempConnectionEl = null;\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    throw new Error(\"This method must be overridden in a subclass!\");\n  }\n\n  /**\n   * Return true if this socket only support one connection at most\n   */\n  get hasSingleConnection() {\n    throw new Error(\"This method must be overridden in a subclass!\");\n  }\n\n  /**\n   * Is this socket actually connected?\n   */\n  get isConnected() {\n    return this.canvas.getConnectionsFor(this).length > 0;\n  }\n\n  /**\n   * Return the peer component of the socket in case\n   * of this socket is a single connection. Otherwise return null\n   */\n  getSinglePeerComponent() {\n    if (!this.hasSingleConnection) {\n      return null;\n    } else {\n      let con = this.canvas.getConnectionsFor(this)[0];\n      if (this === con.source) {\n        return con.target;\n      } else {\n        return con.source;\n      }\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"../canvas/component\";\nimport { Position } from \"../canvas/position\";\nimport { PrevSocketComponent } from \"./prev\";\nimport { NextSocketComponent } from \"./next\";\nimport { Theme } from \"./theme\";\nimport { OutputSocketComponent } from \"./output\";\nimport { InputSocketComponent } from \"./input\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { CnodesEditableTextComponent } from \"./cnodeseditabletext\";\n\n/**\n * This is the main class for managing a single CNode\n * inside the cnodes-ui canvas. It embed a cnodes node instance\n */\nexport class CnodeComponent extends Component {\n  /** The cnodes nod instance */\n  #node;\n\n  /** An SVG element to draw the container of the node */\n  #containerEl;\n\n  /** An SVG element to draw the top-left symbol for the node */\n  #symbolEl;\n\n  /** An SVG element to draw the top-left sign for the node */\n  #signEl;\n\n  /** A subcomponent for title */\n  #titleComp = null;\n\n  /** A subcomponent for comment */\n  #commentComp = null;\n\n  constructor(node, canvas) {\n    super();\n    this.#node = node;\n\n    // write a back-reference\n    this.#node.__comp = this;\n  }\n\n  get node() {\n    return this.#node;\n  }\n  get titleComp() {\n    return this.#titleComp;\n  }\n\n  /**\n   * Sets up the component\n   */\n  setup() {\n    super.setup();\n    canvas.addComponent(this);\n\n    // If there is an active program, add this node to it\n    if (this.canvas.program) {\n      this.canvas.program.addNode(this.#node);\n    }\n\n    this.updateSubcomponents();\n    return this;\n  }\n\n  /**\n   * Computes the node vertical size, based on node\n   * characteristics in terms of number of input, output,\n   * and nexts. It takes account of the current theme\n   */\n  get height() {\n    let leftSocketsHeight = this.node.inputs.length;\n    if (\n      this.node.prev &&\n      this.node.nexts.length === 0 &&\n      this.node.outputs.length === 0\n    ) {\n      leftSocketsHeight++;\n    }\n    let rightSocketsHeight = this.node.outputs.length + this.node.nexts.length;\n\n    return (\n      Theme.current.NODE_BORDER_RADIUS * 0.5 +\n      20 + // padding\n      30 * (leftSocketsHeight + rightSocketsHeight) +\n      15 // Padding\n    );\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    let nodeEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    this.#containerEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n    this.#symbolEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n    this.#signEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#containerEl.setAttribute(\n      \"stroke\",\n      !this.node.functional\n        ? Theme.current.NODE_STROKE_COLOR\n        : Theme.current.NODE_FUNCTIONAL_STROKE_COLOR\n    );\n    this.#containerEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_STROKE_WIDTH\n    );\n    this.#containerEl.setAttribute(\n      \"fill\",\n      this.node.functional\n        ? Theme.current.NODE_FUNCTIONAL_FILL_COLOR\n        : Theme.current.NODE_FILL_COLOR\n    );\n    this.#containerEl.setAttribute(\"x\", \"0\");\n    this.#containerEl.setAttribute(\"y\", \"0\");\n\n    this.#symbolEl.setAttribute(\"cx\", 0);\n    this.#symbolEl.setAttribute(\"cy\", 0);\n    this.#symbolEl.setAttribute(\"r\", Theme.current.NODE_BORDER_RADIUS * 0.9);\n    this.#symbolEl.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_SYMBOL_STROKE_COLOR\n    );\n    this.#symbolEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_SYMBOL_STROKE_WIDTH\n    );\n    this.#symbolEl.setAttribute(\"fill\", Theme.current.NODE_SYMBOL_FILL_COLOR);\n\n    let signRadius = Theme.current.NODE_BORDER_RADIUS * 0.7;\n    this.#signEl.setAttribute(\n      \"d\",\n      !this.node.functional\n        ? `\n      M ${signRadius * 0.5} 0\n      L ${-signRadius * 0.3} ${-signRadius / 2}\n      L ${-signRadius * 0.3} ${signRadius / 2}\n      Z\n      `\n        : `\n      M ${signRadius * 0.6} 0\n      L ${-signRadius * 0.5} 0\n\n      M 0 ${-signRadius * 0.6}\n      L ${-signRadius * 0.5} 0\n      L 0 ${+signRadius * 0.6}\n      `\n    );\n    this.#signEl.setAttribute(\n      \"stroke\",\n      !this.node.functional\n        ? Theme.current.NODE_SIGN_COLOR\n        : Theme.current.NODE_FUNCTIONAL_SIGN_COLOR\n    );\n    this.#signEl.setAttribute(\"stroke-width\", !this.node.functional ? 1 : 3);\n    this.#signEl.setAttribute(\n      \"fill\",\n      !this.node.functional ? Theme.current.NODE_SIGN_COLOR : \"transparent\"\n    );\n    this.#signEl.setAttribute(\"stroke-linejoin\", \"null\");\n    this.#signEl.setAttribute(\"x\", \"0\");\n    this.#signEl.setAttribute(\"y\", \"0\");\n\n    nodeEl.setAttribute(\"x\", \"0\");\n    nodeEl.setAttribute(\"y\", \"0\");\n\n    nodeEl.appendChild(this.#containerEl);\n    nodeEl.appendChild(this.#symbolEl);\n    nodeEl.appendChild(this.#signEl);\n\n    return nodeEl;\n  }\n\n  /**\n   * This method construct and/or update all sub components. They are all sockets\n   * representing input, outputs, prev and nexts.\n   */\n  updateSubcomponents() {\n    let posY = 30 + 0.5 * Theme.current.NODE_BORDER_RADIUS;\n\n    // Prev\n    if (this.node.prev) {\n      let nComp = this.node.prev.__comp;\n      if (!nComp) {\n        nComp = new PrevSocketComponent(this.node.prev).setup();\n        this.addComponent(nComp);\n\n        // write a back_reference\n        this.node.prev.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(0, posY);\n    }\n\n    // Nexts\n    for (const next of this.node.nexts) {\n      let nComp = next.__comp;\n      if (!nComp) {\n        nComp = new NextSocketComponent(next).setup();\n        this.addComponent(nComp);\n\n        // write a back-reference\n        next.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(Theme.current.NODE_WIDTH, posY);\n      posY += 30;\n    }\n\n    // Output\n    for (const output of this.node.outputs) {\n      let nComp = output.__comp;\n      if (!nComp) {\n        nComp = new OutputSocketComponent(output).setup();\n        this.addComponent(nComp);\n\n        // write a back-reference\n        output.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(Theme.current.NODE_WIDTH, posY);\n      posY += 30;\n    }\n\n    // Input\n    for (const input of this.node.inputs) {\n      let nComp = input.__comp;\n      if (!nComp) {\n        nComp = new InputSocketComponent(input).setup();\n        this.addComponent(nComp);\n\n        // write a back-reference\n        input.__comp = nComp;\n      }\n\n      // Update status\n      nComp.updateSVGElement();\n      nComp.pos = new Position(0, posY);\n      posY += 30;\n    }\n\n    // Title\n    if (!this.#titleComp) {\n      this.#titleComp = new CnodesEditableTextComponent(\n        this.node.title\n      ).setup();\n      this.#titleComp.color = Theme.current.NODE_TITLE_COLOR;\n      this.#titleComp.font = Theme.current.NODE_TITLE_FONT;\n\n      // Register to \"cnui:change\" to update title and meta info about it\n      this.#titleComp.events.on(\"cnui:change\", (component) => {\n        // Prevent empty title\n        if (component.text === \"\") {\n          component.text = \"title\";\n        }\n        // Update UI data in meta info\n        this.node.title = component.text;\n        if (!this.node.meta) {\n          this.node.meta = {};\n        }\n        this.node.meta.titlePos = {\n          x: component.pos.x,\n          y: component.pos.y,\n        };\n      });\n\n      this.#titleComp.font = Theme.current.NODE_TITLE_FONT;\n\n      this.#titleComp.color = this.node.functional\n        ? Theme.current.NODE_FUNCTIONAL_TITLE_COLOR\n        : Theme.current.NODE_TITLE_COLOR;\n      this.#titleComp.pos = this.node.meta?.titlePos\n        ? new Position(this.node.meta.titlePos.x, this.node.meta.titlePos.y)\n        : new Position(10 + Theme.current.NODE_BORDER_RADIUS, -25);\n      this.#titleComp.width =\n        Theme.current.NODE_WIDTH - (10 + Theme.current.NODE_BORDER_RADIUS);\n      this.addComponent(this.#titleComp);\n    }\n  }\n\n  /**\n   * Intercept by overriding this method to update\n   * graphical cooordinates in the program structure\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#containerEl.setAttribute(\n      \"d\",\n      `\n      M 0 ${Theme.current.NODE_BORDER_RADIUS * 1.3} \n      A ${Theme.current.NODE_BORDER_RADIUS * 1.3} ${\n        Theme.current.NODE_BORDER_RADIUS * 1.3\n      } 0 0 0 ${Theme.current.NODE_BORDER_RADIUS * 1.3} 0 \n      L ${Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS} 0 \n      A ${Theme.current.NODE_BORDER_RADIUS} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } 0 0 1 ${Theme.current.NODE_WIDTH} ${Theme.current.NODE_BORDER_RADIUS} \n      L ${Theme.current.NODE_WIDTH} ${\n        this.height - Theme.current.NODE_BORDER_RADIUS\n      } \n      A ${Theme.current.NODE_BORDER_RADIUS} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } 0 0 1 ${Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS} ${\n        this.height\n      } \n      L ${Theme.current.NODE_BORDER_RADIUS} ${this.height} \n      A ${Theme.current.NODE_BORDER_RADIUS} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } 0 0 1 0 ${this.height - Theme.current.NODE_BORDER_RADIUS} \n      Z\n      `\n    );\n\n    this.updateSubcomponents();\n\n    // Update UI data in meta info\n    if (!this.#node.meta) {\n      this.node.meta = {};\n    }\n    this.#node.meta.pos = {\n      x: this.pos.x,\n      y: this.pos.y,\n    };\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    // The node can add inputs?\n    if (this.node.canAddInput) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Add input</tspan>`,\n          () => {\n            this.node.addInput();\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    // The node can add inputs?\n    if (this.node.canAddOutput) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Add output</tspan>`,\n          () => {\n            this.node.addOutput();\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    items.push(\n      new MenuItem(\n        `<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`,\n        () => {\n          for (let comp of this.components) {\n            if (comp instanceof SocketComponent && comp.isConnected) {\n              for (let conn of this.canvas.getConnectionsFor(comp)) {\n                this.canvas.removeConnection(conn);\n              }\n            }\n          }\n        }\n      )\n    );\n\n    // The node can be removed?\n    if (this.node.removable) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Delete</tspan>`,\n          () => {\n            this.canvas.removeComponent(this);\n          }\n        )\n      );\n    }\n\n    if (!this.#commentComp) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Add comment</tspan>`,\n          () => {\n            this.createCommentComponent(\n              \"write a comment\",\n              0,\n              this.height + 10,\n              true\n            );\n          }\n        )\n      );\n    } else {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Remove comment</tspan>`,\n          () => {\n            this.removeComponent(this.#commentComp);\n            this.node.meta.comment = undefined;\n            this.#commentComp = null;\n          }\n        )\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * This method creates a comment component and attach it to the\n   * node component. Take the x,y coordinates in input to place this\n   * component, by default at the bottom of the node\n   * @param {string} comment The text for the comment\n   * @param {number} x The x coordinate for the comment component\n   * @param {number} y The y coordinate for the comment component\n   * @param {boolean} initialEdit The comment starts in edit mode?\n   */\n  createCommentComponent(\n    comment = \"write a comment\",\n    x = 0,\n    y = this.height + 10,\n    initialEdit = false\n  ) {\n    this.#commentComp = new CnodesEditableTextComponent(comment).setup();\n    this.#commentComp.font = Theme.current.NODE_COMMENT_FONT;\n    this.#commentComp.color = Theme.current.NODE_COMMENT_COLOR;\n    this.#commentComp.pos = new Position(x, y);\n    this.#commentComp.width = Theme.current.NODE_WIDTH;\n    this.addComponent(this.#commentComp);\n\n    this.#commentComp.setEditing(initialEdit);\n\n    // Register to \"cnui:change\" to update title and meta info about it\n    this.#commentComp.events.on(\"cnui:change\", (component) => {\n      // Prevent empty title\n      if (component.text === \"\") {\n        component.text = \"comment\";\n      }\n      // Update UI data in meta info\n      if (!this.node.meta) {\n        this.node.meta = {};\n      }\n      this.node.meta.comment = {\n        text: component.text,\n        pos: {\n          x: component.pos.x,\n          y: component.pos.y,\n        },\n      };\n    });\n  }\n\n  /**\n   * Remove the internal node reference to the component\n   * upon destroy\n   */\n  destroy() {\n    this.node.__comp = null;\n\n    // If there is acrive program, remove the node from it\n    if (this.canvas.program) {\n      this.canvas.program.removeNode(this.node);\n    }\n\n    super.destroy();\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Program } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Node } from \"@marco.jacovone/cnodes/lib/core/node\";\nimport { Canvas } from \"../canvas/canvas\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { IOConnection } from \"../connections/ioconnection\";\nimport { PrevNextConnection } from \"../connections/prevnextconnection\";\nimport { CnodeComponent } from \"./cnode\";\nimport { CnodesMenu } from \"./cnodesmenu\";\nimport { Theme } from \"./theme\";\n\n/**\n * This is the entry-point class for managing the canvas\n * relative to a cnodes program.\n */\nexport class CnodesCanvas extends Canvas {\n  /** The static registry of (cnodes NDOE) <--> (CnodeComponent) map */\n  static #nodesUIRegistry = new Map();\n\n  /** The edited program */\n  #program = null;\n\n  /** The stack of edited programs */\n  #stack = [];\n\n  constructor(el) {\n    super(el);\n\n    let defsEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n\n    defsEl.innerHTML = `\n      <filter xmlns=\"http://www.w3.org/2000/svg\" id=\"dropshadow\" height=\"130%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> \n        <feOffset dx=\"0\" dy=\"0\" result=\"offsetblur\"/> \n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.3\"/>\n        </feComponentTransfer>\n        <feMerge> \n          <feMergeNode/>\n          <feMergeNode in=\"SourceGraphic\"/> \n        </feMerge>\n      </filter>\n      <marker id=\"io-arrow-any\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_ANY_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-boolean\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_BOOLEAN_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-number\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_NUMBER_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-string\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_STRING_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-object\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_OBJECT_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-array\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_ARRAY_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"prevnext-arrow\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.CONNECTION_PREV_NEXT_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>      \n    `;\n\n    this.svgEl.appendChild(defsEl);\n  }\n\n  get program() {\n    return this.#program;\n  }\n\n  /**\n   * Register a UI class, that extends CnodeComponent for managing\n   * a specific node passed as parameter, by registering the instance\n   * in the canvas registry\n   * @param {Node} node The node instance (cnodes)\n   * @param {Function} factory The factory, that is a function that creates the UI component\n   */\n  static registerNodeUI(node, factory) {\n    CnodesCanvas.#nodesUIRegistry.set(node.constructor.name, factory);\n  }\n\n  /**\n   * Returns the instance of the UI component registered in the canvas registry\n   * that is able to manage a cnode specific instance passed as parameter\n   * @param {Node} node The node instance (cnodes)\n   * @param {CnodesCanvas} canvas The canvas instance, to create the node UI component\n   */\n  static getNodeUIInstance(node, canvas) {\n    let factory = CnodesCanvas.#nodesUIRegistry.get(node.constructor.name);\n    if (factory) {\n      return factory(node, canvas).setup();\n    } else {\n      return new CnodeComponent(node, canvas).setup();\n    }\n  }\n\n  /**\n   * This setter is a trigger for the import procedure\n   */\n  set program(val) {\n    this.importCnodesProgram(val);\n    this.#program = val;\n  }\n\n  /**\n   * Executes the program\n   */\n  run() {\n    this.#program.process();\n  }\n\n  /**\n   * Dump the internal CNODES program to the console\n   */\n  dump() {\n    console.log(Env.export(this.#program));\n  }\n\n  /**\n   * Return a list of MenuItem for the context menu\n   */\n  getCanvasContextMenuItems() {\n    let items = [];\n\n    if (this.canPopProgram()) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n            Return to parent...\n          </tspan>\n          `,\n          () => {\n            this.popProgram();\n          }\n        )\n      );\n    }\n\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          items.push(\n            new MenuItem(\n              `\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                New\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                ${nodeDef.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                ${nodeDef.category}\n              </tspan>\n              `,\n              (x, y) => {\n                let node = CnodesCanvas.getNodeUIInstance(n, this);\n                node.pos = new Position(x, y);\n              }\n            )\n          );\n        }\n      }\n    }\n\n    if (items.length === 0) {\n      return null;\n    } else {\n      return items;\n    }\n  }\n\n  /**\n   * Cancels the current open context menu, and closes it.\n   * Override this to ensure cancel menu inform menu callback clients\n   */\n  cancelContextMenu() {\n    if (this.contextMenuComponent && this.contextMenuComponent.menuCallback) {\n      this.contextMenuComponent.menuCallback(null);\n      this.contextMenuComponent.menuCallback = null;\n    }\n    super.cancelContextMenu();\n  }\n\n  /**\n   * Shows the context menu retated to the component or to the canvas\n   * @param {MenuItem[]} items Items that compose the menu\n   * @param {number} x The x coordinate for the menu\n   * @param {number} y The y coordinate for the menu\n   * @param {Function} menuCallback If the client is interested to the user selection or cancel\n   */\n  showContextMenu(items, x, y, menuCallback) {\n    if (items) {\n      if (this.contextMenuComponent) {\n        this.cancelContextMenu();\n      }\n\n      this.contextMenuComponent = new CnodesMenu(this, items);\n      this.contextMenuComponent.menuCallback = menuCallback;\n      this.contextMenuComponent.show(x, y);\n    }\n  }\n\n  /**\n   * This method imports an entire cnodes program\n   * @param {Program} program Program to import\n   */\n  importCnodesProgram(program) {\n    // By temporary clearing the instance of the program, we inform\n    // components that all creation/destruction will not have effect\n    // on the program instance\n    this.#program = null;\n\n    this.removeAll();\n\n    // Import the program\n    for (let n of program.nodes) {\n      let comp = CnodesCanvas.getNodeUIInstance(n, this);\n      comp.moveable = true;\n\n      // Extract meta info\n      if (!n.meta) {\n        n.meta = {};\n      }\n      if (n.meta.pos) {\n        comp.pos = new Position(n.meta.pos.x, n.meta.pos.y);\n      } else {\n        comp.pos = new Position(100, 100);\n      }\n      if (n.meta.titlePos) {\n        comp.titleComp.pos = new Position(n.meta.titlePos.x, n.meta.titlePos.y);\n      }\n      if (n.meta.comment) {\n        comp.createCommentComponent(\n          n.meta.comment.text,\n          n.meta.comment.pos.x,\n          n.meta.comment.pos.y,\n          false\n        );\n      }\n    }\n\n    // Setup connections\n    for (let n of program.nodes) {\n      // Setup prev\n      if (n.prev && n.prev.peers.length > 0) {\n        for (let peer of n.prev.peers) {\n          if (!this.alreadyConnected(peer.__comp, n.prev.__comp)) {\n            // Create connection component\n            new PrevNextConnection(peer.__comp, n.prev.__comp, this).setup();\n          }\n        }\n      }\n      // Setup nexts\n      for (let next of n.nexts) {\n        if (next.peer) {\n          if (!this.alreadyConnected(next.peer.__comp, next.__comp)) {\n            // Create connection component\n            new PrevNextConnection(next.__comp, next.peer.__comp, this).setup();\n          }\n        }\n      }\n      // Setup inputs\n      for (let inp of n.inputs) {\n        if (inp.peer) {\n          if (!this.alreadyConnected(inp.peer.__comp, inp.__comp)) {\n            // Create connection component\n            new IOConnection(inp.peer.__comp, inp.__comp, this).setup();\n          }\n        }\n      }\n      // Setup outputs\n      for (let outp of n.outputs) {\n        if (outp.peers.length > 0) {\n          for (let peer of outp.peers) {\n            if (!this.alreadyConnected(outp.__comp, peer.__comp)) {\n              // Create connection component\n              new IOConnection(outp.__comp, peer.__comp, this).setup();\n            }\n          }\n        }\n      }\n    }\n\n    // Restore the program instance\n    this.#program = program;\n  }\n\n  /**\n   * Push a subprogram on the canvas. The current program\n   * is pushed on to the stack and the new one is placed on the canvas\n   * @param {*} program The new program to edit\n   */\n  pushProgram(program) {\n    setTimeout(() => {\n      // Push this current program to the stack\n      this.#stack.unshift(this.program);\n\n      // Set the new Program\n      this.program = program;\n    });\n  }\n\n  /**\n   * Pops the last program and place it on the canvas. The actual\n   * program (that is a subprogram of the popped) is abandoned\n   */\n  popProgram() {\n    setTimeout(() => {\n      this.program = this.#stack.shift();\n    });\n  }\n\n  /**\n   * Can this canvas pop a program from the stack, that is:\n   * there is at least one program on the stack?\n   */\n  canPopProgram() {\n    return this.#stack.length > 0;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\nimport { Connection } from \"../canvas/connection\";\n\n/**\n * This class implements a connection for the cnodes system\n * It embed both source and target sockets\n */\nexport class CnodesConnection extends Connection {\n  constructor(source, target, canvas) {\n    super(source, target);\n  }\n\n  /**\n   * Sets up the component\n   */\n  setup() {\n    super.setup();\n    canvas.addConnection(this);\n    this.updateSVGElement();\n\n    if (canvas.program) {\n      // Connect cnodes sockets\n      this.source.socket.connect(this.target.socket);\n    }\n    return this;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    let el = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    return el;\n  }\n\n  /**\n   * Diconnect the internal cnodes sockets\n   */\n  destroy() {\n    // If there is an active program, remove the connection\n    if (this.canvas.program) {\n      this.source.socket.disconnect(this.target.socket);\n    }\n    super.destroy();\n  }\n\n  /**\n   * Return a relevant type between two types passed as parameter\n   * @param {string} type1 CNODES source type\n   * @param {string} type2 CNODES target type\n   */\n  getRelevantType(type1, type2) {\n    if (type1 === Types.ANY) {\n      return type2;\n    } else if (type2 === Types.ANY) {\n      return type1;\n    } else {\n      return type1;\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"../canvas/component\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Theme } from \"./theme\";\n\n/**\n * This is component to draw a simple SVG Text that let the user\n * to change the text by implementing an \"edit\" action via context\n * menu item\n */\nexport class CnodesEditableTextComponent extends Component {\n  /** Font of the text component */\n  #font = \"24px sans-serif;\";\n\n  /** Content of the component */\n  #text = \"\";\n\n  /** Color of the text */\n  #color = \"black\";\n\n  /** The width of the text / editor */\n  #width = 100;\n\n  /**\n   * The text component\n   */\n  #textEl = null;\n\n  /**\n   * The state of the text:\n   *  0: View - The text is rendered as HTML\n   *  1: Edit - The text is editing within a INPUT/TEXTAREA\n   */\n  #state = 0;\n\n  /**\n   * The text input element container\n   */\n  #textInputEl = null;\n\n  /**\n   * The text input element\n   */\n  #inputEl = null;\n\n  /**\n   * Construct a new Text object with  particular text, and an\n   * option for multiline\n   * @param {string} text The text to show\n   */\n  constructor(text, initialEdit = false) {\n    super();\n    this.#text = text;\n  }\n\n  get textEl() {\n    return this.#textEl;\n  }\n  get text() {\n    return this.#text;\n  }\n  set text(val) {\n    this.#text = val;\n    this.#inputEl.value = val;\n    this.updateSVGElement();\n  }\n  get width() {\n    return this.#width;\n  }\n  set width(val) {\n    this.#width = val;\n    this.updateSVGElement();\n  }\n  get color() {\n    return this.#color;\n  }\n  set color(val) {\n    this.#color = val;\n    this.updateSVGElement();\n  }\n  get font() {\n    return this.#font;\n  }\n  set font(val) {\n    this.#font = val;\n    this.updateSVGElement();\n  }\n  get textInputEl() {\n    return this.#textInputEl;\n  }\n  get inputEl() {\n    return this.#inputEl;\n  }\n  get state() {\n    return this.#state;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return [\n      new MenuItem(\n        `\n      <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n        Edit text...\n      </tspan>\n      `,\n        () => {\n          this.setEditing(true);\n        }\n      ),\n    ];\n  }\n\n  /**\n   * Sets the editing mode\n   * @param {boolean} editMode true = Edit Mode, false = View Mode\n   */\n  setEditing(editMode) {\n    if (editMode) {\n      this.#state = 1;\n      this.#inputEl.value = this.#text;\n\n      this.#textEl.style[\"display\"] = \"none\";\n      this.#textInputEl.style[\"display\"] = \"block\";\n\n      setTimeout(() => {\n        this.#inputEl.focus();\n        this.#inputEl.select();\n      });\n\n      this.events.emit(\"cnui:edit\");\n    } else {\n      this.#state = 0;\n      this.#text = this.#inputEl.value;\n      this.#textEl.style[\"display\"] = \"block\";\n      this.#textInputEl.style[\"display\"] = \"none\";\n\n      this.events.emit(\"cnui:change\", this);\n    }\n\n    this.updateSVGElement();\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    let groupEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n    this.#textEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    this.#textInputEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n\n    this.#inputEl = document.createElement(\"textarea\");\n    this.#inputEl.value = this.#text;\n    this.#inputEl.style[\"resize\"] = \"none\";\n    this.#inputEl.style[\"height\"] = \"100px\";\n    this.#inputEl.style[\"width\"] = this.#width + \"px\";\n    this.#inputEl.style[\"outline-width\"] = \"0\";\n    this.#inputEl.style[\"border\"] = \"1px dashed lightgray\";\n    this.#inputEl.style[\"padding\"] = \"0\";\n    this.#inputEl.style[\"margin\"] = \"-1px\";\n    this.#inputEl.style[\"background-color\"] =\n      Theme.current.NODE_EDITORS_BACKGROUND;\n    this.#inputEl.style[\"overflow\"] = \"hidden\";\n    this.#inputEl.style[\"color\"] = Theme.current.NODE_EDITORS_COLOR;\n\n    /** Simply disable pointer events */\n    this.#inputEl.addEventListener(\"pointerdown\", (e) => {\n      e.stopPropagation();\n    });\n    /** Simply disable wheel events */\n    this.#inputEl.addEventListener(\"wheel\", (e) => {\n      e.stopPropagation();\n    });\n    this.#inputEl.addEventListener(\"blur\", () => {\n      this.setEditing(false);\n    });\n    this.#inputEl.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\") {\n        this.setEditing(false);\n      }\n    });\n\n    this.textEl.setAttribute(\"x\", 0);\n    this.textEl.setAttribute(\"y\", 0);\n    this.textEl.setAttribute(\"height\", 1);\n    this.textEl.setAttribute(\"width\", this.#width);\n    this.textEl.style[\"overflow\"] = \"visible\";\n    this.textEl.style[\"color\"] = this.#color;\n    this.textEl.style[\"display\"] = \"block\";\n    this.textEl.style[\"user-select\"] = \"none\";\n    this.textEl.style[\"cursor\"] = \"move\";\n    this.textEl.innerHTML = this.text;\n\n    this.textInputEl.setAttribute(\"x\", 0);\n    this.textInputEl.setAttribute(\"y\", 0);\n    this.textInputEl.setAttribute(\"width\", this.#width);\n    this.textInputEl.setAttribute(\"height\", 100);\n    this.textInputEl.style[\"overflow\"] = \"visible\";\n    this.textInputEl.style[\"display\"] = \"none\";\n    this.textInputEl.setAttribute(\"hidden\", \"1\");\n\n    this.textInputEl.appendChild(this.#inputEl);\n\n    groupEl.setAttribute(\"x\", 0);\n    groupEl.setAttribute(\"y\", 0);\n    groupEl.addEventListener(\"dblclick\", () => {\n      this.setEditing(true);\n    });\n    groupEl.appendChild(this.textEl);\n    groupEl.appendChild(this.textInputEl);\n    return groupEl;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed. Also update svg attributes\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.textEl.setAttribute(\"width\", this.#width);\n    this.textEl.innerHTML = this.#text;\n    this.textEl.style[\"font\"] = this.#font;\n    this.textEl.style[\"color\"] = this.#color;\n    this.inputEl.style[\"width\"] = this.#width + \"px\";\n    this.inputEl.style[\"font\"] = this.#font;\n    this.textInputEl.setAttribute(\"width\", this.#width);\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Menu } from \"../canvas/menu\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\nimport { Theme } from \"./theme\";\n\n/**\n * This class implements a context menu for cnodes canvas\n */\nexport class CnodesMenu extends Menu {\n  /** The input element for the search */\n  #inputElement = null;\n\n  /** Container element around items*/\n  #containerEl = null;\n\n  /** Current search result items */\n  #itemsEls = [];\n\n  /** The search filter (value of the search input) */\n  #searchFilter = \"\";\n\n  /**\n   * The result of the selection of the user. If who request the menu is interested.\n   * Some components, like sockets, can open a context menu to select items, instead of\n   * the canvas. In such case, the originating component have to know the final\n   * result of the menu selection. In this case, tho variable contains a callback to\n   * the menu \"client\", and the menu, upon a user selection, calls this callback passing\n   * the result value of the context menu item callback, as parameter.\n   * Please see the class CnodesSocket component to check this behavior.\n   */\n  #menuCallback = null;\n\n  /**\n   * Construct a new Menu for the canvas\n   * @param {CnodesCanvas} canvas The canvas\n   * @param {MenuItem[]} items The menu items\n   */\n  constructor(canvas, items) {\n    super(canvas, items);\n  }\n\n  get searchFilter() {\n    return this.#searchFilter;\n  }\n  set searchFilter(val) {\n    this.#searchFilter = val;\n  }\n  get menuCallback() {\n    return this.#menuCallback;\n  }\n  set menuCallback(val) {\n    this.#menuCallback = val;\n  }\n\n  /** Returns the filtered items of the menu */\n  get filteredElements() {\n    let filterElems = this.items.filter((i, idx) =>\n      i.searchText.toUpperCase().includes(this.searchFilter.toUpperCase())\n    );\n    return filterElems.filter((i, idx) => idx <= 10);\n  }\n\n  /**\n   * Computes the menu vertical size, based on menu items\n   * filtered by search filter\n   */\n  get height() {\n    return (\n      Theme.current.MENU_BORDER_RADIUS * 2 + // Padding\n      30 + // Search input\n      Theme.current.MENU_ITEM_HEIGHT * this.filteredElements.length // Items\n    );\n  }\n\n  /**\n   * Shows the menu\n   * @param {*} x The x coordinate\n   * @param {*} y The y coordinate\n   */\n  show(x, y) {\n    super.show(x, y);\n    this.#inputElement.focus();\n    this.createMenuItemsElements();\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    let menuEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n    let textInputElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    textInputElem.style = `\n      font: ${Theme.current.MENU_SEARCH_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      text-align: left;\n      line-height: 30px;\n      user-select: none;\n      pointer-events: auto;\n    `;\n\n    textInputElem.setAttribute(\"x\", 0);\n    textInputElem.setAttribute(\"y\", 0);\n    textInputElem.setAttribute(\n      \"transform\",\n      `translate(${Theme.current.MENU_BORDER_RADIUS}, ${Theme.current.MENU_BORDER_RADIUS})`\n    );\n    textInputElem.setAttribute(\n      \"width\",\n      Theme.current.MENU_MIN_WIDTH - 2 * Theme.current.MENU_BORDER_RADIUS\n    );\n    textInputElem.setAttribute(\"height\", Theme.current.MENU_ITEM_HEIGHT);\n\n    this.#inputElement = document.createElement(\"input\");\n    this.#inputElement.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      width: ${\n        textInputElem.getAttribute(\"width\") - 10\n      }px; // 10px less than foreignObject\n      height: ${20}px;\n      border: 0;\n      padding: 2px;\n      margin: 2px;\n    `;\n    this.#inputElement.setAttribute(\"value\", \"\");\n    this.#inputElement.setAttribute(\"type\", \"text\");\n\n    let self = this;\n    this.#inputElement.addEventListener(\"input\", (e) => {\n      self.#searchFilter = this.#inputElement.value;\n      self.createMenuItemsElements();\n    });\n    this.#inputElement.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 27) {\n        self.canvas.cancelContextMenu();\n\n        // If there is client of the menu interested to user selection or abort\n        if (self.menuCallback) {\n          self.menuCallback(null);\n          self.menuCallback = null;\n        }\n        return;\n      }\n      if (e.keyCode === 13) {\n        if (self.filteredElements.length > 0) {\n          let menuEl = this.canvas.contextMenuComponent.componentEl.getBoundingClientRect();\n          let p = this.canvas.clientToSvgPoint(menuEl.left, menuEl.top);\n\n          // Items can return a result to inform the menu client about the item selection\n          let itemResult = self.filteredElements[0].callback(p.x, p.y);\n\n          // If there is client of the menu interested to user selection or abort\n          if (self.menuCallback) {\n            self.menuCallback(itemResult);\n            self.menuCallback = null;\n          }\n\n          self.canvas.cancelContextMenu();\n\n          return;\n        }\n      }\n    });\n\n    textInputElem.appendChild(this.#inputElement);\n\n    this.#containerEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#containerEl.setAttribute(\"fill\", Theme.current.MENU_FILL_COLOR);\n    this.#containerEl.setAttribute(\"stroke\", Theme.current.MENU_STROKE_COLOR);\n    this.#containerEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.MENU_STROKE_WIDTH\n    );\n    this.#containerEl.setAttribute(\"filter\", \"url(#dropshadow)\");\n\n    menuEl.appendChild(this.#containerEl);\n    menuEl.appendChild(textInputElem);\n\n    return menuEl;\n  }\n\n  /**\n   * Creates/Updates menu items based on the search input field, and\n   * adjust the size of the container element\n   */\n  createMenuItemsElements() {\n    while (this.#itemsEls.length > 0) {\n      this.componentEl.removeChild(this.#itemsEls[0].itemEl);\n      this.componentEl.removeChild(this.#itemsEls[0].itemTextEl);\n      this.#itemsEls.splice(0, 1);\n    }\n\n    let maxWidth = Theme.current.MENU_MIN_WIDTH;\n\n    // Create menu items\n    for (let [i, item] of this.filteredElements.entries()) {\n      let itemEl = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"rect\"\n      );\n      let itemTextEl = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"text\"\n      );\n\n      let itemX = Theme.current.MENU_BORDER_RADIUS;\n      let itemY =\n        Theme.current.MENU_BORDER_RADIUS +\n        Theme.current.MENU_ITEM_HEIGHT * (i + 1);\n\n      itemEl.setAttribute(\"x\", itemX);\n      itemEl.setAttribute(\"y\", itemY);\n\n      itemTextEl.setAttribute(\"x\", itemX + 5);\n      itemTextEl.setAttribute(\"y\", itemY + Theme.current.MENU_ITEM_HEIGHT / 2);\n      itemTextEl.setAttribute(\"style\", Theme.current.MENU_ITEM_FONT);\n      // itemTextEl.setAttribute(\"alignment-baseline\", \"middle\");\n      itemTextEl.style[\"pointer-events\"] = \"none\";\n      itemTextEl.style[\"user-select\"] = \"none\";\n      itemTextEl.innerHTML = item.text;\n\n      this.componentEl.appendChild(itemEl);\n      this.componentEl.appendChild(itemTextEl);\n\n      // Set event listeners\n      itemEl.addEventListener(\"pointerenter\", (e) => {\n        itemEl.setAttribute(\"fill\", Theme.current.MENU_ITEM_HIGHLIGHT);\n      });\n      itemEl.addEventListener(\"pointerleave\", (e) => {\n        itemEl.setAttribute(\"fill\", \"transparent\");\n      });\n      itemEl.addEventListener(\"pointerdown\", (e) => {\n        let menuEl = this.canvas.contextMenuComponent.componentEl.getBoundingClientRect();\n        let p = this.canvas.clientToSvgPoint(menuEl.left, menuEl.top);\n\n        let result = item.callback(p.x, p.y);\n\n        // If there is client of the menu interested to user selection or abort\n        if (this.menuCallback) {\n          this.menuCallback(result);\n          this.menuCallback = null;\n        }\n        this.canvas.cancelContextMenu();\n      });\n\n      // Compute text sizes\n      maxWidth = Math.max(\n        itemTextEl.getBBox().width + 10 + 2 * Theme.current.MENU_BORDER_RADIUS,\n        maxWidth\n      );\n\n      // register items\n      this.#itemsEls.push({ itemEl: itemEl, itemTextEl: itemTextEl });\n    }\n\n    // Now adjust geometry to size\n    for (let [i, item] of this.#itemsEls.entries()) {\n      let itemEl = item.itemEl;\n      let itemTextEl = item.itemTextEl;\n\n      let itemWidth = maxWidth - 2 * Theme.current.MENU_BORDER_RADIUS;\n      let itemHeight = Theme.current.MENU_ITEM_HEIGHT;\n\n      itemTextEl.setAttribute(\"width\", itemWidth - 10);\n      itemTextEl.setAttribute(\"height\", itemHeight - 10);\n\n      itemEl.setAttribute(\"width\", itemWidth);\n      itemEl.setAttribute(\"height\", itemHeight);\n      itemEl.setAttribute(\"style\", Theme.current.MENU_ITEM_FONT);\n      itemEl.setAttribute(\"stroke\", \"transparent\");\n      itemEl.setAttribute(\"stroke-width\", 0);\n      itemEl.setAttribute(\"fill\", \"transparent\");\n    }\n\n    // Update container geometry\n    this.#containerEl.setAttribute(\n      \"d\",\n      `\n      M 0 ${Theme.current.MENU_BORDER_RADIUS * 1.3} \n      A ${Theme.current.MENU_BORDER_RADIUS * 1.3} ${\n        Theme.current.MENU_BORDER_RADIUS * 1.3\n      } 0 0 1 ${Theme.current.MENU_BORDER_RADIUS * 1.3} 0 \n      L ${maxWidth - Theme.current.MENU_BORDER_RADIUS} 0 \n      A ${Theme.current.MENU_BORDER_RADIUS} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } 0 0 1 ${maxWidth} ${Theme.current.MENU_BORDER_RADIUS} \n      L ${maxWidth} ${this.height - Theme.current.MENU_BORDER_RADIUS} \n      A ${Theme.current.MENU_BORDER_RADIUS} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } 0 0 1 ${maxWidth - Theme.current.MENU_BORDER_RADIUS} ${this.height} \n      L ${Theme.current.MENU_BORDER_RADIUS} ${this.height} \n      A ${Theme.current.MENU_BORDER_RADIUS} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } 0 0 1 0 ${this.height - Theme.current.MENU_BORDER_RADIUS} \n      Z\n      `\n    );\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Socket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\nimport { Position } from \"../canvas/position\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { Theme } from \"./theme\";\n\n/**\n * This class is the base class for all sockets components\n * of cnodes. The class introduces the socket field that is\n * a \"cnodes\" socket the internal structure to store links\n * between cnodes nodes. In addition implements the base functionality\n * of the \"smart\" connection flow, in case the user drag out\n * of a socket component and release the pointer outside of\n * a destination socket\n */\nexport class CnodesSocketComponent extends SocketComponent {\n  /** The cnodes socket object */\n  #socket = null;\n\n  /**\n   * Construct a new CnodesSocket object\n   * @param {Socket} socket The internal cnodes socket object\n   */\n  constructor(socket) {\n    super();\n    this.#socket = socket;\n  }\n\n  get socket() {\n    return this.#socket;\n  }\n\n  /**\n   * The user has released the pointer button out of a valid socket,\n   * display a context menu that presents all valid possible nodes\n   * and relative sockets to connect...\n   * Possible nodes items are returned by subclasses; this method display the\n   * context menu via canvas.showContextMenu(...) and specifying a menuCallback\n   * that inform this client about the final selection of the user, so\n   * complete the connection or abort that\n   * @param {Event} e The event pointerup\n   */\n  connectionEndedOutOfSocket(e) {\n    // Enumerates all possible socket to connect\n    let items = this.getRegisteredPossiblePeers();\n\n    let p = this.canvas.clientToSvgPoint(e.clientX, e.clientY);\n    this.canvas.showContextMenu(items, p.x, p.y, (socketComp) => {\n      if (!socketComp) {\n        if (this.tempConnectionEl) {\n          this.canvas.connectionsEl.removeChild(this.tempConnectionEl);\n        }\n        this.tempConnectionEl = null;\n      } else {\n        this.connectionDone(socketComp);\n      }\n    });\n  }\n\n  /**\n   * The user is moving the pointer around, with a connection pending\n   * @param {number} x The x coordinate in SVG space\n   * @param {number} y The y coordinate in SVG space\n   * @param {boolean} invalid true if the pointer is overing a unacceptable socket\n   */\n  connectionMoving(x, y, invalid) {\n    let sourcePoint = new Position(this.absPos.x, this.absPos.y);\n    let targetPoint = new Position(\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.x\n        : x,\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.y\n        : y\n    );\n\n    let cpXDistance = Math.max(\n      0.8 * Math.abs(sourcePoint.x - targetPoint.x),\n      Math.min(Math.abs(sourcePoint.y - targetPoint.y), 100)\n    );\n    let cp1 = sourcePoint.add(\n      new Position(\n        cpXDistance * this.getSourcePointDirection(),\n        -0.3 * (sourcePoint.y - targetPoint.y)\n      )\n    );\n    let cp2 = targetPoint.add(\n      new Position(\n        -cpXDistance * this.getSourcePointDirection(),\n        0.3 * (sourcePoint.y - targetPoint.y)\n      )\n    );\n\n    this.tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${this.absPos.x} ${this.absPos.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.tempConnectionEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.CONNECTION_TEMP_WIDTH\n    );\n    this.tempConnectionEl.setAttribute(\n      \"stroke\",\n      invalid\n        ? Theme.current.CONNECTION_TEMP_INVALID_COLOR\n        : this.currentPeerSocketComponent\n        ? Theme.current.CONNECTION_TEMP_VALID_COLOR\n        : Theme.current.CONNECTION_TEMP_COLOR\n    );\n    this.tempConnectionEl.setAttribute(\"stroke-dasharray\", \"5 5\");\n    this.tempConnectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * Remove the internal socket reference to the component\n   * upon destroy\n   */\n  destroy() {\n    this.socket.__comp = null;\n    super.destroy();\n  }\n\n  /**\n   * Return a color code in CSS for a given cndoes data type\n   * @param {string} type CNODES data type\n   */\n  static getColorForType(type) {\n    switch (type) {\n      case Types.ARRAY:\n        return Theme.current.TYPE_ARRAY_COLOR;\n      case Types.NUMBER:\n        return Theme.current.TYPE_NUMBER_COLOR;\n      case Types.STRING:\n        return Theme.current.TYPE_STRING_COLOR;\n      case Types.OBJECT:\n        return Theme.current.TYPE_OBJECT_COLOR;\n      case Types.BOOLEAN:\n        return Theme.current.TYPE_BOOLEAN_COLOR;\n      case Types.ANY:\n        return Theme.current.TYPE_ANY_COLOR;\n      default:\n        return \"black\";\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"./theme\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { IOConnection } from \"../connections/ioconnection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { OutputSocketComponent } from \"./output\";\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\n\n/**\n * This class implement a socket to draw a Input element\n * in the cnodes world\n */\nexport class InputSocketComponent extends CnodesSocketComponent {\n  /** A reference to the imput value element */\n  #inputValueElement = null;\n\n  /** A reference to the imput name element, if there is one */\n  #inputNameElement = null;\n\n  /** A reference to the label element, if there is one */\n  #labelElement = null;\n\n  /** The symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n\n    this.#socketSymbol.setAttribute(\"cx\", 0);\n    this.#socketSymbol.setAttribute(\"cy\", 0);\n    this.#socketSymbol.setAttribute(\"r\", Theme.current.NODE_IO_POINT_RADIUS);\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_IO_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_IO_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n\n    let textInputNameElem = null;\n\n    /*\n     * If this socket can edit name, we create an input element for\n     * this name, otherwise, we create a label\n     */\n    if (this.socket.canEditName) {\n      textInputNameElem = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      textInputNameElem.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        line-height: 30px;\n        user-select: none;\n        pointer-events: auto;\n      `;\n\n      textInputNameElem.setAttribute(\"x\", 0);\n      textInputNameElem.setAttribute(\"y\", 0);\n      textInputNameElem.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n      textInputNameElem.setAttribute(\n        \"width\",\n        Theme.current.NODE_WIDTH / 2 - 15\n      );\n      textInputNameElem.setAttribute(\"height\", 30);\n\n      this.#inputNameElement = document.createElement(\"input\");\n      this.#inputNameElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        width: ${\n          Theme.current.NODE_WIDTH / 2 - 25\n        }px; // 5px less than foreignObject\n        height: ${20}px;\n        border: 0;\n        padding: 2px;\n        margin: 2px;\n      `;\n\n      this.#inputNameElement.addEventListener(\"keyup\", (e) => {\n        this.socket.name = e.target.value;\n      });\n\n      /** Prevent descendants management of the click (pan) and allow selection */\n      this.#inputNameElement.addEventListener(\"pointerdown\", (e) => {\n        e.stopPropagation();\n      });\n\n      this.#inputNameElement.setAttribute(\"value\", this.socket.name);\n      this.#inputNameElement.setAttribute(\"type\", \"text\");\n\n      textInputNameElem.appendChild(this.#inputNameElement);\n    } else {\n      this.#labelElement = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      this.#labelElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n        height: 30px;\n        line-height: 30px;\n        user-select: none;\n      `;\n\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n\n      this.#labelElement.setAttribute(\"x\", 0);\n      this.#labelElement.setAttribute(\"y\", 0);\n      this.#labelElement.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n      this.#labelElement.setAttribute(\n        \"width\",\n        Theme.current.NODE_WIDTH / 2 - 15\n      );\n      this.#labelElement.setAttribute(\"height\", 30);\n    }\n\n    let textInputValueElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    textInputValueElem.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      text-align: left;\n      line-height: 30px;\n      user-select: none;\n      pointer-events: auto;\n    `;\n\n    textInputValueElem.setAttribute(\"x\", 0);\n    textInputValueElem.setAttribute(\"y\", 0);\n    textInputValueElem.setAttribute(\n      \"transform\",\n      `translate(${Theme.current.NODE_WIDTH / 2}, ${-15})`\n    );\n    textInputValueElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    textInputValueElem.setAttribute(\"height\", 30);\n\n    this.#inputValueElement = document.createElement(\"input\");\n    this.#inputValueElement.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      width: ${\n        Theme.current.NODE_WIDTH / 2 - 25\n      }px; // 5px less than foreignObject\n      height: ${20}px;\n      border: 0;\n      padding: 2px;\n      margin: 2px;\n    `;\n\n    /** Register value modifications */\n    this.#inputValueElement.addEventListener(\"keyup\", (e) => {\n      this.socket.value = e.target.value;\n    });\n\n    /** Prevent descendants management of the click (pan) and allow selection */\n    this.#inputValueElement.addEventListener(\"pointerdown\", (e) => {\n      e.stopPropagation();\n    });\n\n    this.#inputValueElement.setAttribute(\"value\", this.socket.value);\n    this.#inputValueElement.setAttribute(\"type\", \"text\");\n\n    textInputValueElem.appendChild(this.#inputValueElement);\n\n    let inputElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    inputElem.setAttribute(\"x\", 0);\n    inputElem.setAttribute(\"y\", 0);\n    inputElem.appendChild(this.#socketSymbol);\n\n    if (this.socket.canEditName) {\n      inputElem.appendChild(textInputNameElem);\n    } else {\n      inputElem.appendChild(this.#labelElement);\n    }\n\n    inputElem.appendChild(textInputValueElem);\n\n    return inputElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // This creates the connection and connects sockets\n    new IOConnection(socketComp, this, this.canvas).setup();\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return (\n      socketComp instanceof OutputSocketComponent &&\n      this.socket.node.canBeConnected(this.socket, socketComp.socket)\n    );\n  }\n\n  /**\n   * This socket supports single connection, so if the user\n   * connects another socket to it, we have to delete previous connections\n   */\n  get hasSingleConnection() {\n    return true;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return -1;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed. In addition, this override will reflect the status of the\n   * socket by hiding/showing the text field related to the input socket\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n\n    // Show/Hide the imput component\n    this.#inputValueElement.style[\"display\"] = this.isConnected\n      ? \"none\"\n      : \"table-cell\";\n\n    if (this.socket.canEditName) {\n      this.#inputNameElement.value = `${this.socket.name}`;\n    } else {\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n    }\n\n    // Only boolean, strings, anys and numbers can be modidied via the\n    // input textbox\n    if (\n      this.socket.type === Types.ANY ||\n      this.socket.type === Types.BOOLEAN ||\n      this.socket.type === Types.STRING ||\n      this.socket.type === Types.NUMBER\n    ) {\n      this.#inputValueElement.removeAttribute(\"disabled\");\n\n      // Now update the internal socket value according to the\n      // text input box by parsing the text\n      switch (this.socket.type) {\n        case Types.NUMBER:\n          this.socket.value = parseFloat(this.#inputValueElement.value);\n          break;\n        case Types.STRING:\n          this.socket.value = this.#inputValueElement.value;\n          break;\n        case Types.ANY:\n          this.socket.value = this.#inputValueElement.value;\n          break;\n        case Types.BOOLEAN:\n          this.socket.value =\n            this.#inputValueElement.value === \"true\" ? true : false;\n          break;\n      }\n    } else {\n      this.#inputValueElement.setAttribute(\"disabled\", \"1\");\n    }\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let out of n.outputs) {\n            // Create an item only if the input in \"compatible\" with this output\n            if (this.socket.node.canBeConnected(this.socket, out)) {\n              items.push(\n                new MenuItem(\n                  `\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                    ${nodeDef.name}.\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" fill=\"${CnodesSocketComponent.getColorForType(\n                    out.type\n                  )}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                    ${out.name}\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_CATEGORY_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                    ${nodeDef.category}\n                  </tspan>\n                  `,\n                  (x, y) => {\n                    // create the node and return the specific socket component to\n                    // the context menu client\n                    let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                    node.pos = new Position(x, y);\n                    // Return the connected component instead\n                    return out.__comp;\n                  },\n                  `${nodeDef.name}.${out.name} ${nodeDef.category}`\n                )\n              );\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conn = this.canvas.getConnectionsFor(this)[0];\n    if (conn) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect</tspan>`,\n          () => {\n            // Disconnect this socket\n            this.canvas.removeConnection(conn);\n            this.socket.disconnect();\n          }\n        )\n      );\n    }\n    if (this.socket.node.canRemoveInput(this.socket)) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Delete input</tspan>`,\n          () => {\n            // First, disconnect if connected\n            let conn = this.canvas.getConnectionsFor(this)[0];\n            if (conn) {\n              this.canvas.removeConnection(conn);\n              this.socket.disconnect();\n            }\n            this.socket.node.removeInput(this.socket);\n            this.parent.removeComponent(this);\n            this.parent.updateSVGElement();\n          }\n        )\n      );\n    }\n    if (this.socket.canEditType) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_NUMBER_COLOR}\">NUMBER</tspan>\n          `,\n          () => {\n            this.socket.type = Types.NUMBER;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_STRING_COLOR}\">STRING</tspan>\n          `,\n          () => {\n            this.socket.type = Types.STRING;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_BOOLEAN_COLOR}\">BOOLEAN</tspan>\n          `,\n          () => {\n            this.socket.type = Types.BOOLEAN;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_ARRAY_COLOR}\">ARRAY</tspan>\n          `,\n          () => {\n            this.socket.type = Types.ARRAY;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_OBJECT_COLOR}\">OBJECT</tspan>\n          `,\n          () => {\n            this.socket.type = Types.OBJECT;\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { PrevSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Theme } from \"./theme\";\nimport { Position } from \"../canvas/position\";\nimport { PrevNextConnection } from \"../connections/prevnextconnection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\n\n/**\n * This class implements a socket representing the Next socket in the\n * cnodes context\n */\nexport class NextSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#socketSymbol.setAttribute(\n      \"d\",\n      `\n      M ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      L ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      Z\n      `\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_PREV_NEXT_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_PREV_NEXT_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      Theme.current.NODE_PREV_NEXT_FILL_COLOR\n    );\n\n    let labelElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    labelElem.style = `\n      font: ${Theme.current.NODE_PREV_NEXT_NAME_FONT}; \n      color: ${Theme.current.NODE_PREV_NEXT_NAME_COLOR}; \n      text-align: right;\n      width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n      height: 30px;\n      line-height: 30px;\n      user-select: none;\n      `;\n\n    labelElem.innerHTML = `${this.socket.name}`;\n\n    labelElem.setAttribute(\"x\", 0);\n    labelElem.setAttribute(\"y\", 0);\n    labelElem.setAttribute(\n      \"transform\",\n      `translate(${-Theme.current.NODE_WIDTH / 2}, ${-15})`\n    );\n    labelElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    labelElem.setAttribute(\"height\", 30);\n\n    let prevElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    prevElem.setAttribute(\"x\", 0);\n    prevElem.setAttribute(\"y\", 0);\n    prevElem.appendChild(this.#socketSymbol);\n    prevElem.appendChild(labelElem);\n\n    return prevElem;\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof PrevSocket;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // This creates the connection and connects sockets\n    new PrevNextConnection(this, socketComp, this.canvas).setup();\n  }\n\n  /**\n   * Quesry if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof PrevSocket;\n  }\n\n  /**\n   * This socket supports single connection, so if the user\n   * connects another socket to it, we have to delete previous connections\n   */\n  get hasSingleConnection() {\n    return true;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return 1;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable && n.prev) {\n          items.push(\n            new MenuItem(\n              `\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n              ${nodeDef.name}.\n              </tspan>\n              <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_PREV_NEXT_FILL_COLOR}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                ${n.prev.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n              ${nodeDef.category}\n              </tspan>\n              `,\n              (x, y) => {\n                // create the node and return the specific socket component to\n                // the context menu client\n                let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                node.pos = new Position(x, y);\n                // Return the connected component instead\n                return n.prev.__comp;\n              },\n              `${nodeDef.name}.${n.prev.name} ${nodeDef.category}`\n            )\n          );\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conn = this.canvas.getConnectionsFor(this)[0];\n    if (conn) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect</tspan>`,\n          () => {\n            // Disconnect this socket\n            this.canvas.removeConnection(conn);\n            this.socket.disconnect();\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Program } from \"@marco.jacovone/cnodes/lib/core/program\";\nimport { Theme } from \"../..\";\nimport { MenuItem } from \"../../canvas/menu\";\nimport { CnodeComponent } from \"../cnode\";\n\nexport class CnodeBreakComponent extends CnodeComponent {\n  // Factory function\n  static instance = (node, canvas) => new CnodeBreakComponent(node, canvas);\n\n  /**\n   * Maintains a copy of original output array, so we\n   * can restore/reset on user request\n   */\n  #originalOutputs = null;\n\n  constructor(node, canvas) {\n    super(node, canvas);\n\n    // Save original outputs\n    this.#originalOutputs = [...node.outputs];\n  }\n\n  /**\n   * Returns the array of context menu items. This node gets\n   * the base node items, and add the action of delete unconnected outputs\n   * and reset the output sockets\n   */\n  getContextMenuItems() {\n    let items = super.getContextMenuItems() ?? [];\n\n    items.unshift(\n      new MenuItem(\n        `<tspan alignment-baseline=\"middle\" style=\"font: ${Theme.current.MENU_SPECIAL_ITEM_FONT}\">Remove unused</tspan>`,\n        () => {\n          for (let o of this.node.outputs) {\n            if (\n              this.node.canAddOutput &&\n              this.node.canRemoveOutput(o) &&\n              o.peers.length === 0\n            ) {\n              this.node.removeOutput(o);\n              this.removeComponent(o.__comp);\n            }\n          }\n          this.updateSVGElement();\n        }\n      ),\n      new MenuItem(\n        `<tspan alignment-baseline=\"middle\" style=\"font: ${Theme.current.MENU_SPECIAL_ITEM_FONT}\">Reset outputs</tspan>`,\n        () => {\n          for (let o of this.#originalOutputs) {\n            if (!this.node.outputs.includes(o)) {\n              this.node.addOutput(o);\n            }\n          }\n          this.updateSVGElement();\n        }\n      )\n    );\n\n    return items.length ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Program } from \"@marco.jacovone/cnodes/lib/core/program\";\nimport { Theme } from \"../..\";\nimport { MenuItem } from \"../../canvas/menu\";\nimport { CnodeComponent } from \"../cnode\";\n\nexport class CnodeProgramComponent extends CnodeComponent {\n  // Factory function\n  static instance = (node, canvas) => new CnodeProgramComponent(node, canvas);\n\n  constructor(node, canvas) {\n    super(node, canvas);\n  }\n\n  /**\n   * Returns the array of context menu items. This node gets\n   * the base node items, and add the action of edit internal program\n   */\n  getContextMenuItems() {\n    let items = super.getContextMenuItems() ?? [];\n\n    items.unshift(\n      new MenuItem(\n        `<tspan alignment-baseline=\"middle\" style=\"font: ${Theme.current.MENU_SPECIAL_ITEM_FONT}\">Edit...</tspan>`,\n        () => {\n          this.canvas.pushProgram(this.node);\n        }\n      )\n    );\n\n    return items.length ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"./theme\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { IOConnection } from \"../connections/ioconnection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { InputSocketComponent } from \"./input\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\n\n/**\n * This class implements a socket representing a Output in the\n * cnodes world\n */\nexport class OutputSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  /** A reference to the output name element, if there is one */\n  #outputNameElement = null;\n\n  /** A reference to the label element, if there is one */\n  #labelElement = null;\n\n  constructor(socket) {\n    super(socket);\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n\n    this.#socketSymbol.setAttribute(\"cx\", 0);\n    this.#socketSymbol.setAttribute(\"cy\", 0);\n    this.#socketSymbol.setAttribute(\"r\", Theme.current.NODE_IO_POINT_RADIUS);\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_IO_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_IO_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n\n    let textOutputNameElem = null;\n\n    /*\n     * If this socket can edit name, we create an output element for\n     * this name, otherwise, we create a label\n     */\n    if (this.socket.canEditName) {\n      textOutputNameElem = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      textOutputNameElem.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        line-height: 30px;\n        user-select: none;\n        pointer-events: auto;\n      `;\n\n      textOutputNameElem.setAttribute(\"x\", 0);\n      textOutputNameElem.setAttribute(\"y\", 0);\n      textOutputNameElem.setAttribute(\n        \"transform\",\n        `translate(${-Theme.current.NODE_WIDTH / 2}, ${-15})`\n      );\n      textOutputNameElem.setAttribute(\n        \"width\",\n        Theme.current.NODE_WIDTH / 2 - 15\n      );\n      textOutputNameElem.setAttribute(\"height\", 30);\n\n      this.#outputNameElement = document.createElement(\"input\");\n      this.#outputNameElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        width: ${\n          Theme.current.NODE_WIDTH / 2 - 25\n        }px; // 5px less than foreignObject\n        height: ${20}px;\n        border: 0;\n        padding: 2px;\n        margin: 2px;\n        text-align: right\n      `;\n\n      this.#outputNameElement.addEventListener(\"keyup\", (e) => {\n        this.socket.name = e.target.value;\n      });\n\n      this.#outputNameElement.setAttribute(\"value\", this.socket.name);\n      this.#outputNameElement.setAttribute(\"type\", \"text\");\n\n      textOutputNameElem.appendChild(this.#outputNameElement);\n    } else {\n      this.#labelElement = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      this.#labelElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: right;\n        width: ${Theme.current.NODE_WIDTH - 30}px;\n        height: 30px;\n        line-height: 30px;\n        user-select: none;\n        `;\n\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n\n      this.#labelElement.setAttribute(\"x\", 0);\n      this.#labelElement.setAttribute(\"y\", 0);\n      this.#labelElement.setAttribute(\n        \"transform\",\n        `translate(${-Theme.current.NODE_WIDTH + 15}, ${-15})`\n      );\n      this.#labelElement.setAttribute(\"width\", Theme.current.NODE_WIDTH - 30);\n      this.#labelElement.setAttribute(\"height\", 30);\n    }\n\n    let outputElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    outputElem.setAttribute(\"x\", 0);\n    outputElem.setAttribute(\"y\", 0);\n    outputElem.appendChild(this.#socketSymbol);\n\n    if (this.socket.canEditName) {\n      outputElem.appendChild(textOutputNameElem);\n    } else {\n      outputElem.appendChild(this.#labelElement);\n    }\n\n    return outputElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // if there is another connection for the target component,\n    // delete the oldest one\n    if (socketComp.isConnected) {\n      this.canvas.removeConnection(\n        this.canvas.getConnectionsFor(socketComp)[0]\n      );\n    }\n\n    // This creates the connection and connects sockets\n    new IOConnection(this, socketComp, this.canvas).setup();\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return (\n      socketComp instanceof InputSocketComponent &&\n      this.socket.node.canBeConnected(this.socket, socketComp.socket)\n    );\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return 1;\n  }\n\n  /**\n   * This socket is a multi-connection socket. This means that\n   * many sockets can be connected to it\n   */\n  get hasSingleConnection() {\n    return false;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed. In addition, this override will reflect the status of the\n   * socket by change the socket symbol according to the type\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let inp of n.inputs) {\n            // Create an item only if the input in \"compatible\" with this output\n            if (this.socket.node.canBeConnected(this.socket, inp)) {\n              items.push(\n                new MenuItem(\n                  `\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                    ${nodeDef.name}.\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" fill=\"${CnodesSocketComponent.getColorForType(\n                    inp.type\n                  )}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                    ${inp.name}\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_CATEGORY_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                    ${nodeDef.category}\n                  </tspan>\n                  `,\n                  (x, y) => {\n                    // create the node and return the specific socket component to\n                    // the context menu client\n                    let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                    node.pos = new Position(x, y);\n                    // Return the connected component instead\n                    return inp.__comp;\n                  },\n                  `${nodeDef.name}.${inp.name} ${nodeDef.category}`\n                )\n              );\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conns = this.canvas.getConnectionsFor(this);\n    if (conns.length > 0) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`,\n          () => {\n            for (let c of conns) {\n              // Disconnect this socket\n              this.canvas.removeConnection(c);\n              this.socket.disconnect(c.target);\n            }\n          }\n        )\n      );\n    }\n    if (this.socket.node.canRemoveOutput(this.socket)) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Delete output</tspan>`,\n          () => {\n            // First, disconnect all peers\n            let conns = this.canvas.getConnectionsFor(this);\n            if (conns.length > 0) {\n              for (let c of conns) {\n                this.canvas.removeConnection(c);\n                this.socket.disconnect(c.target);\n              }\n            }\n            this.socket.node.removeOutput(this.socket);\n            this.parent.removeComponent(this);\n            this.parent.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    if (this.socket.canEditType) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_NUMBER_COLOR}\">NUMBER</tspan>\n          `,\n          () => {\n            this.socket.type = Types.NUMBER;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_STRING_COLOR}\">STRING</tspan>\n          `,\n          () => {\n            this.socket.type = Types.STRING;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_BOOLEAN_COLOR}\">BOOLEAN</tspan>\n          `,\n          () => {\n            this.socket.type = Types.BOOLEAN;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_ARRAY_COLOR}\">ARRAY</tspan>\n          `,\n          () => {\n            this.socket.type = Types.ARRAY;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_OBJECT_COLOR}\">OBJECT</tspan>\n          `,\n          () => {\n            this.socket.type = Types.OBJECT;\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { NextSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Theme } from \"./theme\";\nimport { PrevNextConnection } from \"../connections/prevnextconnection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { Position } from \"../canvas/position\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\n\n/**\n * This class implements a socket that represents a Prev object\n * in the cnodes world\n */\nexport class PrevSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#socketSymbol.setAttribute(\n      \"d\",\n      `\n      M ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      L ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      Z\n      `\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_PREV_NEXT_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_PREV_NEXT_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      Theme.current.NODE_PREV_NEXT_FILL_COLOR\n    );\n\n    let labelElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    labelElem.style = `\n      font: ${Theme.current.NODE_PREV_NEXT_NAME_FONT}; \n      color: ${Theme.current.NODE_PREV_NEXT_NAME_COLOR}; \n      text-align: left;\n      width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n      height: 30px;\n      line-height: 30px;\n      user-select: none;\n      `;\n\n    labelElem.innerHTML = `${this.socket.name}`;\n\n    labelElem.setAttribute(\"x\", 0);\n    labelElem.setAttribute(\"y\", 0);\n    labelElem.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n    labelElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    labelElem.setAttribute(\"height\", 30);\n\n    let prevElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    prevElem.setAttribute(\"x\", 0);\n    prevElem.setAttribute(\"y\", 0);\n    prevElem.appendChild(this.#socketSymbol);\n    prevElem.appendChild(labelElem);\n\n    return prevElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // if there is another connection for the target component,\n    // delete the oldest one\n    if (socketComp.isConnected) {\n      this.canvas.removeConnection(\n        this.canvas.getConnectionsFor(socketComp)[0]\n      );\n    }\n\n    // This creates the connection and connects sockets\n    new PrevNextConnection(socketComp, this, this.canvas).setup();\n  }\n\n  /**\n   * Quesry if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof NextSocket;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return -1;\n  }\n\n  /**\n   * This socket is a multi-connection socket. This means that\n   * many sockets can be connected to it\n   */\n  get hasSingleConnection() {\n    return false;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let next of n.nexts) {\n            items.push(\n              new MenuItem(\n                `\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                  ${nodeDef.name}.\n                </tspan>\n                <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_PREV_NEXT_FILL_COLOR}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                  ${next.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                  ${nodeDef.category}\n                </tspan>\n                `,\n                (x, y) => {\n                  // create the node and return the specific socket component to\n                  // the context menu client\n                  let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                  node.pos = new Position(x, y);\n                  // Return the connected component instead\n                  return next.__comp;\n                },\n                `${nodeDef.name}.${next.name} ${nodeDef.category}`\n              )\n            );\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conns = this.canvas.getConnectionsFor(this);\n    if (conns.length > 0) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`,\n          () => {\n            for (let c of conns) {\n              // Disconnect this socket\n              this.canvas.removeConnection(c);\n              this.socket.disconnect(c.source);\n            }\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * This class contains all values needed to draw all elements\n * of design for cnodes-ui. The user can customize the graphic\n * aspect of element by defining a theme.\n * For exemple to modify the node with you can define your own\n * property inside a custom theme:\n *\n * class MyTheme extends cnui.Theme {\n *   get NODE_WIDTH() {\n *     return 400;\n *   }\n * }\n *\n * Now activate the theme by setting:\n *\n * cnui.Theme.current = new MyTheme();\n *\n */\nexport class Theme {\n  constructor() {}\n\n  // Canvas\n\n  get CANVAS_BACKGROUND_COLOR() {\n    return \"white\";\n  }\n\n  // Node container\n\n  get NODE_WIDTH() {\n    return 200;\n  }\n\n  get NODE_BORDER_RADIUS() {\n    return 15;\n  }\n  get NODE_FILL_COLOR() {\n    return \"#FAD7A0\";\n  }\n  get NODE_FUNCTIONAL_FILL_COLOR() {\n    return \"#C5F0FF\";\n  }\n  get NODE_STROKE_COLOR() {\n    return \"#FFFFFF\";\n  }\n  get NODE_FUNCTIONAL_STROKE_COLOR() {\n    return \"#FFFFFF\";\n  }\n  get NODE_STROKE_WIDTH() {\n    return 3;\n  }\n\n  get NODE_TITLE_COLOR() {\n    return \"brown\";\n  }\n  get NODE_FUNCTIONAL_TITLE_COLOR() {\n    return \"#069DD1\";\n  }\n  get NODE_TITLE_FONT() {\n    return \"bold 16px verdana\";\n  }\n\n  get NODE_SYMBOL_STROKE_WIDTH() {\n    return 3;\n  }\n  get NODE_SYMBOL_STROKE_COLOR() {\n    return \"#FEF9E7\";\n  }\n  get NODE_SYMBOL_FILL_COLOR() {\n    return \"#FEF9E7\";\n  }\n\n  get NODE_SIGN_COLOR() {\n    return \"#31A200\";\n  }\n\n  get NODE_FUNCTIONAL_SIGN_COLOR() {\n    return \"#008EBF\";\n  }\n\n  get NODE_EDITORS_COLOR() {\n    return \"black\";\n  }\n\n  get NODE_EDITORS_BACKGROUND() {\n    return \"rgba(250,250,250,0.7)\";\n  }\n\n  // Sockets\n\n  get NODE_PREV_NEXT_STROKE_WIDTH() {\n    return 2;\n  }\n  get NODE_PREV_NEXT_STROKE_COLOR() {\n    return \"#31A200\";\n  }\n  get NODE_PREV_NEXT_FILL_COLOR() {\n    return \"#31A200\";\n  }\n  get NODE_PREV_NEXT_NAME_FONT() {\n    return \"bold 11px verdana\";\n  }\n  get NODE_PREV_NEXT_NAME_COLOR() {\n    return \"bold 11px black\";\n  }\n  get NODE_PREV_NEXT_POINT_RADIUS() {\n    return 8;\n  }\n\n  get NODE_IO_STROKE_WIDTH() {\n    return 4;\n  }\n  get NODE_IO_STROKE_COLOR() {\n    return \"white\";\n  }\n  get NODE_IO_NAME_FONT() {\n    return \"bold 11px verdana\";\n  }\n  get NODE_IO_NAME_COLOR() {\n    return \"bold 11px black\";\n  }\n  get NODE_IO_POINT_RADIUS() {\n    return 10;\n  }\n\n  // Comments\n\n  get NODE_COMMENT_FONT() {\n    return \"italic 16px sans-serif\";\n  }\n  get NODE_COMMENT_COLOR() {\n    return \"lightgray\";\n  }\n\n  // IO Connections\n\n  get CONNECTION_TEMP_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_TEMP_INVALID_COLOR() {\n    return \"red\";\n  }\n  get CONNECTION_TEMP_VALID_COLOR() {\n    return \"gray\";\n  }\n  get CONNECTION_TEMP_COLOR() {\n    return \"#DDDDDD\";\n  }\n  get CONNECTION_IO_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_IO_COLOR() {\n    return \"#008EBF\";\n  }\n  get CONNECTION_PREV_NEXT_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_PREV_NEXT_COLOR() {\n    return \"#31A200\";\n  }\n\n  // Menu\n\n  get MENU_MIN_WIDTH() {\n    return 200;\n  }\n  get MENU_BORDER_RADIUS() {\n    return 10;\n  }\n  get MENU_FILL_COLOR() {\n    return \"#F3F3F3\";\n  }\n  get MENU_STROKE_COLOR() {\n    return \"#EEEEEE\";\n  }\n  get MENU_STROKE_WIDTH() {\n    return 2;\n  }\n  get MENU_ITEM_HEIGHT() {\n    return 33;\n  }\n  get MENU_ITEM_FONT() {\n    return \"font: 14px sans-serif\";\n  }\n  get MENU_SPECIAL_ITEM_FONT() {\n    return \"bold 14px sans-serif\";\n  }\n  get MENU_ITEM_CATEGORY_FONT() {\n    return \"bold 10px sans-serif\";\n  }\n  get MENU_ITEM_COLOR() {\n    return \"black\";\n  }\n  get MENU_ITEM_CATEGORY_COLOR() {\n    return \"lightgray\";\n  }\n  get MENU_ITEM_HIGHLIGHT() {\n    return \"white\";\n  }\n  get MENU_SEARCH_FONT() {\n    return \"bold 11px verdana\";\n  }\n\n  // Types\n\n  get TYPE_ARRAY_COLOR() {\n    return \"orange\";\n  }\n  get TYPE_OBJECT_COLOR() {\n    return \"#008EBF\";\n  }\n  get TYPE_NUMBER_COLOR() {\n    return \"green\";\n  }\n  get TYPE_STRING_COLOR() {\n    return \"#CB4335\";\n  }\n  get TYPE_BOOLEAN_COLOR() {\n    return \"#F5B7B1\";\n  }\n  get TYPE_ANY_COLOR() {\n    return \"#d9d9d9\";\n  }\n\n  static current = new Theme();\n}\n\n/** Default Light Theme */\nexport const defaultLight = new Theme();\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"../canvas/position\";\nimport { CnodesConnection } from \"../components/cnodesconnection\";\nimport { CnodesSocketComponent } from \"../components/cnodessocket\";\nimport { Theme } from \"../components/theme\";\n\n/**\n * This class implements a connection for Input->Output connection\n * in the cnodes world. It embed both source and target sockets that\n * must be of type InputSocketComponent and OutputSocketComponent, and manages\n * the connection status of the embedded cnodes's socket\n */\nexport class IOConnection extends CnodesConnection {\n  constructor(source, target, canvas) {\n    super(source, target, canvas);\n  }\n\n  /**\n   * Update the aspect of the connection\n   */\n  updateSVGElement() {\n    let sourcePoint = new Position(this.source.absPos.x, this.source.absPos.y);\n    let targetPoint = new Position(\n      this.target.absPos.x - Theme.current.NODE_IO_POINT_RADIUS,\n      this.target.absPos.y\n    );\n\n    let cpXDistance = Math.max(\n      0.8 * Math.abs(sourcePoint.x - targetPoint.x),\n      Math.min(Math.abs(sourcePoint.y - targetPoint.y), 100)\n    );\n    let cp1 = sourcePoint.add(\n      new Position(cpXDistance, -0.3 * (sourcePoint.y - targetPoint.y))\n    );\n    let cp2 = targetPoint.add(\n      new Position(-cpXDistance, 0.3 * (sourcePoint.y - targetPoint.y))\n    );\n\n    this.connectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.connectionEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.CONNECTION_IO_WIDTH\n    );\n    this.connectionEl.setAttribute(\n      \"stroke\",\n      CnodesSocketComponent.getColorForType(\n        this.getRelevantType(this.source.socket.type, this.target.socket.type)\n      )\n    );\n    this.connectionEl.setAttribute(\n      \"marker-end\",\n      `url(#io-arrow-${this.getRelevantType(\n        this.source.socket.type,\n        this.target.socket.type\n      )})`\n    );\n    this.connectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"../canvas/position\";\nimport { CnodesConnection } from \"../components/cnodesconnection\";\nimport { Theme } from \"../components/theme\";\n\n/**\n * This class implements a connection for Input->Output connection\n * in the cnodes world. It embed both source and target sockets that\n * must be of type InputSocketComponent and OutputSocketComponent, and manages\n * the connection status of the embedded cnodes's socket\n */\nexport class PrevNextConnection extends CnodesConnection {\n  constructor(source, target, canvas, connect = true) {\n    super(source, target, canvas);\n  }\n\n  /**\n   * Update the aspect of the connection\n   */\n  updateSVGElement() {\n    let sourcePoint = new Position(this.source.absPos.x, this.source.absPos.y);\n    let targetPoint = new Position(\n      this.target.absPos.x - Theme.current.NODE_PREV_NEXT_POINT_RADIUS,\n      this.target.absPos.y\n    );\n\n    let cpXDistance = Math.max(\n      0.8 * Math.abs(sourcePoint.x - targetPoint.x),\n      Math.min(Math.abs(sourcePoint.y - targetPoint.y), 100)\n    );\n    let cp1 = sourcePoint.add(\n      new Position(cpXDistance, -0.3 * (sourcePoint.y - targetPoint.y))\n    );\n    let cp2 = targetPoint.add(\n      new Position(-cpXDistance, 0.3 * (sourcePoint.y - targetPoint.y))\n    );\n\n    this.connectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.connectionEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.CONNECTION_PREV_NEXT_WIDTH\n    );\n    this.connectionEl.setAttribute(\n      \"stroke\",\n      Theme.current.CONNECTION_PREV_NEXT_COLOR\n    );\n    this.connectionEl.setAttribute(\"marker-end\", \"url(#prevnext-arrow)\");\n    this.connectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Canvas } from \"./canvas/canvas\";\nimport { Component } from \"./canvas/component\";\nimport { Position } from \"./canvas/position\";\nimport { CnodeComponent } from \"./components/cnode\";\nimport { CnodeProgramComponent } from \"./components/nodes/cnodeprogram\";\nimport { Theme, defaultLight } from \"./components/theme\";\nimport { CnodesCanvas } from \"./components/cnodescanvas\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Program } from \"@marco.jacovone/cnodes/lib/core/program\";\nimport { FOBreak } from \"@marco.jacovone/cnodes/lib/nodes/object/fobreak\";\nimport { CnodeBreakComponent } from \"./components/nodes/cnodebreak\";\n\nexport {\n  Canvas,\n  Component,\n  CnodeComponent,\n  Position,\n  Theme,\n  defaultLight,\n  CnodesCanvas,\n  CnodeProgramComponent,\n};\n\nexport * from \"@marco.jacovone/cnodes/cnodes\";\n\n/**\n * This is the main entrypoint function. You can pass an ID of a\n * DOM element by parameter (tipically a DIV element).\n * For example, having a simple DOM element like\n *\n * <div id=\"mycanvas\" class=\"fullscreen\"></div>\n *\n * You can do\n *\n * <script>\n *  let canvas = cnui.canvas('mycanvas');\n *  let prg = cnui.Env.import(JSON.parse('...'));\n *  canvas.program = prg;\n * </script>\n *\n * @param {string} elId The id of the DOM element you want to become a CNODES-UI canvas\n */\nexport function canvas(elId) {\n  let el = document.getElementById(elId);\n  if (!el) {\n    console.log(`No element with id '${elId}'`);\n    return null;\n  }\n  Env.init();\n  return new CnodesCanvas(el);\n}\n\n// register core custom nodes\nCnodesCanvas.registerNodeUI(new Program(), CnodeProgramComponent.instance);\nCnodesCanvas.registerNodeUI(new FOBreak(), CnodeBreakComponent.instance);\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n// Export core nodes\nexport * from \"./lib/core/env.js\";\nexport * from \"./lib/core/node.js\";\nexport * from \"./lib/core/program.js\";\nexport * from \"./lib/core/socket.js\";\nexport * from \"./lib/core/type.js\";\nexport * from \"./lib/nodes/call.js\";\nexport * from \"./lib/nodes/console.js\";\nexport * from \"./lib/nodes/fgetvar.js\";\nexport * from \"./lib/nodes/for.js\";\nexport * from \"./lib/nodes/getvar.js\";\nexport * from \"./lib/nodes/if.js\";\nexport * from \"./lib/nodes/setvar.js\";\nexport * from \"./lib/nodes/while.js\";\nexport * from \"./lib/nodes/fif.js\";\n\n// Export boolean nodes\nexport * from \"./lib/nodes/bool/fcompare.js\";\n\n// Export string nodes\nexport * from \"./lib/nodes/string/fsconst.js\";\nexport * from \"./lib/nodes/string/fconcat.js\";\n\n// Export math nodes\nexport * from \"./lib/nodes/math/fnconst.js\";\nexport * from \"./lib/nodes/math/fadd.js\";\nexport * from \"./lib/nodes/math/fdiv.js\";\nexport * from \"./lib/nodes/math/fmul.js\";\nexport * from \"./lib/nodes/math/fsqrt.js\";\nexport * from \"./lib/nodes/math/fmod.js\";\n\n// Export arrays nodes\nexport * from \"./lib/nodes/array/apush.js\";\nexport * from \"./lib/nodes/array/faconst.js\";\nexport * from \"./lib/nodes/array/famake.js\";\nexport * from \"./lib/nodes/array/faget.js\";\nexport * from \"./lib/nodes/array/falength.js\";\nexport * from \"./lib/nodes/array/amap.js\";\nexport * from \"./lib/nodes/array/famap.js\";\nexport * from \"./lib/nodes/array/areduce.js\";\nexport * from \"./lib/nodes/array/fareduce.js\";\n\n// Export objects nodes\nexport * from \"./lib/nodes/object/fomake.js\";\nexport * from \"./lib/nodes/object/fobreak.js\";\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"./node.js\";\nimport { NextSocket, OutputSocket, InputSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class implements a cnode that is the starting point for a\n * program. The program can be top-level or not\n */\nexport class Enter extends Node {\n  constructor() {\n    super(\"Enter\");\n    this.removable = false;\n    this.creatable = false;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Begin\", this)];\n    this.prev = null;\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Val\").value;\n    this.output(\"Val\").type = this.input(\"Val\").type;\n    return this.getFlowResult(this.next(\"Begin\"));\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function enterNode() {\n  return new Enter();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { program, Program } from \"./program.js\";\nimport { enterNode } from \"./enter.js\";\nimport { exitNode } from \"./exit.js\";\nimport { callNode } from \"../nodes/call.js\";\nimport { consoleNode } from \"../nodes/console.js\";\nimport { fgetvarNode } from \"../nodes/fgetvar.js\";\nimport { forNode } from \"../nodes/for.js\";\nimport { getvarNode } from \"../nodes/getvar.js\";\nimport { setvarNode } from \"../nodes/setvar.js\";\nimport { whileNode } from \"../nodes/while.js\";\nimport { ifNode } from \"../nodes/if.js\";\nimport { apushNode } from \"../nodes/array/apush.js\";\nimport { faconstNode } from \"../nodes/array/faconst.js\";\nimport { famakeNode } from \"../nodes/array/famake.js\";\nimport { fagetNode } from \"../nodes/array/faget.js\";\nimport { falengthNode } from \"../nodes/array/falength.js\";\nimport { faddNode } from \"../nodes/math/fadd.js\";\nimport { fdivNode } from \"../nodes/math/fdiv.js\";\nimport { fmulNode } from \"../nodes/math/fmul.js\";\nimport { fsqrtNode } from \"../nodes/math/fsqrt.js\";\nimport { fequalNode } from \"../nodes/bool/fequal.js\";\nimport { fgtNode } from \"../nodes/bool/fgt.js\";\nimport { fgteNode } from \"../nodes/bool/fgte.js\";\nimport { fltNode } from \"../nodes/bool/flt.js\";\nimport { flteNode } from \"../nodes/bool/flte.js\";\nimport { fnotequalNode } from \"../nodes/bool/fnotequal.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n  Socket,\n} from \"./socket.js\";\nimport { Node } from \"./node.js\";\nimport { fsconstNode } from \"../nodes/string/fsconst.js\";\nimport { fconcatNode } from \"../nodes/string/fconcat.js\";\nimport { fmodNode } from \"../nodes/math/fmod.js\";\nimport { fifNode } from \"../nodes/fif.js\";\nimport { fnconstNode } from \"../nodes/math/fnconst.js\";\nimport { FOMake, fomakeNode } from \"../nodes/object/fomake.js\";\nimport { FOBreak, fobreakNode } from \"../nodes/object/fobreak.js\";\nimport { amapNode } from \"../nodes/array/amap.js\";\nimport { areduceNode } from \"../nodes/array/areduce.js\";\nimport { famapNode } from \"../nodes/array/famap.js\";\nimport { Types } from \"./type.js\";\nimport { fareduceNode } from \"../nodes/array/fareduce.js\";\n\n/**\n * This class represents a main global environment for cnodes.\n * The class is a \"static\" class that is responible for maintaining a global\n * registry of registered nodes. A node registration is a object with three fields: a node name,\n * a category name and a factory, that returns a new instance for that node.\n * The global Env instance must be initialized one-time by calling the Env.init() method,\n * this method register all built-in nodes. Eventual custom nodes must be registered manually\n * via Env.registerNode(name, category, factory).\n */\nexport class Env {\n  static #nodeRegistry = new Map();\n\n  /**\n   * Initialize the CNodes global environment\n   */\n  static init() {\n    Env.#nodeRegistry = new Map();\n\n    // Core nodes\n\n    Env.registerNode(\"Program\", \"Core\", program);\n    Env.registerNode(\"Call\", \"Core\", callNode);\n    Env.registerNode(\"Console\", \"Core\", consoleNode);\n    Env.registerNode(\"FGetvar\", \"Core\", fgetvarNode);\n    Env.registerNode(\"For\", \"Core\", forNode);\n    Env.registerNode(\"Getvar\", \"Core\", getvarNode);\n    Env.registerNode(\"If\", \"Core\", ifNode);\n    Env.registerNode(\"FIf\", \"Core\", fifNode);\n    Env.registerNode(\"Setvar\", \"Core\", setvarNode);\n    Env.registerNode(\"While\", \"Core\", whileNode);\n    Env.registerNode(\"Enter\", \"Core\", enterNode);\n    Env.registerNode(\"Exit\", \"Core\", exitNode);\n\n    // String nodes\n    Env.registerNode(\"FSConst\", \"String\", fsconstNode);\n    Env.registerNode(\"FConcat\", \"String\", fconcatNode);\n\n    // Math nodes\n    Env.registerNode(\"FNConst\", \"Math\", fnconstNode);\n    Env.registerNode(\"FAdd\", \"Math\", faddNode);\n    Env.registerNode(\"FDiv\", \"Math\", fdivNode);\n    Env.registerNode(\"FMod\", \"Math\", fmodNode);\n    Env.registerNode(\"FMul\", \"Math\", fmulNode);\n    Env.registerNode(\"FSqrt\", \"Math\", fsqrtNode);\n\n    // Boolean Nodes\n    Env.registerNode(\"FEqual\", \"Boolean\", fequalNode);\n    Env.registerNode(\"FGT\", \"Boolean\", fgtNode);\n    Env.registerNode(\"FGTE\", \"Boolean\", fgteNode);\n    Env.registerNode(\"FLT\", \"Boolean\", fltNode);\n    Env.registerNode(\"FLTE\", \"Boolean\", flteNode);\n    Env.registerNode(\"FNotEqual\", \"Boolean\", fnotequalNode);\n\n    // Arrays Nodes\n    Env.registerNode(\"APush\", \"Arrays\", apushNode);\n    Env.registerNode(\"FAConst\", \"Arrays\", faconstNode);\n    Env.registerNode(\"FAMake\", \"Arrays\", famakeNode);\n    Env.registerNode(\"FAGet\", \"Arrays\", fagetNode);\n    Env.registerNode(\"FALength\", \"Arrays\", falengthNode);\n    Env.registerNode(\"AMap\", \"Arrays\", amapNode);\n    Env.registerNode(\"FAMap\", \"Arrays\", famapNode);\n    Env.registerNode(\"AReduce\", \"Arrays\", areduceNode);\n    Env.registerNode(\"FAReduce\", \"Arrays\", fareduceNode);\n\n    // Object Nodes\n    Env.registerNode(\"FOMake\", \"Objects\", fomakeNode);\n    Env.registerNode(\"FOBreak\", \"Objects\", fobreakNode);\n  }\n\n  /**\n   * Register a node type\n   * @param {string} name The name of the node\n   * @param {string} category The category of the node\n   * @param {any} factory A class that instantiate the node\n   */\n  static registerNode(name, category, factory) {\n    Env.#nodeRegistry.set(name, { category: category, factory: factory });\n  }\n\n  /**\n   * Return the list of unique registered categories\n   */\n  static getCategories() {\n    let categoryMap = new Map();\n    Array.from(this.#nodeRegistry.values()).forEach((element) => {\n      categoryMap.set(element.category, 0);\n    });\n    return Array.from(categoryMap.keys());\n  }\n\n  /**\n   * Return an array of registrations for nodes.\n   * Registrations have the sign: {name, category, factory}\n   * @param {string} category The category for which seacrh registrations\n   */\n  static getCategoryNodes(category) {\n    let registrations = [];\n    Array.from(this.#nodeRegistry.entries()).forEach((entry) => {\n      if (entry[1].category === category) {\n        registrations.push({\n          name: entry[0],\n          category: entry[1].category,\n          factory: entry[1].factory,\n        });\n      }\n    });\n    return registrations;\n  }\n\n  /**\n   * Instantiate a node by name\n   * @param {string} name The name of the node\n   */\n  static getInstance(name) {\n    let reg = this.#nodeRegistry.get(name);\n    if (reg) {\n      return reg.factory();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Create helper maker nodes to support user with dealing with\n   * specific object structures. This method accepts optional\n   * options that let you specify what exactly create:\n   * {\n   *   recursive: true,\n   *   fillValues: true,\n   *   forceTypes: true\n   *   editableInputs: true\n   * }\n   *\n   * @param {any} obj The object structure to consider whiel create nodes\n   * @param {any} opts The options on create nodes\n   */\n  static registerMaker(name, obj, opts = {}) {\n    /**\n     * This function will be registered as creator for\n     * instances of the OMake node for the user object\n     */\n    let createMake = function () {\n      let makeNode = new FOMake();\n      makeNode.title = name;\n      makeNode.inputs = [];\n\n      for (let field in obj) {\n        let is = new InputSocket(field, makeNode, Types.ANY, 0);\n\n        if (opts.editableInputs) {\n          is.canEditName = true;\n          is.canEditType = true;\n        }\n\n        switch (typeof obj[field]) {\n          case \"string\":\n            is.type = opts.forceTypes ? Types.STRING : Types.ANY;\n            is.value = opts.fillValues ? obj[field] : \"\";\n            break;\n          case \"number\":\n            is.type = opts.forceTypes ? Types.NUMBER : Types.ANY;\n            is.value = opts.fillValues ? obj[field] : opts.forceTypes ? 0 : \"\";\n            break;\n          case \"boolean\":\n            is.type = opts.forceTypes ? Types.BOOLEAN : Types.ANY;\n            is.value = opts.fillValues\n              ? obj[field]\n              : opts.forceTypes\n              ? false\n              : \"\";\n            break;\n          case \"object\":\n            if (obj[field] instanceof Array) {\n              is.type = opts.forceTypes ? Types.ARRAY : Types.ANY;\n              is.value = opts.fillValues\n                ? obj[field]\n                : opts.forceTypes\n                ? []\n                : \"\";\n            } else if (obj[field] instanceof Object) {\n              is.type = opts.forceTypes ? Types.OBJECT : Types.ANY;\n              is.value = opts.fillValues\n                ? obj[field]\n                : opts.forceTypes\n                ? {}\n                : \"\";\n            } else {\n              throw new Error(\"Unknown field type: \" + field);\n            }\n            break;\n          default:\n            throw new Error(\"Unknown field type: \" + field);\n        }\n        makeNode.inputs.push(is);\n      }\n\n      return makeNode;\n    };\n\n    // Reigister factory objects\n    Env.registerNode(name, \"Custom\", createMake);\n\n    if (opts.recursive) {\n      for (let field in obj) {\n        if (typeof obj[field] === \"object\" && !(obj[field] instanceof Array)) {\n          Env.registerMaker(name + \".\" + field, obj[field], opts);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create helper breaker nodes to support user with dealing with\n   * specific object structures. This method accepts optional\n   * options that let you specify what exactly create:\n   * {\n   *   recursive: true,\n   *   forceTypes: true,\n   *   editableOutputs: true\n   * }\n   *\n   * @param {any} obj The object structure to consider whiel create nodes\n   * @param {any} opts The options on create nodes\n   */\n  static registerBreaker(name, obj, opts = {}) {\n    /**\n     * This function will be registered as creator for\n     * instances of the OBreak node for the user object\n     */\n    let createBreak = function () {\n      let breakNode = new FOBreak();\n      breakNode.title = name;\n      breakNode.outputs = [];\n\n      for (let field in obj) {\n        let os = new OutputSocket(field, breakNode, Types.ANY, 0);\n        if (opts.editableOutputs) {\n          os.canEditName = true;\n          os.canEditType = true;\n        }\n\n        switch (typeof obj[field]) {\n          case \"string\":\n            os.type = opts.forceTypes ? Types.STRING : Types.ANY;\n            break;\n          case \"number\":\n            os.type = opts.forceTypes ? Types.NUMBER : Types.ANY;\n            break;\n          case \"boolean\":\n            os.type = opts.forceTypes ? Types.BOOLEAN : Types.ANY;\n            break;\n          case \"object\":\n            if (obj[field] instanceof Array) {\n              os.type = opts.forceTypes ? Types.ARRAY : Types.ANY;\n            } else if (obj[field] instanceof Object) {\n              os.type = opts.forceTypes ? Types.OBJECT : Types.ANY;\n            } else {\n              throw new Error(\"Unknown field type: \" + field);\n            }\n            break;\n          default:\n            throw new Error(\"Unknown field type: \" + field);\n        }\n        breakNode.outputs.push(os);\n      }\n\n      return breakNode;\n    };\n\n    // Reigister factory objects\n    Env.registerNode(name, \"Custom\", createBreak);\n\n    if (opts.recursive) {\n      for (let field in obj) {\n        if (typeof obj[field] === \"object\" && !(obj[field] instanceof Array)) {\n          Env.registerBreaker(name + \".\" + field, obj[field], opts);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create both helper maker and breaker nodes to support user with dealing with\n   * specific object structures. This method accepts optional\n   * options that let you specify what exactly create:\n   * {\n   *   recursive: true,\n   *   fillValues: true,\n   *   forceTypes: true,\n   *   editableInputs: true\n   *   editableOutputs: true\n   * }\n   *\n   * @param {any} obj The object structure to consider whiel create nodes\n   * @param {any} opts The options on create nodes\n   */\n  static registerObject(name, obj, opts = {}) {\n    Env.registerMaker(\"Make \" + name, obj, opts);\n    Env.registerBreaker(\"Break \" + name, obj, opts);\n  }\n\n  /**\n   * Creates and returns a JSON representation of the entire program\n   * @param {Program} program The program to export\n   */\n  static export(program) {\n    let exp = {\n      id: program.id,\n      version: Program.version,\n      lastNodeIndex: Node.lastNodeIdIndex,\n      lastSocketIndex: Socket.lastSocketIdIndex,\n      enter: program.enter.id,\n      exit: program.exit.id,\n      nodes: [],\n      connections: [],\n    };\n\n    for (let node of program.nodes) {\n      let nodeExp = {\n        id: node.id,\n        name: node.name,\n        title: node.title,\n        functional: node.functional,\n        meta: node.meta,\n        program: node instanceof Program ? Env.export(node) : undefined,\n        inputs: node.inputs.map((inp) => {\n          return {\n            id: inp.id,\n            name: inp.name,\n            node: null,\n            type: inp.type,\n            value: inp.value,\n            canEditName: inp.canEditName,\n            canEditType: inp.canEditType,\n            peer: null,\n          };\n        }),\n        outputs: node.outputs.map((outp) => {\n          return {\n            id: outp.id,\n            name: outp.name,\n            node: null,\n            type: outp.type,\n            value: outp.value,\n            cached: outp.cached,\n            canEditName: outp.canEditName,\n            canEditType: outp.canEditType,\n            peers: [],\n          };\n        }),\n        prev: !node.prev\n          ? null\n          : {\n              id: node.prev.id,\n              name: node.prev.name,\n              node: null,\n              peers: [],\n            },\n        nexts: node.nexts.map((next) => {\n          return {\n            id: next.id,\n            name: next.name,\n            node: null,\n            peer: null,\n          };\n        }),\n      };\n\n      exp.nodes.push(nodeExp);\n    }\n\n    /**\n     * Define a inner-function that prevent duplicates connections\n     * @param {any} connection The connection to push\n     */\n    function pushConnection(connection) {\n      if (\n        exp.connections.findIndex(\n          (c) =>\n            c.type === connection.type &&\n            c.sourceNode === connection.sourceNode &&\n            c.sourceSocket === connection.sourceSocket &&\n            c.targetNode === connection.targetNode &&\n            c.targetSocket === connection.targetSocket\n        ) === -1\n      ) {\n        exp.connections.push(connection);\n      }\n    }\n\n    for (let node of program.nodes) {\n      if (node.prev && node.prev.peers && node.prev.peers.length > 0) {\n        for (let peer of node.prev.peers) {\n          let connectionExp = {\n            type: \"pn\",\n            sourceNode: peer.node.id,\n            sourceSocket: peer.id,\n            targetNode: node.id,\n            targetSocket: node.prev.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n      for (let inp of node.inputs) {\n        if (inp.peer) {\n          let connectionExp = {\n            type: \"io\",\n            sourceNode: inp.peer.node.id,\n            sourceSocket: inp.peer.id,\n            targetNode: node.id,\n            targetSocket: inp.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n      for (let outp of node.outputs) {\n        for (let peer of outp.peers) {\n          if (peer) {\n            let connectionExp = {\n              type: \"io\",\n              sourceNode: node.id,\n              sourceSocket: outp.id,\n              targetNode: peer.node.id,\n              targetSocket: peer.id,\n            };\n            pushConnection(connectionExp);\n          }\n        }\n      }\n      for (let next of node.nexts) {\n        if (next.peer) {\n          let connectionExp = {\n            type: \"pn\",\n            sourceNode: node.id,\n            sourceSocket: next.id,\n            targetNode: next.peer.node.id,\n            targetSocket: next.peer.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n    }\n\n    return exp;\n  }\n\n  /**\n   * Create a program instance based on export data created with export() method\n   * @param {any} data A object with the export data format\n   */\n  static import(data) {\n    if (data.version !== 1) {\n      throw new Error(\"Imported data must have version 1\");\n    }\n\n    let p = new Program();\n\n    // Removes enter and exit auto-nodes, these\n    // will be re-created by import procedure\n    p.removeNode(p.enter);\n    p.removeNode(p.exit);\n\n    Program.version = data.version;\n\n    // Now import nodes without connections\n    for (let nodeData of data.nodes) {\n      let node;\n\n      // If this node is a program node, let the import\n      // procedure to create the node\n      if (nodeData.program) {\n        node = Env.import(nodeData.program);\n      } else {\n        // Otherwise import the node\n        node = Env.getInstance(nodeData.name);\n      }\n      // Delete default sockets (created by getInstance())\n      node.inputs = [];\n      node.outputs = [];\n      node.prev = null;\n      node.nexts = [];\n\n      if (!node) {\n        throw new Error(`Node type '${nodeData.name}' is not registered`);\n      }\n      node.title = nodeData.title;\n      node.id = nodeData.id;\n      node.functional = nodeData.functional;\n      node.meta = nodeData.meta;\n      for (let inpData of nodeData.inputs) {\n        let inp = new InputSocket(\n          inpData.name,\n          node,\n          inpData.type,\n          inpData.value\n        );\n        inp.id = inpData.id;\n        inp.canEditName = inpData.canEditName;\n        node.inputs.push(inp);\n      }\n      for (let outpData of nodeData.outputs) {\n        let outp = new OutputSocket(\n          outpData.name,\n          node,\n          outpData.type,\n          outpData.value,\n          outpData.cached\n        );\n        outp.canEditName = outpData.canEditName;\n        outp.id = outpData.id;\n        node.outputs.push(outp);\n      }\n      if (nodeData.prev) {\n        let prev = new PrevSocket(nodeData.prev.name, node);\n        prev.id = nodeData.prev.id;\n        node.prev = prev;\n      }\n      for (let nextData of nodeData.nexts) {\n        let next = new NextSocket(nextData.name, node);\n        next.id = nextData.id;\n        node.nexts.push(next);\n      }\n\n      p.addNode(node);\n    }\n\n    p.enter = p.nodes.find((n) => n.id === data.enter);\n    p.exit = p.nodes.find((n) => n.id === data.exit);\n\n    // Now import connections\n    for (let connectionData of data.connections) {\n      let sourceNode = p.nodes.find((n) => n.id === connectionData.sourceNode);\n      let targetNode = p.nodes.find((n) => n.id === connectionData.targetNode);\n\n      let sourceSocket =\n        connectionData.type === \"pn\"\n          ? sourceNode.nexts.find((n) => n.id === connectionData.sourceSocket)\n          : sourceNode.outputs.find(\n              (o) => o.id === connectionData.sourceSocket\n            );\n      let targetSocket =\n        connectionData.type === \"pn\"\n          ? targetNode.prev\n          : targetNode.inputs.find((i) => i.id === connectionData.targetSocket);\n\n      sourceSocket.connect(targetSocket);\n    }\n\n    // These two static variable must be assigned at the end because\n    // the new InputSocket(), new OutputSocket(), ... increment it during\n    // the import phase\n    Node.lastNodeIdIndex = data.lastNodeIndex;\n    Socket.lastSocketIdIndex = data.lastSocketIndex;\n\n    return p;\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node, Result } from \"./node.js\";\nimport { PrevSocket, InputSocket, OutputSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class implements a cnode that is the starting point for a\n * program. The program can be top-level or not\n */\nexport class Exit extends Node {\n  constructor() {\n    super(\"Exit\");\n    this.removable = false;\n    this.creatable = false;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [];\n    this.prev = new PrevSocket(\"End\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Val\").value;\n    this.output(\"Val\").type = this.input(\"Val\").type;\n    return new Result(); // End process\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function exitNode() {\n  return new Exit();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FlowSocket, OutputSocket, Socket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This is the base node class. A node have some input and output\n * to exchange data with other nodes, some nexts to determine next\n * execution nodes, and a prev to identify the entry point.\n * A node can be functional or iterative. If the node is funcitonal\n * the execution of the process method is repeated each time other\n * nodes read the output values, otherwise output nodes reports\n * the last computed value. Each node has a unique id to identify it\n */\nexport class Node {\n  /** An incremental index to generate unique node IDs */\n  static lastNodeIdIndex = 0;\n\n  /** The internal unique identifier */\n  #id = null;\n\n  /** The internal name of the node */\n  #name = \"\";\n\n  /** The external name of the node */\n  #title = \"\";\n\n  /** Is this node a functional node? */\n  #functional = false;\n\n  /** List of node's inputs */\n  #inputs = [];\n\n  /** List of node's outputs */\n  #outputs = [];\n\n  /** List of node's nexts in execution */\n  #nexts = [];\n\n  /** The execution entry point */\n  #prev = null;\n\n  /** Reference to the enclosing program */\n  #program = null;\n\n  /** Additional info (UIs can write anything to store graphical behaviors) */\n  #meta = null;\n\n  /** Can the node be removed by the user? */\n  #removable = true;\n\n  /** Can the node be created by the user? */\n  #creatable = true;\n\n  /** Can the user add an input? */\n  #canAddInput = false;\n\n  /** Can the user add an output? */\n  #canAddOutput = false;\n\n  /** Can the user add a next? */\n  #canAddNext = false;\n\n  constructor(name, title = name) {\n    this.#name = name;\n    this.#title = title;\n    this.#id = \"NID_\" + Node.lastNodeIdIndex++;\n  }\n\n  get id() {\n    return this.#id;\n  }\n  set id(val) {\n    this.#id = val;\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(val) {\n    this.#name = val;\n  }\n  get title() {\n    return this.#title;\n  }\n  set title(val) {\n    this.#title = val;\n  }\n  get functional() {\n    return this.#functional;\n  }\n  set functional(val) {\n    this.#functional = val;\n  }\n  get inputs() {\n    return this.#inputs;\n  }\n  set inputs(val) {\n    this.#inputs = val;\n  }\n  get outputs() {\n    return this.#outputs;\n  }\n  set outputs(val) {\n    this.#outputs = val;\n  }\n  get nexts() {\n    return this.#nexts;\n  }\n  set nexts(val) {\n    this.#nexts = val;\n  }\n  get prev() {\n    return this.#prev;\n  }\n  set prev(val) {\n    this.#prev = val;\n  }\n  get program() {\n    return this.#program;\n  }\n  set program(val) {\n    this.#program = val;\n  }\n  get removable() {\n    return this.#removable;\n  }\n  set removable(val) {\n    this.#removable = val;\n  }\n  get creatable() {\n    return this.#creatable;\n  }\n  set creatable(val) {\n    this.#creatable = val;\n  }\n  get canAddInput() {\n    return this.#canAddInput;\n  }\n  set canAddInput(val) {\n    this.#canAddInput = val;\n  }\n  get canAddOutput() {\n    return this.#canAddOutput;\n  }\n  set canAddOutput(val) {\n    this.#canAddOutput = val;\n  }\n  get canAddNext() {\n    return this.#canAddNext;\n  }\n  set canAddNext(val) {\n    this.#canAddNext = val;\n  }\n  get meta() {\n    return this.#meta;\n  }\n  set meta(val) {\n    this.#meta = val;\n  }\n\n  /**\n   * Returns the input by name\n   * @param {string} name Name of the input\n   */\n  input(name) {\n    return this.inputs.find((i) => i.name === name);\n  }\n\n  /**\n   * Returns the output by name\n   * @param {string} name The name of the output\n   */\n  output(name) {\n    return this.outputs.find((o) => o.name === name);\n  }\n\n  /**\n   * Returns the next by name\n   * @param {string} name The name of the next\n   */\n  next(name) {\n    if (!name) {\n      return this.nexts[0];\n    }\n    return this.nexts.find((n) => n.name === name);\n  }\n\n  /**\n   * Evaluate all imputs of this node. Inputs are sockets.\n   * If the socket is connected the evaluation will search\n   * for the socket's peer and evaluate the output counterpart\n   * eventually reprocess the output's nod, if the node is\n   * functional\n   */\n  evaluateInputs() {\n    for (let inp of this.inputs) {\n      inp.evaluate();\n    }\n  }\n\n  /**\n   * This is an helper method to construct a Result instance\n   * by name\n   * @param {Socket} socket The Socket on which construct the Result instance\n   */\n  getFlowResult(socket) {\n    if (socket.peer) {\n      return new Result(socket.peer.node);\n    } else {\n      return new Result();\n    }\n  }\n\n  /**\n   * This method disconnect all sockets from the node\n   */\n  disconnectAllSockets() {\n    if (this.#prev) {\n      while (this.#prev.peers.length > 0) {\n        this.#prev.disconnect(this.#prev.peers[0]);\n      }\n    }\n    for (let i of this.#inputs) {\n      if (i.peer) {\n        i.disconnect();\n      }\n    }\n    for (let o of this.#outputs) {\n      while (o.peers.length > 0) {\n        o.peers[0].disconnect();\n      }\n    }\n    for (let n of this.#nexts) {\n      if (n.peer) {\n        n.disconnect();\n      }\n    }\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * Subclass with variable number of input should override this method\n   */\n  addInput() {\n    throw new Error(\"Can't add input!\");\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * Subclass with variable number of input should override this method\n   * @param {*} input The input to remove\n   */\n  removeInput(input) {\n    throw new Error(\"Can't remove input\");\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * Subclass with variable number of input should override this method\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return false;\n  }\n\n  /**\n   * If this.#canAddOutput is true, the user can add an output\n   * Subclass with variable number of output should override this method\n   */\n  addOutput() {\n    throw new Error(\"Can't add output!\");\n  }\n\n  /**\n   * This method removes a specific output from the node, if\n   * this is possible whit this instance\n   * Subclass with variable number of output should override this method\n   * @param {OutputSocket} output The output to remove\n   */\n  removeOutput(output) {\n    throw new Error(\"Can't remove output\");\n  }\n\n  /**\n   * Can this node remove a specific output?\n   * Subclass with variable number of output should override this method\n   * @param {OutputSocket} output The output to remove\n   */\n  canRemoveOutput(output) {\n    return false;\n  }\n\n  /**\n   * This method defines if a particular socket of this node can\n   * be connected to another one, based on sockets type.\n   * Default implementation checks for types of sockets, following the rule:\n   * - if sockets are FlowSockets, return true\n   * - Otherwise if the type of one socket is Types.ANY, return true\n   * - Otherwise if the two types are the same, return true\n   * - Otherwise return false\n   * @param {Socket} thisSocket The instance of socket of this node\n   * @param {Socket} otherSocket The other socket\n   */\n  canBeConnected(thisSocket, otherSocket) {\n    if (\n      thisSocket instanceof FlowSocket &&\n      !(otherSocket instanceof FlowSocket)\n    ) {\n      return false;\n    }\n    if (\n      otherSocket instanceof FlowSocket &&\n      !(thisSocket instanceof FlowSocket)\n    ) {\n      return false;\n    }\n    if (thisSocket instanceof FlowSocket || otherSocket instanceof FlowSocket) {\n      return true;\n    }\n    if (thisSocket.type === Types.ANY || otherSocket.type === Types.ANY) {\n      return true;\n    }\n    if (thisSocket.type === otherSocket.type) {\n      return true;\n    }\n    return false;\n  }\n\n  /** The base version of the node does nothing */\n  process() {\n    return new Result();\n  }\n}\n\n/**\n * The result class used by programs to receive\n * the next \"next\" in the flow\n */\nexport class Result {\n  /** The next node */\n  #next = null;\n\n  constructor(next = null) {\n    this.#next = next;\n  }\n  get next() {\n    return this.#next;\n  }\n  set next(val) {\n    this.#next = val;\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Enter } from \"./enter.js\";\nimport { Exit } from \"./exit.js\";\nimport { Node } from \"./node.js\";\nimport { InputSocket, NextSocket, OutputSocket, PrevSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * A program is a special node that contains nodes. The program\n * manages the flow of the global execution by starting from the\n * \"Enter\" default, autocreated node, call its process() method and receive the next\n * \"next\". A program also store a global variable space\n */\nexport class Program extends Node {\n  /** Engine version */\n  static version = 1;\n\n  /** The nodes in this program */\n  #nodes = [];\n\n  /** The Enter node */\n  #enter = null;\n\n  /** The Exit node */\n  #exit = null;\n\n  /** The instruction pointer equivalent :) */\n  #currentNode = null;\n\n  /** The variable global space */\n  #vars = new Map();\n\n  constructor() {\n    super(\"Program\");\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n\n    // Create default enter, exit nodes\n    this.addNode((this.#enter = new Enter())).addNode(\n      (this.#exit = new Exit())\n    );\n  }\n\n  get vars() {\n    return this.#vars;\n  }\n  set vars(val) {\n    this.#vars = val;\n  }\n  get enter() {\n    return this.#enter;\n  }\n  set enter(val) {\n    this.#enter = val;\n  }\n  get exit() {\n    return this.#exit;\n  }\n  set exit(val) {\n    this.#exit = val;\n  }\n  get currentNode() {\n    return this.#currentNode;\n  }\n  set currentNode(val) {\n    this.#currentNode = val;\n  }\n  get nodes() {\n    return this.#nodes;\n  }\n  set nodes(val) {\n    this.#nodes = val;\n  }\n\n  /**\n   * Add a new node to this program\n   * @param {Node} node The node to add\n   */\n  addNode(node) {\n    this.#nodes.push(node);\n\n    // Set this program to the node\n    node.program = this;\n    return this;\n  }\n\n  /**\n   * Removes a node from this program, disconnect all sockets\n   * @param {Node} node The node to remove\n   */\n  removeNode(node) {\n    // Disconnect its sockets\n    node.disconnectAllSockets();\n\n    this.#nodes = this.#nodes.filter((n) => n.id !== node.id);\n    node.program = null;\n    return this;\n  }\n\n  /**\n   * The process method will start from the Enter node and\n   * cycle over nexts returned by the process functions of nodes.\n   * The Program node couldn't be a top-level program, but a sub-nod\n   * of another program. For that reason, the process() method copy the\n   * value of the only input in the Program node to the only one\n   * input of the \"Enter\" forst node.\n   * This is a limitation: The Program node can be actually only 1 input\n   * and only 1 output. At the same, Enter and Exit nodes will have only\n   * 1 input and output respectively.\n   * At the end, the process() methos of the Program node, will copy the\n   * value of the Exit's output to the unique output of the Program node\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Copy input to enter's input\n    this.#enter.input(\"Val\").value = this.input(\"Val\").value;\n    this.#enter.input(\"Val\").type = this.input(\"Val\").type;\n\n    this.processFrom(this.#enter);\n\n    // Copy output to exit's output\n    this.output(\"Val\").value = this.#exit.output(\"Val\").value;\n    this.output(\"Val\").type = this.#exit.output(\"Val\").type;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n\n  /**\n   * Execute a program useng node as starting point\n   * @param {Node} node Starting point node\n   */\n  processFrom(node) {\n    this.currentNode = node;\n    while (this.currentNode !== null) {\n      let result = this.currentNode.process();\n      this.currentNode = result.next;\n    }\n  }\n}\n\n/**\n * A helper function to create the program\n * @param {string} name The name of the program\n */\nexport function program() {\n  return new Program();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Types } from \"./type.js\";\n\n/**\n * A socket is an object that represent an input,\n * output, next or prev for the node\n */\nexport class Socket {\n  /** An incremental index to generate unique socket IDs */\n  static lastSocketIdIndex = 0;\n\n  /** The internal id of the socket */\n  #id = \"\";\n\n  /** The name of this socket */\n  #name = \"\";\n\n  /** The parent node */\n  #node = null;\n\n  /**\n   * Construct a new socket on a node with a given name\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node of the socket\n   */\n  constructor(name, node) {\n    this.#id = \"SID_\" + Socket.lastSocketIdIndex++;\n\n    this.#name = name;\n    this.#node = node;\n  }\n  get id() {\n    return this.#id;\n  }\n  set id(val) {\n    this.#id = val;\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(val) {\n    this.#name = val;\n  }\n  get node() {\n    return this.#node;\n  }\n  set node(val) {\n    this.#node = val;\n  }\n}\n\n/**\n * The value socket represent a input or a output value\n * for the node, so it has a value and a type\n */\nexport class ValueSocket extends Socket {\n  /** The type for the socket's value */\n  #type = Types.NUMBER;\n\n  /** The stored value */\n  #value = 0;\n\n  /**\n   * Some input/output sockets needs to have a name that users can change.\n   * That's because the name of the socket is part of what the user can\n   * choose. Think for example at a node that can make a data structure,\n   * the user will want configure each field of the structure, in terms of\n   * data value and name. The node will have a single output with the structure\n   * as output. In this case the user can select a variable number of input\n   * sockets, and can configure values (or connection) for each input as well\n   * as the name of each socket, that whill be the name of the field in the structure.\n   * This type of socket should be represented as a text field in a UI library.\n   */\n  #canEditName = false;\n\n  /**\n   * Some input/output sockets needs to change their type.\n   * Nodes are responsible to configure this behavior of\n   * sockets during the construction\n   */\n  #canEditType = false;\n\n  /**\n   * Construct a new ValueSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of this socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node);\n    this.type = type;\n    this.value = value;\n  }\n\n  get type() {\n    return this.#type;\n  }\n  set type(val) {\n    this.#type = val;\n  }\n  get value() {\n    return this.#value;\n  }\n  set value(val) {\n    this.#value = val;\n  }\n  get canEditName() {\n    return this.#canEditName;\n  }\n  set canEditName(val) {\n    this.#canEditName = val;\n  }\n  get canEditType() {\n    return this.#canEditType;\n  }\n  set canEditType(val) {\n    this.#canEditType = val;\n  }\n\n  /**\n   * This method evaluates a socket in terms of the real value\n   * that is staying inside. The meaning is different in case of\n   * InputSocket and OutputSocket, that re-defines this method\n   */\n  evaluate() {\n    throw new Error(\"This method must be redefined in a subclass!\");\n  }\n}\n\n/**\n * This is an input socket value for the node, it\n * can have only a peer socket, because its value\n * have to be defined in a deterministic way\n */\nexport class InputSocket extends ValueSocket {\n  /** The only peer socket */\n  #peer = null;\n\n  /**\n   * Construct a new InputSocket\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of the socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node, type, value);\n  }\n  get peer() {\n    return this.#peer;\n  }\n  set peer(val) {\n    this.#peer = val;\n  }\n\n  /**\n   * Evaluate the socket value. If the socket is connected,\n   * this method goes to the peer socket and take the value.\n   * Else the current socket value remains unchanged\n   */\n  evaluate() {\n    if (this.peer !== null) {\n      this.peer.evaluate(); // OutputSocket\n      this.value = this.peer.value;\n    }\n  }\n\n  /**\n   * Connect this socket to another (output) socket\n   * @param {Socket} socket The output socket to connect\n   */\n  connect(socket) {\n    this.peer = socket;\n    if (socket.peers.find((s) => s === this) === undefined) {\n      socket.peers.push(this);\n    }\n  }\n\n  /**\n   * Disconnects this socket from its peer\n   */\n  disconnect() {\n    if (this.peer) {\n      let index = this.peer.peers.findIndex((s) => s === this);\n      if (index !== -1) {\n        this.peer.peers.splice(index, 1);\n      }\n    }\n    this.peer = null;\n  }\n}\n\n/**\n * This is a output value socket and represent an output\n * value for the node. Output value socket can be connected to\n * many peer input value sockets, because many socket would like\n * to take the value from this.\n */\nexport class OutputSocket extends ValueSocket {\n  /** A list of input value connected sockets */\n  #peers = [];\n\n  /**\n   * This flag indicates that the socket don't try to\n   * cal the process() method of its node upon the\n   * evaluation. Normally, functional nodes have output\n   * sockets not cached, so an evaluation of its values\n   * will result in a call of process() method\n   */\n  #cached = true;\n\n  /**\n   * Construct a new OutputSocket\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of the socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0, cached) {\n    super(name, node, type, value);\n\n    // default to true if the node is not functional and false\n    // if the node is functional\n    this.#cached = cached ?? !node.functional;\n  }\n  get peers() {\n    return this.#peers;\n  }\n  set peers(val) {\n    this.#peers = val;\n  }\n  get cached() {\n    return this.#cached;\n  }\n  set cached(val) {\n    this.#cached = val;\n  }\n\n  /**\n   * The evaluation of a OutputSocket depends from two factors:\n   * - The node of the socket is functional\n   * - The socket is market to be \"cached\"\n   *\n   * If the parent node is not functional, simply does nothing, because\n   * the value of this socket have to be unchanged from mthe last process\n   * call\n   * Otherwise, if the node is functional, we have to check if this particular\n   * socket is marked to be \"cached\", in that case, the value have to remain unchanged,\n   * otherwise the process() method have to be called again\n   */\n  evaluate() {\n    if (this.node?.functional && !this.cached) {\n      this.node.process();\n    }\n  }\n\n  /**\n   * Connects this socket to a input socket\n   * @param {Socket} socket Socket to connect to\n   */\n  connect(socket) {\n    if (this.peers.find((s) => s === socket) === undefined) {\n      this.peers.push(socket);\n    }\n    socket.peer = this;\n  }\n\n  /**\n   * Disconnect this socket from a specific input peer\n   * @param {Socket} socket The socket to disconnect\n   */\n  disconnect(socket) {\n    let index = this.peers.findIndex((s) => s === socket);\n    if (index !== undefined) {\n      this.peers.splice(index, 1);\n      socket.peer = null;\n    }\n  }\n}\n\n/**\n * A flow socket is a socket to connect two nodes in\n * terms of execution flow\n */\nexport class FlowSocket extends Socket {\n  /**\n   * Construct a new FlowSocket\n   * @param {sring} name Name of the socket\n   * @param {Node} node The parent node\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n}\n\n/**\n * This class representa a prev socket, a socket that\n * can be connected to other nexts sockets. The prev socket\n * cab have many peer (next) socket because the execution\n * can come from anywhere in the program\n */\nexport class PrevSocket extends FlowSocket {\n  /** List of (next) peer sockets */\n  #peers = [];\n\n  /**\n   * Construct a new PrevSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node Parent node\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n  get peers() {\n    return this.#peers;\n  }\n  set peers(val) {\n    this.#peers = val;\n  }\n\n  /**\n   * Connect this socket to a next socket\n   * @param {Socket} socket The next socket to connect\n   */\n  connect(socket) {\n    if (this.peers.find((s) => s === socket) === undefined) {\n      this.peers.push(socket);\n    }\n    socket.peer = this;\n  }\n\n  /**\n   * Disconnect this socket from a next socket\n   * @param {Socket} socket The next socket to disconnect\n   */\n  disconnect(socket) {\n    let index = this.peers.findIndex((s) => s === socket);\n    if (index !== undefined) {\n      this.peers.splice(index, 1);\n      socket.peer = null;\n    }\n  }\n}\n\n/**\n * This class represents a socket to redirect the flow\n * to another node via a node's prev socket. This socket can\n * be connected to only one (prev) socket, because the program\n * flow have to be well defined\n */\nexport class NextSocket extends FlowSocket {\n  /** The peer (prev) socket */\n  #peer = null;\n\n  /**\n   * Construct a new NextSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node The parent node of the socket\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n  get peer() {\n    return this.#peer;\n  }\n  set peer(val) {\n    this.#peer = val;\n  }\n\n  /**\n   * Connect this socket to another (prev) socket\n   * @param {Socket} socket The prev socket to connect to\n   */\n  connect(socket) {\n    this.peer = socket;\n    if (socket.peers.find((s) => s === this) === undefined) {\n      socket.peers.push(this);\n    }\n  }\n\n  /**\n   * Disconnect this socket from the peer\n   */\n  disconnect() {\n    if (this.peer) {\n      let index = this.peer.peers.findIndex((s) => s === this);\n      if (index !== -1) {\n        this.peer.peers.splice(index, 1);\n      }\n      this.peer = null;\n    }\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * Possible types for values\n */\nexport const Types = {\n  NUMBER: \"number\",\n  STRING: \"string\",\n  BOOLEAN: \"boolean\",\n  OBJECT: \"object\",\n  ARRAY: \"array\",\n  ANY: \"any\",\n};\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that map an array to another\n * by passing all items in sequence\n */\nexport class AMap extends Node {\n  constructor() {\n    super(\"AMap\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Mapped\", this, Types.ANY),\n    ];\n    this.outputs = [\n      new OutputSocket(\"Array\", this, Types.ARRAY, [], false),\n      new OutputSocket(\"Item\", this, Types.ANY, \"\", true), // cached\n      new OutputSocket(\"Index\", this, Types.NUMBER, 0, true), // cached\n    ];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.input(\"Array\").evaluate();\n    let arr = this.input(\"Array\").value;\n    let outArr = [...arr];\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      outArr = arr.map((val, index) => {\n        // Set the \"Index\" output\n        this.output(\"Index\").value = index;\n        // Set the \"Item\" output\n        this.output(\"Item\").value = val;\n\n        // If there's a node connected to the \"Item\" next socket...\n        if (\n          this.next(\"Do\").peer !== null &&\n          this.next(\"Do\").peer.node !== null\n        ) {\n          // Execute a sub program beginning on that node\n          this.program.processFrom(this.next(\"Do\").peer.node);\n        }\n\n        // Now evaluate the \"Mapped\" input\n        this.input(\"Mapped\").evaluate();\n        return this.input(\"Mapped\").value;\n      });\n    }\n\n    // Compute result\n    this.output(\"Array\").value = outArr;\n\n    if (!this.functional) {\n      // Set the \"Array\" output\n      return this.getFlowResult(this.next(\"Out\"));\n    }\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function amapNode() {\n  return new AMap();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that pushes a value\n * into an array\n */\nexport class APush extends Node {\n  constructor() {\n    super(\"APush\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Val\", this, Types.ANY),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY)];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n    let val = this.input(\"Val\").value;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      arr.push(val);\n      this.output(\"Val\").value = arr;\n    }\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function apushNode() {\n  return new APush();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that reduces an array to\n * a value\n */\nexport class AReduce extends Node {\n  constructor() {\n    super(\"AReduce\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Acc0\", this, Types.ANY),\n      new InputSocket(\"Acc\", this, Types.ANY),\n    ];\n    this.outputs = [\n      new OutputSocket(\"Val\", this, Types.ANY, \"\", false),\n      new OutputSocket(\"Item\", this, Types.ANY, false, true),\n      new OutputSocket(\"Acc\", this, Types.ANY, \"\", true),\n      new OutputSocket(\"Index\", this, Types.NUMBER, 0, true),\n    ];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.input(\"Array\").evaluate();\n    let arr = this.input(\"Array\").value;\n    let acc0 = this.input(\"Acc0\").value;\n    let reduced;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      reduced = arr.reduce((acc, val, index) => {\n        // Set the \"Index\" output\n        this.output(\"Index\").value = index;\n        // Set the \"Item\" output\n        this.output(\"Item\").value = val;\n        // Set the \"Acc\" output\n        this.output(\"Acc\").value = acc;\n\n        // If there's a node connected to the \"Item\" next socket...\n        if (\n          this.next(\"Do\").peer !== null &&\n          this.next(\"Do\").peer.node !== null\n        ) {\n          // Execute a sub program beginning on that node\n          this.program.processFrom(this.next(\"Do\").peer.node);\n        }\n\n        // Now evaluate the \"Acc\" input\n        this.input(\"Acc\").evaluate();\n        return this.input(\"Acc\").value;\n      }, acc0);\n    }\n\n    // Set the \"Array\" output\n    this.output(\"Val\").value = reduced;\n\n    if (!this.functional) {\n      // Set the \"Array\" output\n      return this.getFlowResult(this.next(\"Out\"));\n    }\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function areduceNode() {\n  return new AReduce();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an array\n * as a string constant by JSON.parse() the input string.\n */\nexport class FAConst extends Node {\n  constructor() {\n    super(\"FAConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.STRING, \"[0, 1, 2]\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ARRAY, [], false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to an array\n    try {\n      this.output(\"Val\").value = JSON.parse(this.input(\"Val\").value);\n      if (!Array.isArray(this.output(\"Val\").value)) {\n        throw new Error(\n          `The input value (${this.output(\"Val\").value}) is not an array`\n        );\n      }\n    } catch (error) {\n      // TODO: Manage error\n      console.log(error);\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function faconstNode() {\n  return new FAConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for pick\n * a single value from an array\n */\nexport class FAGet extends Node {\n  constructor() {\n    super(\"FAGet\");\n\n    // The node is pure functional\n    this.functional = true;\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY, 0),\n      new InputSocket(\"Index\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n    let index = parseInt(this.input(\"Index\").value, 10);\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      this.output(\"Val\").value = arr[index];\n    }\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fagetNode() {\n  return new FAGet();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for get\n * the length of an array\n */\nexport class FALength extends Node {\n  constructor() {\n    super(\"FALength\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [new InputSocket(\"Array\", this, Types.ARRAY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      this.output(\"Val\").value = arr.length;\n    }\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function falengthNode() {\n  return new FALength();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an array\n * from a list of inputs\n */\nexport class FAMake extends Node {\n  constructor() {\n    super(\"FAMake\");\n    this.canAddInput = true;\n    this.functional = true;\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.ANY, \"\"),\n      new InputSocket(\"1\", this, Types.ANY, \"\"),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ARRAY, [], false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = [];\n\n    arr.push(...this.inputs.map((i) => i.value));\n    this.output(\"Val\").value = arr;\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 1 input\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 0;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.ANY, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function famakeNode() {\n  return new FAMake();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { NextSocket } from \"../../core/socket.js\";\nimport { AMap } from \"./amap.js\";\n\n/**\n * This is the functional version of the FAMap node\n */\nexport class FAMap extends AMap {\n  constructor() {\n    super();\n    this.name = \"FAMap\";\n    this.title = \"FAMap\";\n    this.functional = true;\n    this.nexts = [new NextSocket(\"Do\", this)];\n    this.prev = null;\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function famapNode() {\n  return new FAMap();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { NextSocket } from \"../../core/socket.js\";\nimport { AReduce } from \"./areduce.js\";\n\n/**\n * This is the functional version of the FAReduce node\n */\nexport class FAReduce extends AReduce {\n  constructor() {\n    super();\n    this.name = \"FAReduce\";\n    this.title = \"FAReduce\";\n    this.functional = true;\n    this.nexts = [new NextSocket(\"Do\", this)];\n    this.prev = null;\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function fareduceNode() {\n  return new FAReduce();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * Supported comparision types\n */\nexport const Comparision = {\n  EQUAL: \"equal\",\n  GT: \"gt\",\n  GTE: \"gte\",\n  LT: \"lt\",\n  LTE: \"lte\",\n  NOT_EQUAL: \"not_equal\",\n};\n\n/**\n * This class implements a functional node for compairing numeric values.\n */\nexport class FCompare extends Node {\n  /** Configured comparision for this node */\n  #comparision = Comparision.EQUAL;\n\n  constructor(comparision = Comparision.EQUAL) {\n    super(\"FCompare\");\n    this.#comparision = comparision;\n\n    // The node is pure functional\n    this.functional = true;\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.ANY, 0),\n      new InputSocket(\"Val2\", this, Types.ANY, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.BOOLEAN, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  get comparision() {\n    return this.#comparision;\n  }\n  set comparision(val) {\n    this.#comparision = val;\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let val1 = this.input(\"Val1\").value;\n    let val2 = this.input(\"Val2\").value;\n\n    let ret;\n    switch (this.comparision) {\n      case Comparision.EQUAL: {\n        ret = val1 === val2;\n        break;\n      }\n      case Comparision.NOT_EQUAL: {\n        ret = val1 !== val2;\n        break;\n      }\n      case Comparision.GT: {\n        ret = val1 > val2;\n        break;\n      }\n      case Comparision.GTE: {\n        ret = val1 >= val2;\n        break;\n      }\n      case Comparision.LT: {\n        ret = val1 < val2;\n        break;\n      }\n      case Comparision.LTE: {\n        ret = val1 <= val2;\n        break;\n      }\n      default: {\n        throw \"Comparision type not valid\";\n      }\n    }\n\n    this.output(\"Val\").value = ret;\n  }\n\n  get comparision() {\n    return this.#comparision;\n  }\n  set comparision(val) {\n    this.#comparision = val;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fcompareNode() {\n  return new FCompare();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of EQUAL\n */\nexport class FEqual extends FCompare {\n  constructor() {\n    super(Comparision.EQUAL);\n    this.name = \"FEqual\";\n    this.title = \"==\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fequalNode() {\n  return new FEqual();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of GT\n */\nexport class FGT extends FCompare {\n  constructor() {\n    super(Comparision.GT);\n    this.name = \"FGT\";\n    this.title = \">\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fgtNode() {\n  return new FGT();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of GTE\n */\nexport class FGTE extends FCompare {\n  constructor() {\n    super(Comparision.GTE);\n    this.name = \"FGTE\";\n    this.title = \">=\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fgteNode() {\n  return new FGTE();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of FLT\n */\nexport class FLT extends FCompare {\n  constructor() {\n    super(Comparision.LT);\n    this.name = \"FLT\";\n    this.title = \"<\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fltNode() {\n  return new FLT();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of FLTE\n */\nexport class FLTE extends FCompare {\n  constructor() {\n    super(Comparision.LTE);\n    this.name = \"FLTE\";\n    this.title = \"<=\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function flteNode() {\n  return new FLTE();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of NOT_EQUAL\n */\nexport class FNotEqual extends FCompare {\n  constructor() {\n    super(Comparision.NOT_EQUAL);\n    this.name = \"FNotEqual\";\n    this.title = \"!=\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fnotequalNode() {\n  return new FNotEqual();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { NextSocket, PrevSocket } from \"../core/socket.js\";\n\n/**\n * This class implements a subroutine/function call\n */\nexport class Call extends Node {\n  constructor() {\n    super(\"Call\");\n    this.inputs = [];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Call\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n\n    // Execute a sub program beginning on that node\n    this.program.processFrom(this.next(\"Call\").peer.node);\n\n    // Restore the current program's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function callNode() {\n  return new Call();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, NextSocket, PrevSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a cnode that print to the\n * console the input value\n */\nexport class Console extends Node {\n  constructor() {\n    super(\"Console\");\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY)];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    console.log(this.input(\"Val\").value);\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function consoleNode() {\n  return new Console();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a functional GetVar node,\n * a node to read a variable's value from the global\n * program's space\n */\nexport class FGetvar extends Node {\n  constructor() {\n    super(\"FGetvar\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Name\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\", false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    this.output(\"Val\").value = this.program.vars.get(varName);\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function fgetvarNode() {\n  return new FGetvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a functional conditional node\n */\nexport class FIf extends Node {\n  constructor() {\n    super(\"FIf\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two any inputs\n    this.inputs = [\n      new InputSocket(\"Condition\", this, Types.BOOLEAN, false),\n      new InputSocket(\"True\", this, Types.ANY, 0),\n      new InputSocket(\"False\", this, Types.ANY, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Condition\").value\n      ? this.input(\"True\").value\n      : this.input(\"False\").value;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fifNode() {\n  return new FIf();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * iterate over a range of integers, like the form\n * for(let i=start; i<end; i++) do();\n */\nexport class For extends Node {\n  constructor() {\n    super(\"For\");\n    this.inputs = [\n      new InputSocket(\"From\", this, Types.NUMBER, 0),\n      new InputSocket(\"To\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Index\", this, Types.NUMBER, 0)];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n\n    // Set the \"Index\" output value to Index\n    this.output(\"Index\").value = parseInt(this.input(\"From\").value);\n\n    // Re evaluate inputs in case of Condition depends on Index output\n    this.evaluateInputs();\n\n    // Let's cycle from \"From\" to \"To\" values\n    for (\n      let index = parseInt(this.input(\"From\").value);\n      index < parseInt(this.input(\"To\").value);\n      index++\n    ) {\n      // Set the \"Index\" output value to Index\n      this.output(\"Index\").value = index;\n\n      // If there's a node connected to the \"Do\" next socket...\n      if (this.next(\"Do\").peer !== null && this.next(\"Do\").peer.node !== null) {\n        // Execute a sub program beginning on that node\n        this.program.processFrom(this.next(\"Do\").peer.node);\n      }\n    }\n\n    // Restore the current program's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function forNode() {\n  return new For();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node to get a variable's value\n * in the program's global space. This node has a functional\n * counterpart naamed FGetvar\n */\nexport class Getvar extends Node {\n  constructor() {\n    super(\"Getvar\");\n    this.inputs = [new InputSocket(\"Name\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    this.output(\"Val\").value = this.program.vars.get(varName);\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function getvarNode() {\n  return new Getvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket as NextSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * redirect the flow of execution based on the\n * \"condition\" input value\n */\nexport class If extends Node {\n  constructor() {\n    super(\"If\");\n    this.inputs = [new InputSocket(\"Condition\", this, Types.BOOLEAN, false)];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Then\", this), new NextSocket(\"Else\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let flow = null;\n    if (this.input(\"Condition\").value) {\n      flow = this.next(\"Then\");\n    } else {\n      flow = this.next(\"Else\");\n    }\n\n    return this.getFlowResult(flow);\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function ifNode() {\n  return new If();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for adding numeric values.\n * Supports a indefinite number of value inputs and one single output\n */\nexport class FAdd extends Node {\n  constructor() {\n    super(\"FAdd\");\n    // The node is pure functional\n    this.functional = true;\n\n    // This node has a variable number of inputs\n    this.canAddInput = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.NUMBER, 0),\n      new InputSocket(\"1\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    let sum = 0;\n    this.evaluateInputs();\n    for (let inp of this.inputs) {\n      sum += parseFloat(inp.value);\n    }\n    this.output(\"Val\").value = sum;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.NUMBER, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function faddNode() {\n  return new FAdd();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for divide numeric values.\n */\nexport class FDiv extends Node {\n  constructor() {\n    super(\"FDiv\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.NUMBER, 0),\n      new InputSocket(\"Val2\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value =\n      parseFloat(this.input(\"Val1\").value) /\n      parseFloat(this.input(\"Val2\").value);\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fdivNode() {\n  return new FDiv();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for modulus (%)\n */\nexport class FMod extends Node {\n  constructor() {\n    super(\"FMod\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.NUMBER, 0),\n      new InputSocket(\"Val2\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value =\n      parseFloat(this.input(\"Val1\").value) %\n      parseFloat(this.input(\"Val2\").value);\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fmodNode() {\n  return new FMod();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for multiply numeric values.\n * Supports a indefinite number of value inputs and one single output\n */\nexport class FMul extends Node {\n  constructor() {\n    super(\"FMul\");\n    // The node is pure functional\n    this.functional = true;\n\n    // This node has a variable number of inputs\n    this.canAddInput = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.NUMBER, 0),\n      new InputSocket(\"1\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    let mul = 1;\n    this.evaluateInputs();\n    for (let inp of this.inputs) {\n      mul *= parseFloat(inp.value);\n    }\n    this.output(\"Val\").value = mul;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.NUMBER, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fmulNode() {\n  return new FMul();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get return a simple\n * number constant. This is a functional node.\n */\nexport class FNConst extends Node {\n  constructor() {\n    super(\"FNConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = parseFloat(this.input(\"Val\").value);\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fnconstNode() {\n  return new FNConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for Square Root.\n */\nexport class FSqrt extends Node {\n  constructor() {\n    super(\"FSqrt\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to one numeric inputs\n    this.inputs = [new InputSocket(\"Val\", this, Types.NUMBER, 0)];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = Math.sqrt(parseFloat(this.input(\"Val\").value));\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fsqrtNode() {\n  return new FSqrt();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to break down\n * an object to its fields, or part of them\n */\nexport class FOBreak extends Node {\n  constructor() {\n    super(\"FOBreak\");\n    this.canAddOutput = true;\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.OBJECT, {})];\n\n    this.outputs = [\n      new OutputSocket(\"field1\", this, Types.ANY, \"\", false),\n      new OutputSocket(\"field2\", this, Types.ANY, \"\", false),\n    ];\n\n    // Sets all output as changeable in terms of name and type\n    for (let o of this.outputs) {\n      o.canEditName = true;\n      o.canEditType = true;\n    }\n\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    for (let o of this.outputs) {\n      o.value = this.input(\"Val\").value[o.name];\n    }\n  }\n\n  /**\n   * If this.#canAddOutput is true, the user can add an output\n   * equal to the (at least one) output that already exists\n   * Subclass with variable number of input should override this method\n   */\n  addOutput(o) {\n    if (this.canAddOutput) {\n      if (!o) {\n        o = new OutputSocket(\"\", this, Types.ANY, \"\");\n        o.canEditName = true;\n        o.canEditType = true;\n      }\n      this.outputs.push(o);\n    } else {\n      throw new Error(\"Can't add output!\");\n    }\n  }\n\n  /**\n   * This method removes a specific output from the node\n   * @param {OutputSocket} output The output to remove\n   */\n  removeOutput(output) {\n    if (this.canRemoveOutput(output)) {\n      this.outputs = this.outputs.filter((o) => o !== output);\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific output?\n   * There must be at least 1 output\n   * @param {OutputSocket} output The output to remove\n   */\n  canRemoveOutput(output) {\n    return this.outputs.length > 1;\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fobreakNode() {\n  return new FOBreak();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an object\n * from a list of fields\n */\nexport class FOMake extends Node {\n  constructor() {\n    super(\"FOMake\");\n    this.canAddInput = true;\n    this.functional = true;\n    this.inputs = [\n      new InputSocket(\"field1\", this, Types.ANY, \"\"),\n      new InputSocket(\"field2\", this, Types.ANY, \"\"),\n    ];\n\n    // Sets all input as changeable in terms of name\n    for (let i of this.inputs) {\n      i.canEditName = true;\n      i.canEditType = true;\n    }\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.OBJECT, {}, false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let obj = this.inputs.reduce((acc, val) => {\n      return { ...acc, [val.name]: val.value };\n    }, {});\n\n    this.output(\"Val\").value = obj;\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 1 input\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 0;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * the new input must have this.#canEditName === true.\n   * in this particular case the name is editable, so let the user\n   * to choose and left it blank\n   */\n  addInput() {\n    let is = new InputSocket(\"\", this, Types.ANY, \"\");\n    is.canEditName = true;\n    is.canEditType = true;\n    this.inputs.push(is);\n  }\n\n  /**\n   * This method removes a specific input from the node\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fomakeNode() {\n  return new FOMake();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node to set a variable\n * value in the program's global space. If the variable\n * don't exists, the processo function will create it\n */\nexport class Setvar extends Node {\n  constructor() {\n    super(\"Setvar\");\n    this.inputs = [\n      new InputSocket(\"Name\", this, Types.STRING, 0),\n      new InputSocket(\"Val\", this, Types.ANY, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process fmethod\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    let varVal = this.input(\"Val\").value;\n    this.program.vars.set(varName, varVal);\n    this.output(\"Val\").value = varVal;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function setvarNode() {\n  return new Setvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node that conctas two strings.\n * If other type are passed, these are converted to strings\n */\nexport class FConcat extends Node {\n  constructor() {\n    super(\"FConcat\");\n    this.functional = true;\n    this.canAddInput = true;\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.STRING, \"\"),\n      new InputSocket(\"1\", this, Types.STRING, \"\"),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.STRING, \"\", false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    let res = \"\";\n    for (let i of this.inputs) {\n      res += i.value.toString();\n    }\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = res;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.STRING, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fconcatNode() {\n  return new FConcat();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get return a simple\n * string constant. This is a functional node.\n */\nexport class FSConst extends Node {\n  constructor() {\n    super(\"FSConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.STRING, \"\", false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = this.input(\"Val\").value.toString();\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fsconstNode() {\n  return new FSConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * iterate until a condition become false, like\n * while(condition) do();\n */\nexport class While extends Node {\n  constructor() {\n    super(\"While\");\n    this.inputs = [\n      new InputSocket(\"Index\", this, Types.NUMBER, 0),\n      new InputSocket(\"Condition\", this, Types.BOOLEAN, false),\n    ];\n    this.outputs = [new OutputSocket(\"Index\", this, Types.NUMBER, 0)];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n    // A bouns index variable ;-)\n    let index = parseFloat(this.input(\"Index\").value);\n\n    // Set the \"Index\" output value to Index\n    this.output(\"Index\").value = index;\n\n    // Re evaluate inputs in case of Condition depends on Index output\n    this.evaluateInputs();\n\n    // Let's cycle while condition is true\n    while (this.input(\"Condition\").value) {\n      // If there's a node connected to the \"Do\" next socket...\n      if (this.next(\"Do\").peer !== null && this.next(\"Do\").peer.node !== null) {\n        // Set the \"Index\" output value to Index\n        this.output(\"Index\").value = index++;\n\n        // Execute a sub program beginning on that node\n        this.program.processFrom(this.next(\"Do\").peer.node);\n\n        // Re-compute the guard...\n        this.evaluateInputs();\n      }\n    }\n\n    // Restore the currentprogram's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function whileNode() {\n  return new While();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}
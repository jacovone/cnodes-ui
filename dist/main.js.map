{"version":3,"sources":["webpack://cnui/./src/canvas/canvas.js","webpack://cnui/./src/canvas/component.js","webpack://cnui/./src/canvas/connection.js","webpack://cnui/./src/canvas/menu.js","webpack://cnui/./src/canvas/position.js","webpack://cnui/./src/canvas/socket.js","webpack://cnui/./src/canvas/text.js","webpack://cnui/./src/components/cnode.js","webpack://cnui/./src/components/cnodescanvas.js","webpack://cnui/./src/components/cnodesconnection.js","webpack://cnui/./src/components/cnodesmenu.js","webpack://cnui/./src/components/cnodessocket.js","webpack://cnui/./src/components/cnodestitle.js","webpack://cnui/./src/components/input.js","webpack://cnui/./src/components/next.js","webpack://cnui/./src/components/nodes/cnodeprogram.js","webpack://cnui/./src/components/output.js","webpack://cnui/./src/components/prev.js","webpack://cnui/./src/components/theme.js","webpack://cnui/./src/connections/io_connection.js","webpack://cnui/./src/connections/prevnext_connection.js","webpack://cnui/./src/index.js","webpack://cnui/../cnodes/cnodes.js","webpack://cnui/../cnodes/lib/core/enter.js","webpack://cnui/../cnodes/lib/core/env.js","webpack://cnui/../cnodes/lib/core/exit.js","webpack://cnui/../cnodes/lib/core/node.js","webpack://cnui/../cnodes/lib/core/program.js","webpack://cnui/../cnodes/lib/core/socket.js","webpack://cnui/../cnodes/lib/core/type.js","webpack://cnui/../cnodes/lib/nodes/array/amap.js","webpack://cnui/../cnodes/lib/nodes/array/apush.js","webpack://cnui/../cnodes/lib/nodes/array/areduce.js","webpack://cnui/../cnodes/lib/nodes/array/faconst.js","webpack://cnui/../cnodes/lib/nodes/array/faget.js","webpack://cnui/../cnodes/lib/nodes/array/falength.js","webpack://cnui/../cnodes/lib/nodes/array/famake.js","webpack://cnui/../cnodes/lib/nodes/array/famap.js","webpack://cnui/../cnodes/lib/nodes/bool/fcompare.js","webpack://cnui/../cnodes/lib/nodes/bool/fequal.js","webpack://cnui/../cnodes/lib/nodes/bool/fgt.js","webpack://cnui/../cnodes/lib/nodes/bool/fgte.js","webpack://cnui/../cnodes/lib/nodes/bool/flt.js","webpack://cnui/../cnodes/lib/nodes/bool/flte.js","webpack://cnui/../cnodes/lib/nodes/bool/fnotequal.js","webpack://cnui/../cnodes/lib/nodes/call.js","webpack://cnui/../cnodes/lib/nodes/console.js","webpack://cnui/../cnodes/lib/nodes/fgetvar.js","webpack://cnui/../cnodes/lib/nodes/fif.js","webpack://cnui/../cnodes/lib/nodes/for.js","webpack://cnui/../cnodes/lib/nodes/getvar.js","webpack://cnui/../cnodes/lib/nodes/if.js","webpack://cnui/../cnodes/lib/nodes/math/fadd.js","webpack://cnui/../cnodes/lib/nodes/math/fdiv.js","webpack://cnui/../cnodes/lib/nodes/math/fmod.js","webpack://cnui/../cnodes/lib/nodes/math/fmul.js","webpack://cnui/../cnodes/lib/nodes/math/fnconst.js","webpack://cnui/../cnodes/lib/nodes/math/fsqrt.js","webpack://cnui/../cnodes/lib/nodes/object/fobreak.js","webpack://cnui/../cnodes/lib/nodes/object/fomake.js","webpack://cnui/../cnodes/lib/nodes/setvar.js","webpack://cnui/../cnodes/lib/nodes/string/fconcat.js","webpack://cnui/../cnodes/lib/nodes/string/fsconst.js","webpack://cnui/../cnodes/lib/nodes/while.js","webpack://cnui/webpack/bootstrap","webpack://cnui/webpack/runtime/define property getters","webpack://cnui/webpack/runtime/hasOwnProperty shorthand","webpack://cnui/webpack/runtime/make namespace object","webpack://cnui/webpack/startup"],"names":["Canvas","el","document","createElementNS","style","width","height","appendChild","Theme","self","window","addEventListener","e","cancelContextMenu","clientX","clientY","p","createSVGPoint","x","y","pSVG","matrixTransform","getScreenCTM","inverse","onlySockets","pointedEl","elementFromPoint","componentRef","SocketComponent","parentElement","connection","push","canvas","connectionEl","source","updateSVGElement","target","destroy","filter","c","removeChild","socket1","socket2","connections","findIndex","component","componentEl","components","s","getConnectionsFor","removeConnection","socket","length","removeComponent","removeAllConnections","removeAllComponents","items","Error","contextMenuComponent","val","setAttribute","clientWidth","clientHeight","clientToSvgPoint","zoomFactor","zoom","deltaY","newWidth","newHeight","newLeft","newTop","stopPropagation","button","setPointerCapture","pointerId","releasePointerCapture","movePoint","xDiff","yDiff","preventDefault","componentFromPosition","getCanvasContextMenuItems","getContextMenuItems","showContextMenu","Component","Position","createElement","moveable","pos","absPos","updateAllConnections","parent","svgEl","forEach","parentPos","add","Connection","MenuItem","text","callback","searchText","Menu","setup","addComponent","dragElement","onPointerDown","onPointerUp","onPointerMove","connectionsEl","hasSingleConnection","isConnected","connectionStarted","peerComponent","getSinglePeerComponent","con","connectingSocketComponent","connectionDone","connectionEndedOutOfSocket","pointedComponent","canAcceptPeerSocket","connectionMoving","invalid","sourcePoint","targetPoint","currentPeerSocketComponent","socketComp","TextComponent","innerHTML","textEl","CnodeComponent","node","__comp","program","addNode","updateSubcomponents","nodeEl","functional","signRadius","posY","CnodesTitleComponent","title","font","color","meta","titlePos","prev","nComp","PrevSocketComponent","nexts","next","NextSocketComponent","outputs","output","OutputSocketComponent","inputs","input","InputSocketComponent","canAddInput","addInput","canAddOutput","addOutput","comp","conn","removable","removeNode","leftSocketsHeight","rightSocketsHeight","CnodesCanvas","defsEl","process","console","log","Env","canPopProgram","popProgram","cat","nodeDef","n","name","creatable","category","getNodeUIInstance","menuCallback","CnodesMenu","show","removeAll","nodes","titleComp","peers","peer","alreadyConnected","PrevNextConnection","inp","IOConnection","outp","setTimeout","unshift","shift","importCnodesProgram","factory","set","constructor","get","Map","CnodesConnection","addConnection","connect","disconnect","type1","type2","Types","focus","createMenuItemsElements","menuEl","textInputElem","getAttribute","value","keyCode","filteredElements","getBoundingClientRect","left","top","itemResult","itemEl","itemTextEl","splice","maxWidth","entries","i","item","itemX","itemY","result","Math","max","getBBox","itemWidth","itemHeight","filterElems","idx","toUpperCase","includes","searchFilter","CnodesSocketComponent","getRegisteredPossiblePeers","tempConnectionEl","cpXDistance","abs","min","cp1","getSourcePointDirection","cp2","type","textInputNameElem","canEditName","textInputValueElem","inputElem","canBeConnected","removeAttribute","parseFloat","out","canRemoveInput","removeInput","canEditType","labelElem","prevElem","PrevSocket","CnodeProgramComponent","Program","pushProgram","textOutputNameElem","outputElem","conns","canRemoveOutput","removeOutput","NextSocket","defaultLight","getRelevantType","elId","getElementById","Enter","InputSocket","OutputSocket","evaluateInputs","getFlowResult","Node","enterNode","registerNode","callNode","consoleNode","fgetvarNode","forNode","getvarNode","ifNode","fifNode","setvarNode","whileNode","exitNode","fsconstNode","fconcatNode","fnconstNode","faddNode","fdivNode","fmodNode","fmulNode","fsqrtNode","fequalNode","fgtNode","fgteNode","fltNode","flteNode","fnotequalNode","apushNode","faconstNode","famakeNode","fagetNode","falengthNode","amapNode","famapNode","areduceNode","fomakeNode","fobreakNode","categoryMap","Array","from","values","element","keys","registrations","entry","reg","obj","opts","createMake","makeNode","FOMake","field","is","editableInputs","forceTypes","fillValues","Object","recursive","registerMaker","createBreak","breakNode","FOBreak","os","editableOutputs","registerBreaker","exp","id","version","lastNodeIndex","lastSocketIndex","Socket","enter","exit","nodeExp","undefined","map","cached","pushConnection","sourceNode","sourceSocket","targetNode","targetSocket","connectionExp","data","nodeData","getInstance","inpData","outpData","nextData","find","connectionData","o","Exit","Result","lastNodeIdIndex","evaluate","thisSocket","otherSocket","FlowSocket","disconnectAllSockets","processFrom","currentNode","lastSocketIdIndex","ValueSocket","NUMBER","index","STRING","BOOLEAN","OBJECT","ARRAY","ANY","AMap","arr","outArr","isArray","APush","AReduce","acc0","reduced","reduce","acc","FAConst","JSON","parse","error","FAGet","parseInt","FALength","FAMake","FAMap","Comparision","EQUAL","GT","GTE","LT","LTE","NOT_EQUAL","FCompare","comparision","val1","val2","ret","fcompareNode","FEqual","FGT","FGTE","FLT","FLTE","FNotEqual","Call","prevCurrentNode","Console","FGetvar","varName","vars","FIf","For","Getvar","If","flow","FAdd","sum","FDiv","FMod","FMul","mul","FNConst","FSqrt","sqrt","Setvar","varVal","FConcat","res","toString","FSConst","While"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"../components/theme\";\nimport { Component } from \"./component\";\nimport { Connection } from \"./connection\";\nimport { SocketComponent } from \"./socket\";\n\n/**\n * This is the main Canvas class. This class implement a general purpose canvas\n * that can manage nodes, components, sockets (a special subset of components) and connections\n * between sockets. The canvas is able to zoom and pan itself as well as to move\n * components. Components are organized in a hierarchical way, so that moving a component\n * will move all its subcomponents, including sockets. Sockets are (sub)components\n * that can be connected through connections to other sockets.\n * The class use SVG elements to render all elements.\n */\nexport class Canvas {\n  /** The main svg element */\n  #svgEl = null;\n\n  /** A group under the main svg element to store connections */\n  #connectionsEl = null;\n\n  /** The current SVG box view left coord */\n  #vbX = 0;\n\n  /** The current SVG box view top coord */\n  #vbY = 0;\n\n  /** The current SVG box view width */\n  #vbWidth = 100;\n\n  /** The current SVG box view height */\n  #vbHeight = 100;\n\n  /**\n   * Define the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  #minVBSize = 10;\n\n  /**\n   * Define the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  #maxVBSize = 50000;\n\n  /** The user is dragging the canvas backgorund? */\n  #dragging = false;\n\n  /** The point in which the drag was started */\n  #startDragPos;\n\n  /** The component for the contextual menu */\n  #contextMenuComponent = null;\n\n  /** The list of components in the canvas */\n  #components = [];\n\n  /** The list of connections between components in the canvas */\n  #connections = [];\n\n  /**\n   * The constructor of the Canvas object. Initializes the SVG element,\n   * set up all listeners to manage panning, zooming and selection.\n   * @param {HTMLElement} el The parent element in which create the SVG element\n   */\n  constructor(el) {\n    // Create the main SVG element\n    this.#svgEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n    this.#svgEl.style.width = \"100%\";\n    this.#svgEl.style.height = \"100%\";\n    el.appendChild(this.#svgEl);\n\n    // Background color\n    this.#svgEl.style[\"background-color\"] = Theme.current.CANVAS_BACKGROUND_COLOR;\n\n    // Now create a \"g\" element that will be the parent of all connections. This is\n    // important to guarantee that connections will be always behind components\n    this.#connectionsEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    this.#svgEl.appendChild(this.#connectionsEl);\n\n    this.#adaptSVGSize();\n\n    // Define all pointer events to manager pan and zoom\n    let self = this;\n    window.addEventListener(\"resize\", () => {\n      self.#adaptSVGSize();\n    });\n    this.#svgEl.addEventListener(\"wheel\", (e) => {\n      self.#onWheel(e);\n    });\n    this.#svgEl.addEventListener(\"pointerdown\", (e) => {\n      this.cancelContextMenu();\n      self.#onPointerDown(e);\n    });\n    this.#svgEl.addEventListener(\"pointerup\", (e) => {\n      self.#onPointerUp(e);\n    });\n    this.#svgEl.addEventListener(\"pointermove\", (e) => {\n      self.#onPointerMove(e);\n    });\n    this.#svgEl.addEventListener(\"contextmenu\", (e) => {\n      self.#onContextMenu(e);\n    });\n  }\n\n  /**\n   * Returns the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  get minVBSize() {\n    return this.#minVBSize;\n  }\n  /**\n   * Sets the minimum SVG View Box size, actually means\n   * the max level of zoom (in)\n   */\n  set minVBSize(val) {\n    this.#minVBSize = val;\n  }\n  /**\n   * Returns the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  get maxVBSize() {\n    return this.#maxVBSize;\n  }\n  /**\n   * Sets the minimum SVG View Box size, actually means\n   * the max level of zoom (out)\n   */\n  set maxVBSize(val) {\n    this.#maxVBSize = val;\n  }\n  get components() {\n    return this.#components;\n  }\n  set components(val) {\n    this.#components = val;\n  }\n  get connections() {\n    return this.#connections;\n  }\n  set connections(val) {\n    this.#connections = val;\n  }\n  get contextMenuComponent() {\n    return this.#contextMenuComponent;\n  }\n  set contextMenuComponent(val) {\n    this.#contextMenuComponent = val;\n  }\n\n  /**\n   * Return the internal SVG element\n   */\n  get svgEl() {\n    return this.#svgEl;\n  }\n\n  /**\n   * Return the internal SVG connections element\n   */\n  get connectionsEl() {\n    return this.#connectionsEl;\n  }\n\n  /**\n   * Updates the box view coordinates based on coordinates\n   * stored in private fields #vbX, #vbY, #vbWidth and #vbHeight\n   */\n  #updateSVGViewBox() {\n    this.#svgEl.setAttribute(\"viewBox\", `${this.#vbX} ${this.#vbY} ${this.#vbWidth} ${this.#vbHeight}`);\n  }\n\n  /**\n   * Adjust the view box of the svg element based of the container\n   * current size. It's called when a resize event is received\n   */\n  #adaptSVGSize() {\n    this.#vbWidth = this.#svgEl.parentElement.clientWidth;\n    this.#vbHeight = this.#svgEl.parentElement.clientHeight;\n    this.#updateSVGViewBox();\n  }\n\n  /**\n   * Manages the wheel event to imlement zooming\n   * @param {Event} e Wheel event\n   */\n  #onWheel(e) {\n    let p = this.clientToSvgPoint(e.clientX, e.clientY);\n\n    let zoomFactor = 0.003;\n    let zoom = 1 + e.deltaY * zoomFactor;\n\n    let newWidth = this.#vbWidth * zoom;\n    let newHeight = this.#vbHeight * zoom;\n\n    if (newHeight < this.#minVBSize) return;\n    if (newWidth < this.#minVBSize) return;\n    if (newHeight > this.#maxVBSize) return;\n    if (newWidth > this.#maxVBSize) return;\n\n    let newLeft = this.#vbX - (newWidth - this.#vbWidth) * ((p.x - this.#vbX) / this.#vbWidth);\n    let newTop = this.#vbY - (newHeight - this.#vbHeight) * ((p.y - this.#vbY) / this.#vbHeight);\n\n    this.#vbHeight = newHeight;\n    this.#vbWidth = newWidth;\n    this.#vbX = newLeft;\n    this.#vbY = newTop;\n\n    this.#updateSVGViewBox();\n    e.stopPropagation();\n  }\n\n  /**\n   * This method is responsible for translate client (browser) coordinates\n   * to SVG space coordinates\n   * @param {number} clientX The client x coordinate\n   * @param {number} clientY The client y coordinate\n   */\n  clientToSvgPoint(clientX, clientY) {\n    // Create a point in SVG space\n    let p = this.#svgEl.createSVGPoint();\n\n    p.x = clientX;\n    p.y = clientY;\n\n    // Translate coordinates using the SVG transofrmation matrix\n    let pSVG = p.matrixTransform(this.#svgEl.getScreenCTM().inverse());\n    return pSVG;\n  }\n\n  /**\n   * Manage the mousedown event to implement pan\n   * @param {Event} e The mousedown event\n   */\n  #onPointerDown(e) {\n    if (e.button === 0) {\n      this.#dragging = true;\n      this.#startDragPos = this.clientToSvgPoint(e.clientX, e.clientY);\n      this.#svgEl.setPointerCapture(e.pointerId);\n    }\n  }\n\n  /**\n   * Manages the mouseup event to implement pan\n   * @param {Event} e The mouseup event\n   */\n  #onPointerUp(e) {\n    if (e.button === 0) {\n      this.#dragging = false;\n      this.#svgEl.releasePointerCapture(e.pointerId);\n    }\n  }\n\n  /**\n   * Manages the mousemove event to implement pan\n   * @param {Event} e The mousemove event\n   */\n  #onPointerMove(e) {\n    if (!this.#dragging) {\n      return;\n    }\n    let movePoint = this.clientToSvgPoint(e.clientX, e.clientY);\n    let xDiff = movePoint.x - this.#startDragPos.x;\n    let yDiff = movePoint.y - this.#startDragPos.y;\n    this.#vbX -= xDiff;\n    this.#vbY -= yDiff;\n    this.#updateSVGViewBox();\n  }\n\n  /**\n   * Manages the contextmenu event to implement custom menu\n   * @param {Event} e The contextmenu event\n   */\n  #onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let component = this.componentFromPosition(e.clientX, e.clientY);\n    let p = this.clientToSvgPoint(e.clientX, e.clientY);\n\n    let items;\n    if (!component) {\n      items = this.getCanvasContextMenuItems();\n    } else {\n      items = component.getContextMenuItems();\n    }\n\n    this.showContextMenu(items, p.x, p.y);\n  }\n\n  /**\n   * This method detect a cnodes-ui component inside the canvas\n   * at specified location (x,y). Optionally the user can request\n   * only sockets component, this is useful when you want to search\n   * a possible connection peer during the link process\n   * @param {number} x The x coordinate in the canvas\n   * @param {number} y Te y coordinate in the canvas\n   * @param {boolean} onlySockets If true, this method search only for socket components\n   */\n  componentFromPosition(x, y, onlySockets = false) {\n    // Get the DOM element at x,y in client space\n    let pointedEl = document.elementFromPoint(x, y);\n\n    // Searching for an element with the property \"componentRef\". When cnodes-ui\n    // add a component, insert this property inside the SVG root element of the component\n    while (pointedEl) {\n      // Traverse the DOM tree\n      if (pointedEl.componentRef && (!onlySockets || pointedEl.componentRef instanceof SocketComponent)) {\n        return pointedEl.componentRef;\n      }\n      pointedEl = pointedEl.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * Add a new connection to the canvas, also add the related element to\n   * the main SVG group of connections\n   * @param {Connection} connection The connection to add\n   */\n  addConnection(connection) {\n    this.#connections.push(connection);\n    connection.canvas = this;\n    this.#connectionsEl.appendChild(connection.connectionEl);\n\n    // Update connected sockets\n    connection.source.updateSVGElement();\n    connection.target.updateSVGElement();\n  }\n\n  /**\n   * Remove a connection from the canvas, also remove the related SVG element\n   * @param {Connection} connection The connection to remove\n   */\n  removeConnection(connection) {\n    // Signal the connection that will be destroyed\n    connection.destroy();\n    this.#connections = this.#connections.filter((c) => c !== connection);\n    this.#connectionsEl.removeChild(connection.connectionEl);\n\n    // Update connected sockets\n    connection.source.updateSVGElement();\n    connection.target.updateSVGElement();\n  }\n\n  /**\n   * Checks if there is a connection between sockets already\n   * @param {SocketComponent} socket1 First socket component\n   * @param {SocketComponent} socket2 Second socket component\n   */\n  alreadyConnected(socket1, socket2) {\n    return (\n      this.connections.findIndex((c) => (c.source === socket1 && c.target === socket2) || (c.source === socket2 && c.target === socket1)) !== -1\n    );\n  }\n\n  /**\n   * Add a new component to the canvas\n   * @param {Component} component Component to add\n   */\n  addComponent(component) {\n    this.#components.push(component);\n    component.canvas = this;\n    this.#svgEl.appendChild(component.componentEl);\n  }\n\n  /**\n   * Remove a component from the canvas\n   * @param {Component} component Component to remove\n   */\n  removeComponent(component) {\n    // Remove related connections\n    for (let s of component.components) {\n      if (s instanceof SocketComponent) {\n        for (let c of this.getConnectionsFor(s)) {\n          this.removeConnection(c);\n        }\n      }\n    }\n\n    // Signal component that will be removed\n    component.destroy();\n\n    // Remove the component from the SVG space\n    this.components = this.#components.filter((c) => c !== component);\n    this.#svgEl.removeChild(component.componentEl);\n  }\n\n  /**\n   * Update all connections in terms of SVG properties. This is\n   * important because when components are moved, this ensures that\n   * connections will follow them\n   */\n  updateAllConnections() {\n    for (let connection of this.#connections) {\n      connection.updateSVGElement();\n    }\n  }\n\n  /**\n   * This method extract all connections in the canvas, that have\n   * the source or the target SocketComponent as endpoint\n   * @param {SocketComponent} socket The socket component for which search the connection\n   */\n  getConnectionsFor(socket) {\n    return this.#connections.filter((c) => c.source === socket || c.target === socket);\n  }\n\n  /**\n   * Removes all connections from the canvas\n   */\n  removeAllConnections() {\n    while (this.#connections.length > 0) {\n      this.removeConnection(this.#connections[0]);\n    }\n  }\n\n  /**\n   * Removes all components from the canvas\n   */\n  removeAllComponents() {\n    while (this.#components.length > 0) {\n      this.removeComponent(this.#components[0]);\n    }\n  }\n\n  /**\n   * Remoives all connections and all components from the canvas\n   */\n  removeAll() {\n    this.removeAllConnections();\n    this.removeAllComponents();\n  }\n\n  /**\n   * Return a list of MenuItem for the context menu\n   */\n  getCanvasContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * Shows the context menu retated to the component or the canvas\n   * @param {MenuItem[]} items Items that compose the menu\n   * @param {number} x The x coordinate for the menu\n   * @param {number} y The y coordinate for the menu\n   */\n  showContextMenu(items, x, y) {\n    throw new Error(\"You must override this method in a subclass!\");\n  }\n\n  /**\n   * Cancels the current open context menu, and closes it\n   */\n  cancelContextMenu() {\n    if (this.#contextMenuComponent) {\n      this.removeComponent(this.#contextMenuComponent);\n      this.contextMenuComponent = null;\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"./position\";\n\n/**\n * This class is the base class for all components in the cnodes-ui canvas.\n * The class is responsible for manage mobility of components. This is not\n * yet the class for the cnodes nodes, is more abstract so that the user can\n * derive from that to implement components that are not explicitly connected\n * to the cnodes library, such as decorators, comments, etc.\n * In general component can have subcomponents. Special examples of subcomponents are\n * sockets. The socket is a component that can be connected through connections,\n * in the canvas-ui class model.\n */\nexport class Component {\n  /** A reference to the enclosing canvas */\n  #canvas = null;\n\n  /** A reference to the SVG element that implement the component */\n  #componentEl = null;\n\n  /** The parent component if there is one */\n  #parent = null;\n\n  /** Is this component moveable? */\n  #moveable = true;\n\n  /** The position fo this component inside the canvas, in SVG coordinates */\n  #pos = new Position(0, 0);\n\n  /** The component is actually moving */\n  #moving = false;\n\n  /** A reference to the position of the component at the time hi starts moving */\n  #startMovePos = null;\n\n  /** The pointer position at the time in which the component starts moving */\n  #startMovePointerPos = null;\n\n  /** The list of eventual child components */\n  #components = [];\n\n  constructor() {}\n\n  /**\n   * Sets up the component. The component creation follow a specific flow.\n   * The user that creates the component have to call this method after, to\n   * initializes the internal SVG component and optionally installs pointer\n   * event listeners to manage moving.\n   */\n  setup() {\n    // Create the SVG element. A subclass must override this method\n    // to define the graphical aspect of the component\n    this.#componentEl = this.createElement();\n\n    let self = this;\n\n    // Register a reference of this component inside the HTML element\n    this.#componentEl.componentRef = this;\n\n    // Cancel context menu on any pointerdown event\n    this.#componentEl.addEventListener(\"pointerdown\", (e) => {\n      self.canvas.cancelContextMenu();\n    });\n\n    if (this.moveable) {\n      this.#componentEl.addEventListener(\"pointerdown\", (e) => {\n        self.#onPointerDown(e);\n      });\n      this.#componentEl.addEventListener(\"pointerup\", (e) => {\n        self.#onPointerUp(e);\n      });\n      this.#componentEl.addEventListener(\"pointermove\", (e) => {\n        self.#onPointerMove(e);\n      });\n    }\n  }\n\n  get pos() {\n    return this.#pos;\n  }\n  set pos(val) {\n    this.#pos = val;\n    this.updateSVGElement();\n  }\n  get canvas() {\n    return this.#canvas;\n  }\n  set canvas(val) {\n    this.#canvas = val;\n  }\n  get componentEl() {\n    return this.#componentEl;\n  }\n  get components() {\n    return this.#components;\n  }\n  set components(val) {\n    this.#components = val;\n  }\n\n  get svgEl() {\n    return this.#canvas.svgEl;\n  }\n\n  get moveable() {\n    return this.#moveable;\n  }\n  set moveable(val) {\n    this.#moveable = val;\n  }\n  get parent() {\n    return this.#parent;\n  }\n  set parent(val) {\n    this.#parent = val;\n  }\n\n  /**\n   * Manages the mousedown event to implement moving\n   * @param {Event} e The mousedown event\n   */\n  #onPointerDown(e) {\n    if (e.button === 0) {\n      if (this.#moveable) {\n        this.#moving = true;\n        this.#startMovePos = this.#canvas.clientToSvgPoint(e.clientX, e.clientY);\n        this.#startMovePointerPos = this.#canvas.svgEl.createSVGPoint();\n        this.#startMovePointerPos.x = this.#pos.x;\n        this.#startMovePointerPos.y = this.#pos.y;\n        this.#componentEl.setPointerCapture(e.pointerId);\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * Manages the mouseup event to implement pan\n   * @param {Event} e The mouseup event\n   */\n  #onPointerUp(e) {\n    if (this.#moveable && e.button === 0) {\n      this.#moving = false;\n      this.#componentEl.releasePointerCapture(e.pointerId);\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Manages the mousemove event to implement pan\n   * @param {Event} e The mousemove event\n   */\n  #onPointerMove(e) {\n    if (this.#moveable) {\n      if (!this.#moving) {\n        return;\n      }\n      let movePoint = this.#canvas.clientToSvgPoint(e.clientX, e.clientY);\n      let xDiff = movePoint.x - this.#startMovePos.x;\n      let yDiff = movePoint.y - this.#startMovePos.y;\n\n      // This effectively move the element\n      this.#pos.x = xDiff + this.#startMovePointerPos.x;\n      this.#pos.y = yDiff + this.#startMovePointerPos.y;\n      this.updateSVGElement();\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * This method must be overridden in a child concrete class.\n   * The setup() mthod calls this one during the creation process\n   */\n  createElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * Returns the absolute position of this component, in terms\n   * of canvas coordinates, by travering the child-parent component\n   * hierarchy\n   */\n  get absPos() {\n    let pos = new Position(this.#pos.x, this.#pos.y);\n    if (this.#parent) {\n      let parentPos = this.#parent.absPos;\n      pos = pos.add(parentPos);\n    }\n    return pos;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed\n   */\n  updateSVGElement() {\n    let pos = this.absPos;\n    this.#componentEl.setAttribute(\"transform\", `translate(${pos.x},${pos.y})`);\n\n    // Also update all children\n    for (let c of this.#components) {\n      c.updateSVGElement();\n    }\n\n    // Update all connections\n    if (this.canvas) {\n      this.canvas.updateAllConnections();\n    }\n  }\n\n  /**\n   * Add a new component as child component.\n   * WARNING: before attach child components, this component\n   * must to be attached to the canvas itself, otherwise the method\n   * fails\n   * @param {Component} component Component to add\n   */\n  addComponent(component) {\n    this.#components.push(component);\n    component.parent = this;\n    component.canvas = this.canvas;\n    this.svgEl.appendChild(component.componentEl);\n    component.updateSVGElement();\n  }\n\n  /**\n   * Remove a child subcomponent\n   * @param {Component} component The component to remove\n   */\n  removeComponent(component) {\n    this.components = this.#components.filter((c) => c !== component);\n    component.destroy();\n    this.svgEl.removeChild(component.componentEl);\n  }\n\n  /**\n   * This method is called when this component is removed\n   * from the canvas of from its parent component\n   */\n  destroy() {\n    // Removes all subcomponents\n    this.components.forEach((c) => this.removeComponent(c));\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * This is tha base class of all connections. A Connection is always a\n * link from two sockets. Sockets are special subclass of components, tipically\n * child of base components\n */\nexport class Connection {\n  /** A reference to the enclosing canvas */\n  #canvas = null;\n\n  /** A reference to the SVG element of this connection */\n  #connectionEl = null;\n\n  /** The source socket component for the link */\n  #source = null;\n\n  /** Yhe destination socket component for the link */\n  #target = null;\n\n  /**\n   * Construct a connection instance by setting its source and target\n   */\n  constructor(source, target) {\n    this.#source = source;\n    this.#target = target;\n    this.source.updateSVGElement();\n    this.target.updateSVGElement();\n  }\n\n  /**\n   * Sets up this connection. In terms of construction flow\n   * this means create the SVG element that will be shown\n   */\n  setup() {\n    this.#connectionEl = this.createElement();\n  }\n\n  get canvas() {\n    return this.#canvas;\n  }\n  set canvas(val) {\n    this.#canvas = val;\n  }\n  get source() {\n    return this.#source;\n  }\n  set source(val) {\n    this.#source = val;\n  }\n  get target() {\n    return this.#target;\n  }\n  set target(val) {\n    this.#target = val;\n  }\n  get connectionEl() {\n    return this.#connectionEl;\n  }\n  get svgEl() {\n    return this.#canvas.svgEl;\n  }\n\n  /**\n   * This method is responsible to create the SVG element\n   * for display the connetion. Subclasses must override this method\n   */\n  createElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * This method is called when the connetion needs to be updated.\n   * This happens when sockets and/or components connected to this\n   * object where moved\n   */\n  updateSVGElement() {\n    throw new Error(\"Element must be defined in a subclass!\");\n  }\n\n  /**\n   * This method is called when the connection is removed from the canvas\n   */\n  destroy() {}\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Canvas } from \"./canvas\";\nimport { Component } from \"./component\";\nimport { Position } from \"./position\";\n\n/**\n * This class represents a single Menu item.\n * A menu itemhas a text, and a callback to call on click\n */\nexport class MenuItem {\n  /** The \"click\" callback */\n  #callback = null;\n\n  /** The text for the item */\n  #text = \"\";\n\n  /** The text to consider during the search */\n  #searchText = \"\";\n\n  /**\n   * Constructs a menu item\n   * @param {string} text Title of the menu item\n   * @param {function} callback The callback function to call on click event\n   */\n  constructor(text, callback, searchText = text) {\n    this.#text = text;\n    this.#callback = callback;\n    this.#searchText = searchText;\n  }\n\n  get text() {\n    return this.#text;\n  }\n  set text(val) {\n    this.#text = val;\n  }\n  get callback() {\n    return this.#callback;\n  }\n  set callback(val) {\n    this.#callback = val;\n  }\n  get searchText() {\n    return this.#searchText;\n  }\n  set searchText(val) {\n    this.#searchText = val;\n  }\n}\n\n/**\n * This class implements a menu\n */\nexport class Menu extends Component {\n  /** Menu items */\n  #items = [];\n\n  /**\n   * Construct a new Menu for the canvas\n   * @param {Canvas} canvas The canvas\n   * @param {MenuItem[]} items The menu items\n   */\n  constructor(canvas, items) {\n    super();\n    this.moveable = false;\n    this.canvas = canvas;\n    this.#items = items;\n  }\n\n  get items() {\n    return this.#items;\n  }\n  set items(val) {\n    this.#items = val;\n  }\n\n  /**\n   * Show the menu\n   * @param {number} x The x coordinate\n   * @param {number} y The y coordinate\n   */\n  show(x, y) {\n    this.setup();\n\n    canvas.addComponent(this);\n    this.pos = new Position(x, y);\n  }\n\n  /**\n   * Set up the container\n   */\n  setup() {\n    super.setup();\n  }\n\n  /**\n   * Computes the menu vertical size, based on menu items\n   */\n  get height() {\n    throw new Error(\"A subclass must implement this method!\");\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    throw new Error(\"A subclass must implement this method!\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * A class that represents a position in SVG space\n */\nexport class Position {\n  /** The x coordinate */\n  #x = 0;\n\n  /** The y coordinate */\n  #y = 0;\n\n  /**\n   * Construct a new Position\n   * @param {number} x The x coordinate\n   * @param {number} y The y coordinate\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  get x() {\n    return this.#x;\n  }\n  set x(val) {\n    this.#x = val;\n  }\n  get y() {\n    return this.#y;\n  }\n  set y(val) {\n    this.#y = val;\n  }\n\n  /**\n   * Return a new position by adding another instance of\n   * position coordinate by coordinate\n   * @param {Position} pos\n   */\n  add(pos) {\n    return new Position(this.#x + pos.x, this.#y + pos.y);\n  }\n\n  /**\n   * Return a new position by subtracting another instance of\n   * position coordinate by coordinate\n   * @param {Position} pos\n   */\n  sub(pos) {\n    return new Position(this.#x - pos.x, this.#y - pos.y);\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"./component\";\nimport { Position } from \"./position\";\n\n/**\n * A Socket is a special case of component. Tipically, to design\n * a component node in canvas-ui, you define a base component, and attach\n * to it a list of subcomponents that derives from Socket class, for\n * give the user the chance to link nodes\n */\nexport class SocketComponent extends Component {\n  /** This socket is connecting, the user is dragging with the mouse */\n  #connecting = false;\n\n  /** The last (other) socket pointed by the mouse cursor while connecting */\n  #currentPeerSocketComponent = null;\n\n  /** This SVG component is used to display a temporary floating link during the connection */\n  #tempConnectionEl = null;\n\n  constructor() {\n    super();\n  }\n\n  get connecting() {\n    return this.#connecting;\n  }\n  set connecting(val) {\n    this.#connecting = val;\n  }\n  get currentPeerSocketComponent() {\n    return this.#currentPeerSocketComponent;\n  }\n  get tempConnectionEl() {\n    return this.#tempConnectionEl;\n  }\n  set tempConnectionEl(val) {\n    this.#tempConnectionEl = val;\n  }\n\n  /**\n   * Sets up a socket. A socket is not movable by default and\n   * calls the createElement() method to prepare the SVG element\n   */\n  setup() {\n    this.moveable = false;\n    super.setup();\n\n    // All sockets does not manage pointer events so events\n    // can pass through to the base componentEl element....\n    this.componentEl.style[\"pointer-events\"] = \"none\";\n    // ... but the dragEle element (that by default is the entire componentEl ;-)\n    this.dragElement.style[\"pointer-events\"] = \"auto\";\n\n    let self = this;\n\n    this.dragElement.addEventListener(\"pointerdown\", (e) => {\n      self.onPointerDown(e);\n    });\n    this.dragElement.addEventListener(\"pointerup\", (e) => {\n      self.onPointerUp(e);\n    });\n    this.dragElement.addEventListener(\"pointermove\", (e) => {\n      self.onPointerMove(e);\n    });\n  }\n\n  /**\n   * Returns the element that responds to pointer events. By\n   * default this is the entire root element\n   */\n  get dragElement() {\n    return this.componentEl;\n  }\n\n  /**\n   * Manages the pointerdown event to implement the start of the\n   * drag-and-link process. If the socket is a one-link socket, such as\n   * a \"next\" connection to another node, a pointerdown should disconnect\n   * the old connection and restart the dragging of the peek socket, to give\n   * the user the chance to connect the peer socket to another one.\n   * If the socket was not already connected, call the connectionStarted()\n   * method that will be overridden in subclasses\n   * @param {Event} e The pointerdown event\n   */\n  onPointerDown(e) {\n    if (e.button === 0) {\n      // Cancel previous context menu\n      if (this.#tempConnectionEl) {\n        this.canvas.cancelContextMenu();\n        this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n        this.#tempConnectionEl = null;\n      }\n\n      if (!this.hasSingleConnection || !this.isConnected) {\n        this.#connecting = true;\n        this.dragElement.setPointerCapture(e.pointerId);\n        e.stopPropagation();\n\n        // Connect action is started\n        this.connectionStarted();\n      } else {\n        let peerComponent = this.getSinglePeerComponent();\n        peerComponent.onPointerDown(e);\n\n        let con = this.canvas.getConnectionsFor(this)[0];\n        this.canvas.removeConnection(con);\n\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * This method manages the pointerup event to implement\n   * the final part of the connection. If the pointer is overing a\n   * valid peer socket, then the connection ca be done, and the\n   * connectionDone() method can be call. Otherwise the\n   * connectionEndedOutOfSocket() is called.\n   * @param {Event} e The pointerup event\n   */\n  onPointerUp(e) {\n    if (e.button === 0) {\n      this.#connecting = false;\n      this.dragElement.releasePointerCapture(e.pointerId);\n      e.stopPropagation();\n\n      if (this.#currentPeerSocketComponent) {\n        let connectingSocketComponent = this.#currentPeerSocketComponent;\n        this.#currentPeerSocketComponent = null;\n        this.connectionDone(connectingSocketComponent);\n      } else {\n        this.connectionEndedOutOfSocket(e);\n      }\n    }\n  }\n\n  /**\n   * This method manages the pointermove event to implement the\n   * middle part of the connection process. During this phase, cnodes-ui\n   * check if the pointer is overing a valid peer socket component, and\n   * if true, show the temprary link in a \"valid state\", such as a special color\n   * of the stroke stroke, and store the peer component in the currentPeerSocketComponent\n   * for future use.\n   * @param {Event} e The pointermove event\n   */\n  onPointerMove(e) {\n    if (this.#connecting) {\n      // Test if a socket is pointed\n      let pointedComponent = this.canvas.componentFromPosition(\n        e.clientX,\n        e.clientY,\n        true\n      );\n\n      let p = this.canvas.clientToSvgPoint(e.clientX, e.clientY);\n      if (pointedComponent) {\n        if (this.canAcceptPeerSocket(pointedComponent)) {\n          this.connectionMoving(p.x, p.y, false);\n          this.#currentPeerSocketComponent = pointedComponent;\n        } else {\n          this.connectionMoving(p.x, p.y, true);\n          this.#currentPeerSocketComponent = null;\n        }\n      } else {\n        this.connectionMoving(p.x, p.y, false);\n        this.#currentPeerSocketComponent = null;\n      }\n\n      e.stopPropagation();\n    }\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    return null;\n  }\n\n  /**\n   * The user has began dragging the socket to create a connection\n   */\n  connectionStarted() {\n    this.#tempConnectionEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${this.absPos.x} ${this.absPos.y}\n      `\n    );\n\n    this.canvas.connectionsEl.appendChild(this.#tempConnectionEl);\n  }\n\n  /**\n   * The user is moving the pointer around, with a connection pending\n   * @param {number} x The x coordinate in SVG space\n   * @param {number} y The y coordinate in SVG space\n   * @param {boolean} invalid true if the pointer is overing a unacceptable socket\n   */\n  connectionMoving(x, y, invalid) {\n    let sourcePoint = new Position(this.absPos.x, this.absPos.y);\n    let targetPoint = new Position(\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.x\n        : x,\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.y\n        : y\n    );\n\n    this.#tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      L ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.#tempConnectionEl.setAttribute(\"stroke-width\", 2);\n    this.#tempConnectionEl.setAttribute(\"stroke\", \"black\");\n    this.#tempConnectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    if (this.#tempConnectionEl) {\n      this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n    }\n    this.#tempConnectionEl = null;\n  }\n\n  /**\n   * The user has released the pointer button out of a valid socket,\n   * so by default, cancel the connection\n   * @param {Event} e The event pointerup\n   */\n  connectionEndedOutOfSocket(e) {\n    this.canvas.connectionsEl.removeChild(this.#tempConnectionEl);\n    this.#tempConnectionEl = null;\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    throw new Error(\"This method must be overridden in a subclass!\");\n  }\n\n  /**\n   * Return true if this socket only support one connection at most\n   */\n  get hasSingleConnection() {\n    throw new Error(\"This method must be overridden in a subclass!\");\n  }\n\n  /**\n   * Is this socket actually connected?\n   */\n  get isConnected() {\n    return this.canvas.getConnectionsFor(this).length > 0;\n  }\n\n  /**\n   * Return the peer component of the socket in case\n   * of this socket is a single connection. Otherwise return null\n   */\n  getSinglePeerComponent() {\n    if (!this.hasSingleConnection) {\n      return null;\n    } else {\n      let con = this.canvas.getConnectionsFor(this)[0];\n      if (this === con.source) {\n        return con.target;\n      } else {\n        return con.source;\n      }\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\nimport { Component } from \"./component\";\n\n/**\n * This is a sample component to draw a simple SVG Text\n */\nexport class TextComponent extends Component {\n  /** Font of the text component */\n  #font = \"24px sans-serif;\";\n\n  /** Content of the component */\n  #text = \"\";\n\n  /** Color of the text */\n  #color = \"black\";\n\n  constructor(text) {\n    super();\n    super.setup();\n    this.text = text;\n    this.componentEl.style = \"user-select: none; cursor: move\";\n    this.componentEl.setAttribute(\"fill\", this.#color);\n    this.componentEl.setAttribute(\"x\", \"0\");\n    this.componentEl.setAttribute(\"y\", \"0\");\n    this.componentEl.innerHTML = this.text;\n  }\n\n  get text() {\n    return this.#text;\n  }\n  set text(val) {\n    this.#text = val;\n    this.componentEl.innerHTML = this.#text;\n  }\n  get color() {\n    return this.#color;\n  }\n  set color(val) {\n    this.#color = val;\n    this.componentEl.setAttribute(\"fill\", this.#color);\n  }\n  get font() {\n    return this.#font;\n  }\n  set font(val) {\n    this.#font = val;\n    this.componentEl.style[\"font\"] = this.#font;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    let textEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    return textEl;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Component } from \"../canvas/component\";\nimport { Position } from \"../canvas/position\";\nimport { PrevSocketComponent } from \"./prev\";\nimport { NextSocketComponent } from \"./next\";\nimport { Theme } from \"./theme\";\nimport { OutputSocketComponent } from \"./output\";\nimport { InputSocketComponent } from \"./input\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { CnodesTitleComponent } from \"./cnodestitle\";\n\n/**\n * This is the main class for managing a single CNode\n * inside the cnodes-ui canvas. It embed a cnodes node instance\n */\nexport class CnodeComponent extends Component {\n  /** The cnodes nod instance */\n  #node;\n\n  /** An SVG element to draw the container of the node */\n  #containerEl;\n\n  /** An SVG element to draw the top-left symbol for the node */\n  #symbolEl;\n\n  /** An SVG element to draw the top-left sign for the node */\n  #signEl;\n\n  /** A subcomponent for title */\n  #titleComp = null;\n\n  constructor(node, canvas) {\n    super();\n    this.#node = node;\n\n    // write a back-reference\n    this.#node.__comp = this;\n\n    super.setup();\n    canvas.addComponent(this);\n\n    // If there is an active program, add this node to it\n    if (this.canvas.program) {\n      this.canvas.program.addNode(this.#node);\n    }\n\n    this.updateSubcomponents();\n  }\n\n  get node() {\n    return this.#node;\n  }\n  get titleComp() {\n    return this.#titleComp;\n  }\n\n  /**\n   * Computes the node vertical size, based on node\n   * characteristics in terms of number of input, output,\n   * and nexts. It takes account of the current theme\n   */\n  get height() {\n    let leftSocketsHeight = this.node.inputs.length;\n    if (\n      this.node.prev &&\n      this.node.nexts.length === 0 &&\n      this.node.outputs.length === 0\n    ) {\n      leftSocketsHeight++;\n    }\n    let rightSocketsHeight = this.node.outputs.length + this.node.nexts.length;\n\n    return (\n      Theme.current.NODE_BORDER_RADIUS * 0.5 +\n      20 + // padding\n      30 * (leftSocketsHeight + rightSocketsHeight) +\n      15 // Padding\n    );\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    let nodeEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    this.#containerEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n    this.#symbolEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n    this.#signEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#containerEl.setAttribute(\n      \"stroke\",\n      !this.node.functional\n        ? Theme.current.NODE_STROKE_COLOR\n        : Theme.current.NODE_FUNCTIONAL_STROKE_COLOR\n    );\n    this.#containerEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_STROKE_WIDTH\n    );\n    this.#containerEl.setAttribute(\n      \"fill\",\n      this.node.functional\n        ? Theme.current.NODE_FUNCTIONAL_FILL_COLOR\n        : Theme.current.NODE_FILL_COLOR\n    );\n    this.#containerEl.setAttribute(\"x\", \"0\");\n    this.#containerEl.setAttribute(\"y\", \"0\");\n\n    this.#symbolEl.setAttribute(\"cx\", 0);\n    this.#symbolEl.setAttribute(\"cy\", 0);\n    this.#symbolEl.setAttribute(\"r\", Theme.current.NODE_BORDER_RADIUS * 0.9);\n    this.#symbolEl.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_SYMBOL_STROKE_COLOR\n    );\n    this.#symbolEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_SYMBOL_STROKE_WIDTH\n    );\n    this.#symbolEl.setAttribute(\"fill\", Theme.current.NODE_SYMBOL_FILL_COLOR);\n\n    let signRadius = Theme.current.NODE_BORDER_RADIUS * 0.7;\n    this.#signEl.setAttribute(\n      \"d\",\n      !this.node.functional\n        ? `\n      M ${signRadius * 0.5} 0\n      L ${-signRadius * 0.3} ${-signRadius / 2}\n      L ${-signRadius * 0.3} ${signRadius / 2}\n      Z\n      `\n        : `\n      M ${signRadius * 0.6} 0\n      L ${-signRadius * 0.5} 0\n\n      M 0 ${-signRadius * 0.6}\n      L ${-signRadius * 0.5} 0\n      L 0 ${+signRadius * 0.6}\n      `\n    );\n    this.#signEl.setAttribute(\n      \"stroke\",\n      !this.node.functional\n        ? Theme.current.NODE_SIGN_COLOR\n        : Theme.current.NODE_FUNCTIONAL_SIGN_COLOR\n    );\n    this.#signEl.setAttribute(\"stroke-width\", !this.node.functional ? 1 : 3);\n    this.#signEl.setAttribute(\n      \"fill\",\n      !this.node.functional ? Theme.current.NODE_SIGN_COLOR : \"transparent\"\n    );\n    this.#signEl.setAttribute(\"stroke-linejoin\", \"null\");\n    this.#signEl.setAttribute(\"x\", \"0\");\n    this.#signEl.setAttribute(\"y\", \"0\");\n\n    nodeEl.setAttribute(\"x\", \"0\");\n    nodeEl.setAttribute(\"y\", \"0\");\n\n    nodeEl.appendChild(this.#containerEl);\n    nodeEl.appendChild(this.#symbolEl);\n    nodeEl.appendChild(this.#signEl);\n\n    return nodeEl;\n  }\n\n  /**\n   * This method construct and/or update all sub components. They are all sockets\n   * representing input, outputs, prev and nexts.\n   */\n  updateSubcomponents() {\n    let posY = 30 + 0.5 * Theme.current.NODE_BORDER_RADIUS;\n\n    // Title\n    if (!this.#titleComp) {\n      this.#titleComp = new CnodesTitleComponent(this.node.title);\n      this.#titleComp.font = Theme.current.NODE_TITLE_FONT;\n\n      this.#titleComp.color = this.node.functional\n        ? Theme.current.NODE_FUNCTIONAL_TITLE_COLOR\n        : Theme.current.NODE_TITLE_COLOR;\n      this.#titleComp.pos = this.node.meta?.titlePos\n        ? new Position(this.node.meta.titlePos.x, this.node.meta.titlePos.y)\n        : new Position(10 + Theme.current.NODE_BORDER_RADIUS, -8);\n      this.addComponent(this.#titleComp);\n    }\n\n    // Prev\n    if (this.node.prev) {\n      let nComp = this.node.prev.__comp;\n      if (!nComp) {\n        nComp = new PrevSocketComponent(this.node.prev);\n        this.addComponent(nComp);\n\n        // write a back_reference\n        this.node.prev.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(0, posY);\n    }\n\n    // Nexts\n    for (const next of this.node.nexts) {\n      let nComp = next.__comp;\n      if (!nComp) {\n        nComp = new NextSocketComponent(next);\n        this.addComponent(nComp);\n\n        // write a back-reference\n        next.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(Theme.current.NODE_WIDTH, posY);\n      posY += 30;\n    }\n\n    // Output\n    for (const output of this.node.outputs) {\n      let nComp = output.__comp;\n      if (!nComp) {\n        nComp = new OutputSocketComponent(output);\n        this.addComponent(nComp);\n\n        // write a back-reference\n        output.__comp = nComp;\n      }\n\n      // Update position\n      nComp.pos = new Position(Theme.current.NODE_WIDTH, posY);\n      posY += 30;\n    }\n\n    // Input\n    for (const input of this.node.inputs) {\n      let nComp = input.__comp;\n      if (!nComp) {\n        nComp = new InputSocketComponent(input);\n        this.addComponent(nComp);\n\n        // write a back-reference\n        input.__comp = nComp;\n      }\n\n      // Update status\n      nComp.updateSVGElement();\n      nComp.pos = new Position(0, posY);\n      posY += 30;\n    }\n  }\n\n  /**\n   * Intercept by overriding this method to update\n   * graphical cooordinates in the program structure\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#containerEl.setAttribute(\n      \"d\",\n      `\n      M 0 ${Theme.current.NODE_BORDER_RADIUS * 1.3} \n      A ${Theme.current.NODE_BORDER_RADIUS * 1.3} ${\n        Theme.current.NODE_BORDER_RADIUS * 1.3\n      } 0 0 0 ${Theme.current.NODE_BORDER_RADIUS * 1.3} 0 \n      L ${Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS} 0 \n      A ${Theme.current.NODE_BORDER_RADIUS} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } 0 0 1 ${Theme.current.NODE_WIDTH} ${Theme.current.NODE_BORDER_RADIUS} \n      L ${Theme.current.NODE_WIDTH} ${\n        this.height - Theme.current.NODE_BORDER_RADIUS\n      } \n      A ${Theme.current.NODE_BORDER_RADIUS} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } 0 0 1 ${Theme.current.NODE_WIDTH - Theme.current.NODE_BORDER_RADIUS} ${\n        this.height\n      } \n      L ${Theme.current.NODE_BORDER_RADIUS} ${this.height} \n      A ${Theme.current.NODE_BORDER_RADIUS} ${\n        Theme.current.NODE_BORDER_RADIUS\n      } 0 0 1 0 ${this.height - Theme.current.NODE_BORDER_RADIUS} \n      Z\n      `\n    );\n\n    this.updateSubcomponents();\n\n    // Update UI data in meta info\n    if (!this.#node.meta) {\n      this.node.meta = {};\n    }\n    this.#node.meta.pos = {\n      x: this.pos.x,\n      y: this.pos.y,\n    };\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    // The node can add inputs?\n    if (this.node.canAddInput) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Add input</tspan>`,\n          () => {\n            this.node.addInput();\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    // The node can add inputs?\n    if (this.node.canAddOutput) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Add output</tspan>`,\n          () => {\n            this.node.addOutput();\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    items.push(\n      new MenuItem(\n        `<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`,\n        () => {\n          for (let comp of this.components) {\n            if (comp instanceof SocketComponent && comp.isConnected) {\n              for (let conn of this.canvas.getConnectionsFor(comp)) {\n                this.canvas.removeConnection(conn);\n              }\n            }\n          }\n        }\n      )\n    );\n\n    // The node can be removed?\n    if (this.node.removable) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Delete</tspan>`,\n          () => {\n            this.canvas.removeComponent(this);\n          }\n        )\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Remove the internal node reference to the component\n   * upon destroy\n   */\n  destroy() {\n    this.node.__comp = null;\n\n    // If there is acrive program, remove the node from it\n    if (this.canvas.program) {\n      this.canvas.program.removeNode(this.node);\n    }\n\n    super.destroy();\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Program } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Node } from \"@marco.jacovone/cnodes/lib/core/node\";\nimport { Canvas } from \"../canvas/canvas\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { IOConnection } from \"../connections/io_connection\";\nimport { PrevNextConnection } from \"../connections/prevnext_connection\";\nimport { CnodeComponent } from \"./cnode\";\nimport { CnodesMenu } from \"./cnodesmenu\";\nimport { Theme } from \"./theme\";\n\n/**\n * This is the entry-point class for managing the canvas\n * relative to a cnodes program.\n */\nexport class CnodesCanvas extends Canvas {\n  /** The static registry of (cnodes NDOE) <--> (CnodeComponent) map */\n  static #nodesUIRegistry = new Map();\n\n  /** The edited program */\n  #program = null;\n\n  /** The stack of edited programs */\n  #stack = [];\n\n  constructor(el) {\n    super(el);\n\n    let defsEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n\n    defsEl.innerHTML = `\n      <filter xmlns=\"http://www.w3.org/2000/svg\" id=\"dropshadow\" height=\"130%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> \n        <feOffset dx=\"0\" dy=\"0\" result=\"offsetblur\"/> \n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.3\"/>\n        </feComponentTransfer>\n        <feMerge> \n          <feMergeNode/>\n          <feMergeNode in=\"SourceGraphic\"/> \n        </feMerge>\n      </filter>\n      <marker id=\"io-arrow-any\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_ANY_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-boolean\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_BOOLEAN_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-number\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_NUMBER_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-string\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_STRING_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-object\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_OBJECT_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"io-arrow-array\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.TYPE_ARRAY_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>\n      <marker id=\"prevnext-arrow\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\" fill=\"${Theme.current.CONNECTION_PREV_NEXT_COLOR}\" orient=\"auto-start-reverse\">\n        <path d=\"M 3 0 L 10 4 L 10 6 L 3 10 Z\">\n        </path>\n      </marker>      \n    `;\n\n    this.svgEl.appendChild(defsEl);\n  }\n\n  get program() {\n    return this.#program;\n  }\n\n  /**\n   * TODO\n   * @param {Node} node\n   * @param {Function} factory\n   */\n  static registerNodeUI(node, factory) {\n    CnodesCanvas.#nodesUIRegistry.set(node.constructor.name, factory);\n  }\n\n  /**\n   * TODO\n   * @param {Node} node\n   * @param {CnodesCanvas} canvas\n   */\n  static getNodeUIInstance(node, canvas) {\n    let factory = CnodesCanvas.#nodesUIRegistry.get(node.constructor.name);\n    if (factory) {\n      return factory(node, canvas);\n    } else {\n      return new CnodeComponent(node, canvas);\n    }\n  }\n\n  /**\n   * This setter is a trigger for the import procedure\n   */\n  set program(val) {\n    this.importCnodesProgram(val);\n    this.#program = val;\n  }\n\n  /**\n   * Executes the program\n   */\n  run() {\n    this.#program.process();\n  }\n\n  /**\n   * Dump the internal CNODES program to the console\n   */\n  dump() {\n    console.log(Env.export(this.#program));\n  }\n\n  /**\n   * Return a list of MenuItem for the context menu\n   */\n  getCanvasContextMenuItems() {\n    let items = [];\n\n    if (this.canPopProgram()) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n            Return to parent...\n          </tspan>\n          `,\n          () => {\n            this.popProgram();\n          }\n        )\n      );\n    }\n\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          items.push(\n            new MenuItem(\n              `\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                New\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                ${nodeDef.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                ${nodeDef.category}\n              </tspan>\n              `,\n              (x, y) => {\n                let node = CnodesCanvas.getNodeUIInstance(n, this);\n                node.pos = new Position(x, y);\n              }\n            )\n          );\n        }\n      }\n    }\n\n    if (items.length === 0) {\n      return null;\n    } else {\n      return items;\n    }\n  }\n\n  /**\n   * Cancels the current open context menu, and closes it.\n   * Override this to ensure cancel menu inform menu callback clients\n   */\n  cancelContextMenu() {\n    if (this.contextMenuComponent && this.contextMenuComponent.menuCallback) {\n      this.contextMenuComponent.menuCallback(null);\n      this.contextMenuComponent.menuCallback = null;\n    }\n    super.cancelContextMenu();\n  }\n\n  /**\n   * Shows the context menu retated to the component or to the canvas\n   * @param {MenuItem[]} items Items that compose the menu\n   * @param {number} x The x coordinate for the menu\n   * @param {number} y The y coordinate for the menu\n   * @param {Function} menuCallback If the client is interested to the user selection or cancel\n   */\n  showContextMenu(items, x, y, menuCallback) {\n    if (items) {\n      if (this.contextMenuComponent) {\n        this.cancelContextMenu();\n      }\n\n      this.contextMenuComponent = new CnodesMenu(this, items);\n      this.contextMenuComponent.menuCallback = menuCallback;\n      this.contextMenuComponent.show(x, y);\n    }\n  }\n\n  /**\n   * This method imports an entire cnodes program\n   * @param {Program} program Program to import\n   */\n  importCnodesProgram(program) {\n    // By temporary clearing the instance of the program, we inform\n    // components that all creation/destruction will not have effect\n    // on the program instance\n    this.#program = null;\n\n    this.removeAll();\n\n    // Import the program\n    for (let n of program.nodes) {\n      let comp = CnodesCanvas.getNodeUIInstance(n, this);\n      comp.moveable = true;\n\n      // Extract meta info\n      if (!n.meta) {\n        n.meta = {};\n      }\n      if (n.meta.pos) {\n        comp.pos = new Position(n.meta.pos.x, n.meta.pos.y);\n      } else {\n        comp.pos = new Position(100, 100);\n      }\n      if (n.meta.titlePos) {\n        comp.titleComp.pos = new Position(n.meta.titlePos.x, n.meta.titlePos.y);\n      }\n    }\n\n    // Setup connections\n    for (let n of program.nodes) {\n      // Setup prev\n      if (n.prev && n.prev.peers.length > 0) {\n        for (let peer of n.prev.peers) {\n          if (!this.alreadyConnected(peer.__comp, n.prev.__comp)) {\n            // Create connection component\n            new PrevNextConnection(peer.__comp, n.prev.__comp, this);\n          }\n        }\n      }\n      // Setup nexts\n      for (let next of n.nexts) {\n        if (next.peer) {\n          if (!this.alreadyConnected(next.peer.__comp, next.__comp)) {\n            // Create connection component\n            new PrevNextConnection(next.__comp, next.peer.__comp, this);\n          }\n        }\n      }\n      // Setup inputs\n      for (let inp of n.inputs) {\n        if (inp.peer) {\n          if (!this.alreadyConnected(inp.peer.__comp, inp.__comp)) {\n            // Create connection component\n            new IOConnection(inp.peer.__comp, inp.__comp, this);\n          }\n        }\n      }\n      // Setup outputs\n      for (let outp of n.outputs) {\n        if (outp.peers.length > 0) {\n          for (let peer of outp.peers) {\n            if (!this.alreadyConnected(outp.__comp, peer.__comp)) {\n              // Create connection component\n              new IOConnection(outp.__comp, peer.__comp, this);\n            }\n          }\n        }\n      }\n    }\n\n    // Restore the program instance\n    this.#program = program;\n  }\n\n  /**\n   * Push a subprogram on the canvas. The current program\n   * is pushed on to the stack and the new one is placed on the canvas\n   * @param {*} program The new program to edit\n   */\n  pushProgram(program) {\n    setTimeout(() => {\n      // Push this current program to the stack\n      this.#stack.unshift(this.program);\n\n      // Set the new Program\n      this.program = program;\n    });\n  }\n\n  /**\n   * Pops the last program and place it on the canvas. The actual\n   * program (that is a subprogram of the popped) is abandoned\n   */\n  popProgram() {\n    setTimeout(() => {\n      this.program = this.#stack.shift();\n    });\n  }\n\n  /**\n   * Can this canvas pop a program from the stack, that is:\n   * there is at least one program on the stack?\n   */\n  canPopProgram() {\n    return this.#stack.length > 0;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\nimport { Connection } from \"../canvas/connection\";\n\n/**\n * This class implements a connection for the cnodes system\n * It embed both source and target sockets\n */\nexport class CnodesConnection extends Connection {\n  constructor(source, target, canvas) {\n    super(source, target);\n    super.setup();\n    canvas.addConnection(this);\n    this.updateSVGElement();\n\n    if (canvas.program) {\n      // Connect cnodes sockets\n      this.source.socket.connect(this.target.socket);\n    }\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    let el = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    return el;\n  }\n\n  /**\n   * Diconnect the internal cnodes sockets\n   */\n  destroy() {\n    // If there is an active program, remove the connection\n    if (this.canvas.program) {\n      this.source.socket.disconnect(this.target.socket);\n    }\n    super.destroy();\n  }\n\n  /**\n   * Return a relevant type between two types passed as parameter\n   * @param {string} type1 CNODES source type\n   * @param {string} type2 CNODES target type\n   */\n  getRelevantType(type1, type2) {\n    if (type1 === Types.ANY) {\n      return type2;\n    } else if (type2 === Types.ANY) {\n      return type1;\n    } else {\n      return type1;\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Menu } from \"../canvas/menu\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\nimport { Theme } from \"./theme\";\n\n/**\n * This class implements a context menu for cnodes canvas\n */\nexport class CnodesMenu extends Menu {\n  /** The input element for the search */\n  #inputElement = null;\n\n  /** Container element around items*/\n  #containerEl = null;\n\n  /** Current search result items */\n  #itemsEls = [];\n\n  /** The search filter (value of the search input) */\n  #searchFilter = \"\";\n\n  /**\n   * The result of the selection of the user. If who request the menu is interested.\n   * Some components, like sockets, can open a context menu to select items, instead of\n   * the canvas. In such case, the originating component have to know the final\n   * result of the menu selection. In this case, tho variable contains a callback to\n   * the menu \"client\", and the menu, upon a user selection, calls this callback passing\n   * the result value of the context menu item callback, as parameter.\n   * Please see the class CnodesSocket component to check this behavior.\n   */\n  #menuCallback = null;\n\n  /**\n   * Construct a new Menu for the canvas\n   * @param {CnodesCanvas} canvas The canvas\n   * @param {MenuItem[]} items The menu items\n   */\n  constructor(canvas, items) {\n    super(canvas, items);\n  }\n\n  get searchFilter() {\n    return this.#searchFilter;\n  }\n  set searchFilter(val) {\n    this.#searchFilter = val;\n  }\n  get menuCallback() {\n    return this.#menuCallback;\n  }\n  set menuCallback(val) {\n    this.#menuCallback = val;\n  }\n\n  /** Returns the filtered items of the menu */\n  get filteredElements() {\n    let filterElems = this.items.filter((i, idx) =>\n      i.searchText.toUpperCase().includes(this.searchFilter.toUpperCase())\n    );\n    return filterElems.filter((i, idx) => idx <= 10);\n  }\n\n  /**\n   * Computes the menu vertical size, based on menu items\n   * filtered by search filter\n   */\n  get height() {\n    return (\n      Theme.current.MENU_BORDER_RADIUS * 2 + // Padding\n      30 + // Search input\n      Theme.current.MENU_ITEM_HEIGHT * this.filteredElements.length // Items\n    );\n  }\n\n  /**\n   * Shows the menu\n   * @param {*} x The x coordinate\n   * @param {*} y The y coordinate\n   */\n  show(x, y) {\n    super.show(x, y);\n    this.#inputElement.focus();\n    this.createMenuItemsElements();\n  }\n\n  /**\n   * Lets create the SVG element\n   */\n  createElement() {\n    let menuEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n    let textInputElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    textInputElem.style = `\n      font: ${Theme.current.MENU_SEARCH_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      text-align: left;\n      line-height: 30px;\n      user-select: none;\n      pointer-events: auto;\n    `;\n\n    textInputElem.setAttribute(\"x\", 0);\n    textInputElem.setAttribute(\"y\", 0);\n    textInputElem.setAttribute(\n      \"transform\",\n      `translate(${Theme.current.MENU_BORDER_RADIUS}, ${Theme.current.MENU_BORDER_RADIUS})`\n    );\n    textInputElem.setAttribute(\n      \"width\",\n      Theme.current.MENU_MIN_WIDTH - 2 * Theme.current.MENU_BORDER_RADIUS\n    );\n    textInputElem.setAttribute(\"height\", Theme.current.MENU_ITEM_HEIGHT);\n\n    this.#inputElement = document.createElement(\"input\");\n    this.#inputElement.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      width: ${\n        textInputElem.getAttribute(\"width\") - 10\n      }px; // 10px less than foreignObject\n      height: ${20}px;\n      border: 0;\n      padding: 2px;\n      margin: 2px;\n    `;\n    this.#inputElement.setAttribute(\"value\", \"\");\n    this.#inputElement.setAttribute(\"type\", \"text\");\n\n    let self = this;\n    this.#inputElement.addEventListener(\"input\", (e) => {\n      self.#searchFilter = this.#inputElement.value;\n      self.createMenuItemsElements();\n    });\n    this.#inputElement.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 27) {\n        self.canvas.cancelContextMenu();\n\n        // If there is client of the menu interested to user selection or abort\n        if (self.menuCallback) {\n          self.menuCallback(null);\n          self.menuCallback = null;\n        }\n        return;\n      }\n      if (e.keyCode === 13) {\n        if (self.filteredElements.length > 0) {\n          let menuEl = this.canvas.contextMenuComponent.componentEl.getBoundingClientRect();\n          let p = this.canvas.clientToSvgPoint(menuEl.left, menuEl.top);\n\n          // Items can return a result to inform the menu client about the item selection\n          let itemResult = self.filteredElements[0].callback(p.x, p.y);\n\n          // If there is client of the menu interested to user selection or abort\n          if (self.menuCallback) {\n            self.menuCallback(itemResult);\n            self.menuCallback = null;\n          }\n\n          self.canvas.cancelContextMenu();\n\n          return;\n        }\n      }\n    });\n\n    textInputElem.appendChild(this.#inputElement);\n\n    this.#containerEl = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#containerEl.setAttribute(\"fill\", Theme.current.MENU_FILL_COLOR);\n    this.#containerEl.setAttribute(\"stroke\", Theme.current.MENU_STROKE_COLOR);\n    this.#containerEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.MENU_STROKE_WIDTH\n    );\n    this.#containerEl.setAttribute(\"filter\", \"url(#dropshadow)\");\n\n    menuEl.appendChild(this.#containerEl);\n    menuEl.appendChild(textInputElem);\n\n    return menuEl;\n  }\n\n  /**\n   * Creates/Updates menu items based on the search input field, and\n   * adjust the size of the container element\n   */\n  createMenuItemsElements() {\n    while (this.#itemsEls.length > 0) {\n      this.componentEl.removeChild(this.#itemsEls[0].itemEl);\n      this.componentEl.removeChild(this.#itemsEls[0].itemTextEl);\n      this.#itemsEls.splice(0, 1);\n    }\n\n    let maxWidth = Theme.current.MENU_MIN_WIDTH;\n\n    // Create menu items\n    for (let [i, item] of this.filteredElements.entries()) {\n      let itemEl = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"rect\"\n      );\n      let itemTextEl = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"text\"\n      );\n\n      let itemX = Theme.current.MENU_BORDER_RADIUS;\n      let itemY =\n        Theme.current.MENU_BORDER_RADIUS +\n        Theme.current.MENU_ITEM_HEIGHT * (i + 1);\n\n      itemEl.setAttribute(\"x\", itemX);\n      itemEl.setAttribute(\"y\", itemY);\n\n      itemTextEl.setAttribute(\"x\", itemX + 5);\n      itemTextEl.setAttribute(\"y\", itemY + Theme.current.MENU_ITEM_HEIGHT / 2);\n      itemTextEl.setAttribute(\"style\", Theme.current.MENU_ITEM_FONT);\n      // itemTextEl.setAttribute(\"alignment-baseline\", \"middle\");\n      itemTextEl.style[\"pointer-events\"] = \"none\";\n      itemTextEl.style[\"user-select\"] = \"none\";\n      itemTextEl.innerHTML = item.text;\n\n      this.componentEl.appendChild(itemEl);\n      this.componentEl.appendChild(itemTextEl);\n\n      // Set event listeners\n      itemEl.addEventListener(\"pointerenter\", (e) => {\n        itemEl.setAttribute(\"fill\", Theme.current.MENU_ITEM_HIGHLIGHT);\n      });\n      itemEl.addEventListener(\"pointerleave\", (e) => {\n        itemEl.setAttribute(\"fill\", \"transparent\");\n      });\n      itemEl.addEventListener(\"pointerdown\", (e) => {\n        let menuEl = this.canvas.contextMenuComponent.componentEl.getBoundingClientRect();\n        let p = this.canvas.clientToSvgPoint(menuEl.left, menuEl.top);\n\n        let result = item.callback(p.x, p.y);\n\n        // If there is client of the menu interested to user selection or abort\n        if (this.menuCallback) {\n          this.menuCallback(result);\n          this.menuCallback = null;\n        }\n        this.canvas.cancelContextMenu();\n      });\n\n      // Compute text sizes\n      maxWidth = Math.max(\n        itemTextEl.getBBox().width + 10 + 2 * Theme.current.MENU_BORDER_RADIUS,\n        maxWidth\n      );\n\n      // register items\n      this.#itemsEls.push({ itemEl: itemEl, itemTextEl: itemTextEl });\n    }\n\n    // Now adjust geometry to size\n    for (let [i, item] of this.#itemsEls.entries()) {\n      let itemEl = item.itemEl;\n      let itemTextEl = item.itemTextEl;\n\n      let itemWidth = maxWidth - 2 * Theme.current.MENU_BORDER_RADIUS;\n      let itemHeight = Theme.current.MENU_ITEM_HEIGHT;\n\n      itemTextEl.setAttribute(\"width\", itemWidth - 10);\n      itemTextEl.setAttribute(\"height\", itemHeight - 10);\n\n      itemEl.setAttribute(\"width\", itemWidth);\n      itemEl.setAttribute(\"height\", itemHeight);\n      itemEl.setAttribute(\"style\", Theme.current.MENU_ITEM_FONT);\n      itemEl.setAttribute(\"stroke\", \"transparent\");\n      itemEl.setAttribute(\"stroke-width\", 0);\n      itemEl.setAttribute(\"fill\", \"transparent\");\n    }\n\n    // Update container geometry\n    this.#containerEl.setAttribute(\n      \"d\",\n      `\n      M 0 ${Theme.current.MENU_BORDER_RADIUS * 1.3} \n      A ${Theme.current.MENU_BORDER_RADIUS * 1.3} ${\n        Theme.current.MENU_BORDER_RADIUS * 1.3\n      } 0 0 1 ${Theme.current.MENU_BORDER_RADIUS * 1.3} 0 \n      L ${maxWidth - Theme.current.MENU_BORDER_RADIUS} 0 \n      A ${Theme.current.MENU_BORDER_RADIUS} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } 0 0 1 ${maxWidth} ${Theme.current.MENU_BORDER_RADIUS} \n      L ${maxWidth} ${this.height - Theme.current.MENU_BORDER_RADIUS} \n      A ${Theme.current.MENU_BORDER_RADIUS} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } 0 0 1 ${maxWidth - Theme.current.MENU_BORDER_RADIUS} ${this.height} \n      L ${Theme.current.MENU_BORDER_RADIUS} ${this.height} \n      A ${Theme.current.MENU_BORDER_RADIUS} ${\n        Theme.current.MENU_BORDER_RADIUS\n      } 0 0 1 0 ${this.height - Theme.current.MENU_BORDER_RADIUS} \n      Z\n      `\n    );\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Socket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\nimport { Position } from \"../canvas/position\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { Theme } from \"./theme\";\n\n/**\n * This class is the base class for all sockets components\n * of cnodes. The class introduces the socket field that is\n * a \"cnodes\" socket the internal structure to store links\n * between cnodes nodes. In addition implements the base functionality\n * of the \"smart\" connection flow, in case the user drag out\n * of a socket component and release the pointer outside of\n * a destination socket\n */\nexport class CnodesSocketComponent extends SocketComponent {\n  /** The cnodes socket object */\n  #socket = null;\n\n  /**\n   * Construct a new CnodesSocket object\n   * @param {Socket} socket The internal cnodes socket object\n   */\n  constructor(socket) {\n    super();\n    this.#socket = socket;\n  }\n\n  get socket() {\n    return this.#socket;\n  }\n\n  /**\n   * The user has released the pointer button out of a valid socket,\n   * display a context menu that presents all valid possible nodes\n   * and relative sockets to connect...\n   * Possible nodes items are returned by subclasses; this method display the\n   * context menu via canvas.showContextMenu(...) and specifying a menuCallback\n   * that inform this client about the final selection of the user, so\n   * complete the connection or abort that\n   * @param {Event} e The event pointerup\n   */\n  connectionEndedOutOfSocket(e) {\n    // Enumerates all possible socket to connect\n    let items = this.getRegisteredPossiblePeers();\n\n    let p = this.canvas.clientToSvgPoint(e.clientX, e.clientY);\n    this.canvas.showContextMenu(items, p.x, p.y, (socketComp) => {\n      if (!socketComp) {\n        if (this.tempConnectionEl) {\n          this.canvas.connectionsEl.removeChild(this.tempConnectionEl);\n        }\n        this.tempConnectionEl = null;\n      } else {\n        this.connectionDone(socketComp);\n      }\n    });\n  }\n\n  /**\n   * The user is moving the pointer around, with a connection pending\n   * @param {number} x The x coordinate in SVG space\n   * @param {number} y The y coordinate in SVG space\n   * @param {boolean} invalid true if the pointer is overing a unacceptable socket\n   */\n  connectionMoving(x, y, invalid) {\n    let sourcePoint = new Position(this.absPos.x, this.absPos.y);\n    let targetPoint = new Position(\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.x\n        : x,\n      this.currentPeerSocketComponent\n        ? this.currentPeerSocketComponent.absPos.y\n        : y\n    );\n\n    let cpXDistance = Math.max(\n      0.8 * Math.abs(sourcePoint.x - targetPoint.x),\n      Math.min(Math.abs(sourcePoint.y - targetPoint.y), 100)\n    );\n    let cp1 = sourcePoint.add(\n      new Position(\n        cpXDistance * this.getSourcePointDirection(),\n        -0.3 * (sourcePoint.y - targetPoint.y)\n      )\n    );\n    let cp2 = targetPoint.add(\n      new Position(\n        -cpXDistance * this.getSourcePointDirection(),\n        0.3 * (sourcePoint.y - targetPoint.y)\n      )\n    );\n\n    this.tempConnectionEl.setAttribute(\n      \"d\",\n      `\n      M ${this.absPos.x} ${this.absPos.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.tempConnectionEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.CONNECTION_TEMP_WIDTH\n    );\n    this.tempConnectionEl.setAttribute(\n      \"stroke\",\n      invalid\n        ? Theme.current.CONNECTION_TEMP_INVALID_COLOR\n        : this.currentPeerSocketComponent\n        ? Theme.current.CONNECTION_TEMP_VALID_COLOR\n        : Theme.current.CONNECTION_TEMP_COLOR\n    );\n    this.tempConnectionEl.setAttribute(\"stroke-dasharray\", \"5 5\");\n    this.tempConnectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n\n  /**\n   * Remove the internal socket reference to the component\n   * upon destroy\n   */\n  destroy() {\n    this.socket.__comp = null;\n    super.destroy();\n  }\n\n  /**\n   * Return a color code in CSS for a given cndoes data type\n   * @param {string} type CNODES data type\n   */\n  static getColorForType(type) {\n    switch (type) {\n      case Types.ARRAY:\n        return Theme.current.TYPE_ARRAY_COLOR;\n      case Types.NUMBER:\n        return Theme.current.TYPE_NUMBER_COLOR;\n      case Types.STRING:\n        return Theme.current.TYPE_STRING_COLOR;\n      case Types.OBJECT:\n        return Theme.current.TYPE_OBJECT_COLOR;\n      case Types.BOOLEAN:\n        return Theme.current.TYPE_BOOLEAN_COLOR;\n      case Types.ANY:\n        return Theme.current.TYPE_ANY_COLOR;\n      default:\n        return \"black\";\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\nimport { TextComponent } from \"../canvas/text\";\n\n/**\n * This is a sample component to draw a simple SVG Text\n */\nexport class CnodesTitleComponent extends TextComponent {\n  constructor(text) {\n    super(text);\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * This method was overridden in order to register meta info\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    // Update UI data in meta info\n    if (this.parent) {\n      if (!this.parent.node.meta) {\n        this.parent.node.meta = {};\n      }\n      this.parent.node.meta.titlePos = {\n        x: this.pos.x,\n        y: this.pos.y,\n      };\n    }\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"./theme\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { IOConnection } from \"../connections/io_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { OutputSocketComponent } from \"./output\";\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\n\n/**\n * This class implement a socket to draw a Input element\n * in the cnodes world\n */\nexport class InputSocketComponent extends CnodesSocketComponent {\n  /** A reference to the imput value element */\n  #inputValueElement = null;\n\n  /** A reference to the imput name element, if there is one */\n  #inputNameElement = null;\n\n  /** A reference to the label element, if there is one */\n  #labelElement = null;\n\n  /** The symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n\n    this.#socketSymbol.setAttribute(\"cx\", 0);\n    this.#socketSymbol.setAttribute(\"cy\", 0);\n    this.#socketSymbol.setAttribute(\"r\", Theme.current.NODE_IO_POINT_RADIUS);\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_IO_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_IO_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n\n    let textInputNameElem = null;\n\n    /*\n     * If this socket can edit name, we create an input element for\n     * this name, otherwise, we create a label\n     */\n    if (this.socket.canEditName) {\n      textInputNameElem = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      textInputNameElem.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        line-height: 30px;\n        user-select: none;\n        pointer-events: auto;\n      `;\n\n      textInputNameElem.setAttribute(\"x\", 0);\n      textInputNameElem.setAttribute(\"y\", 0);\n      textInputNameElem.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n      textInputNameElem.setAttribute(\n        \"width\",\n        Theme.current.NODE_WIDTH / 2 - 15\n      );\n      textInputNameElem.setAttribute(\"height\", 30);\n\n      this.#inputNameElement = document.createElement(\"input\");\n      this.#inputNameElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        width: ${\n          Theme.current.NODE_WIDTH / 2 - 25\n        }px; // 5px less than foreignObject\n        height: ${20}px;\n        border: 0;\n        padding: 2px;\n        margin: 2px;\n      `;\n\n      this.#inputNameElement.addEventListener(\"keyup\", (e) => {\n        this.socket.name = e.target.value;\n      });\n\n      /** Prevent descendants management of the click (pan) and allow selection */\n      this.#inputNameElement.addEventListener(\"pointerdown\", (e) => {\n        e.stopPropagation();\n      });\n\n      this.#inputNameElement.setAttribute(\"value\", this.socket.name);\n      this.#inputNameElement.setAttribute(\"type\", \"text\");\n\n      textInputNameElem.appendChild(this.#inputNameElement);\n    } else {\n      this.#labelElement = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      this.#labelElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n        height: 30px;\n        line-height: 30px;\n        user-select: none;\n      `;\n\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n\n      this.#labelElement.setAttribute(\"x\", 0);\n      this.#labelElement.setAttribute(\"y\", 0);\n      this.#labelElement.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n      this.#labelElement.setAttribute(\n        \"width\",\n        Theme.current.NODE_WIDTH / 2 - 15\n      );\n      this.#labelElement.setAttribute(\"height\", 30);\n    }\n\n    let textInputValueElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    textInputValueElem.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      text-align: left;\n      line-height: 30px;\n      user-select: none;\n      pointer-events: auto;\n    `;\n\n    textInputValueElem.setAttribute(\"x\", 0);\n    textInputValueElem.setAttribute(\"y\", 0);\n    textInputValueElem.setAttribute(\n      \"transform\",\n      `translate(${Theme.current.NODE_WIDTH / 2}, ${-15})`\n    );\n    textInputValueElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    textInputValueElem.setAttribute(\"height\", 30);\n\n    this.#inputValueElement = document.createElement(\"input\");\n    this.#inputValueElement.style = `\n      font: ${Theme.current.NODE_IO_NAME_FONT}; \n      color: ${Theme.current.NODE_IO_NAME_COLOR}; \n      width: ${\n        Theme.current.NODE_WIDTH / 2 - 25\n      }px; // 5px less than foreignObject\n      height: ${20}px;\n      border: 0;\n      padding: 2px;\n      margin: 2px;\n    `;\n\n    /** Register value modifications */\n    this.#inputValueElement.addEventListener(\"keyup\", (e) => {\n      this.socket.value = e.target.value;\n    });\n\n    /** Prevent descendants management of the click (pan) and allow selection */\n    this.#inputValueElement.addEventListener(\"pointerdown\", (e) => {\n      e.stopPropagation();\n    });\n\n    this.#inputValueElement.setAttribute(\"value\", this.socket.value);\n    this.#inputValueElement.setAttribute(\"type\", \"text\");\n\n    textInputValueElem.appendChild(this.#inputValueElement);\n\n    let inputElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    inputElem.setAttribute(\"x\", 0);\n    inputElem.setAttribute(\"y\", 0);\n    inputElem.appendChild(this.#socketSymbol);\n\n    if (this.socket.canEditName) {\n      inputElem.appendChild(textInputNameElem);\n    } else {\n      inputElem.appendChild(this.#labelElement);\n    }\n\n    inputElem.appendChild(textInputValueElem);\n\n    return inputElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // This creates the connection and connects sockets\n    new IOConnection(socketComp, this, this.canvas);\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return (\n      socketComp instanceof OutputSocketComponent &&\n      this.socket.node.canBeConnected(this.socket, socketComp.socket)\n    );\n  }\n\n  /**\n   * This socket supports single connection, so if the user\n   * connects another socket to it, we have to delete previous connections\n   */\n  get hasSingleConnection() {\n    return true;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return -1;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed. In addition, this override will reflect the status of the\n   * socket by hiding/showing the text field related to the input socket\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n\n    // Show/Hide the imput component\n    this.#inputValueElement.style[\"display\"] = this.isConnected\n      ? \"none\"\n      : \"table-cell\";\n\n    if (this.socket.canEditName) {\n      this.#inputNameElement.value = `${this.socket.name}`;\n    } else {\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n    }\n\n    // Only boolean, strings, anys and numbers can be modidied via the\n    // input textbox\n    if (\n      this.socket.type === Types.ANY ||\n      this.socket.type === Types.BOOLEAN ||\n      this.socket.type === Types.STRING ||\n      this.socket.type === Types.NUMBER\n    ) {\n      this.#inputValueElement.removeAttribute(\"disabled\");\n\n      // Now update the internal socket value according to the\n      // text input box by parsing the text\n      switch (this.socket.type) {\n        case Types.NUMBER:\n          this.socket.value = parseFloat(this.#inputValueElement.value);\n          break;\n        case Types.STRING:\n          this.socket.value = this.#inputValueElement.value;\n          break;\n        case Types.ANY:\n          this.socket.value = this.#inputValueElement.value;\n          break;\n        case Types.BOOLEAN:\n          this.socket.value =\n            this.#inputValueElement.value === \"true\" ? true : false;\n          break;\n      }\n    } else {\n      this.#inputValueElement.setAttribute(\"disabled\", \"1\");\n    }\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let out of n.outputs) {\n            // Create an item only if the input in \"compatible\" with this output\n            if (this.socket.node.canBeConnected(this.socket, out)) {\n              items.push(\n                new MenuItem(\n                  `\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                    ${nodeDef.name}.\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" fill=\"${CnodesSocketComponent.getColorForType(\n                    out.type\n                  )}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                    ${out.name}\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_CATEGORY_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                    ${nodeDef.category}\n                  </tspan>\n                  `,\n                  (x, y) => {\n                    // create the node and return the specific socket component to\n                    // the context menu client\n                    let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                    node.pos = new Position(x, y);\n                    // Return the connected component instead\n                    return out.__comp;\n                  },\n                  `${nodeDef.name}.${out.name} ${nodeDef.category}`\n                )\n              );\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conn = this.canvas.getConnectionsFor(this)[0];\n    if (conn) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect</tspan>`,\n          () => {\n            // Disconnect this socket\n            this.canvas.removeConnection(conn);\n            this.socket.disconnect();\n          }\n        )\n      );\n    }\n    if (this.socket.node.canRemoveInput(this.socket)) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Delete input</tspan>`,\n          () => {\n            // First, disconnect if connected\n            let conn = this.canvas.getConnectionsFor(this)[0];\n            if (conn) {\n              this.canvas.removeConnection(conn);\n              this.socket.disconnect();\n            }\n            this.socket.node.removeInput(this.socket);\n            this.parent.removeComponent(this);\n            this.parent.updateSVGElement();\n          }\n        )\n      );\n    }\n    if (this.socket.canEditType) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_NUMBER_COLOR}\">NUMBER</tspan>\n          `,\n          () => {\n            this.socket.type = Types.NUMBER;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_STRING_COLOR}\">STRING</tspan>\n          `,\n          () => {\n            this.socket.type = Types.STRING;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_BOOLEAN_COLOR}\">BOOLEAN</tspan>\n          `,\n          () => {\n            this.socket.type = Types.BOOLEAN;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_ARRAY_COLOR}\">ARRAY</tspan>\n          `,\n          () => {\n            this.socket.type = Types.ARRAY;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_OBJECT_COLOR}\">OBJECT</tspan>\n          `,\n          () => {\n            this.socket.type = Types.OBJECT;\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { PrevSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Theme } from \"./theme\";\nimport { Position } from \"../canvas/position\";\nimport { PrevNextConnection } from \"../connections/prevnext_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { SocketComponent } from \"../canvas/socket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\n\n/**\n * This class implements a socket representing the Next socket in the\n * cnodes context\n */\nexport class NextSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#socketSymbol.setAttribute(\n      \"d\",\n      `\n      M ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      L ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      Z\n      `\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_PREV_NEXT_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_PREV_NEXT_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      Theme.current.NODE_PREV_NEXT_FILL_COLOR\n    );\n\n    let labelElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    labelElem.style = `\n      font: ${Theme.current.NODE_PREV_NEXT_NAME_FONT}; \n      color: ${Theme.current.NODE_PREV_NEXT_NAME_COLOR}; \n      text-align: right;\n      width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n      height: 30px;\n      line-height: 30px;\n      user-select: none;\n      `;\n\n    labelElem.innerHTML = `${this.socket.name}`;\n\n    labelElem.setAttribute(\"x\", 0);\n    labelElem.setAttribute(\"y\", 0);\n    labelElem.setAttribute(\n      \"transform\",\n      `translate(${-Theme.current.NODE_WIDTH / 2}, ${-15})`\n    );\n    labelElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    labelElem.setAttribute(\"height\", 30);\n\n    let prevElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    prevElem.setAttribute(\"x\", 0);\n    prevElem.setAttribute(\"y\", 0);\n    prevElem.appendChild(this.#socketSymbol);\n    prevElem.appendChild(labelElem);\n\n    return prevElem;\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof PrevSocket;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // This creates the connection and connects sockets\n    new PrevNextConnection(this, socketComp, this.canvas);\n  }\n\n  /**\n   * Quesry if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof PrevSocket;\n  }\n\n  /**\n   * This socket supports single connection, so if the user\n   * connects another socket to it, we have to delete previous connections\n   */\n  get hasSingleConnection() {\n    return true;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return 1;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable && n.prev) {\n          items.push(\n            new MenuItem(\n              `\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n              ${nodeDef.name}.\n              </tspan>\n              <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_PREV_NEXT_FILL_COLOR}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                ${n.prev.name}\n              </tspan>\n              <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n              ${nodeDef.category}\n              </tspan>\n              `,\n              (x, y) => {\n                // create the node and return the specific socket component to\n                // the context menu client\n                let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                node.pos = new Position(x, y);\n                // Return the connected component instead\n                return n.prev.__comp;\n              },\n              `${nodeDef.name}.${n.prev.name} ${nodeDef.category}`\n            )\n          );\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conn = this.canvas.getConnectionsFor(this)[0];\n    if (conn) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect</tspan>`,\n          () => {\n            // Disconnect this socket\n            this.canvas.removeConnection(conn);\n            this.socket.disconnect();\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Program } from \"@marco.jacovone/cnodes/lib/core/program\";\nimport { MenuItem } from \"../../canvas/menu\";\nimport { CnodeComponent } from \"../cnode\";\n\nexport class CnodeProgramComponent extends CnodeComponent {\n  // Factory function\n  static instance = (node, canvas) => new CnodeProgramComponent(node, canvas);\n\n  constructor(node, canvas) {\n    super(node, canvas);\n  }\n\n  /**\n   * Returns the array of context menu items. This node gets\n   * the base node items, and add the action of edit internal program\n   */\n  getContextMenuItems() {\n    let items = super.getContextMenuItems() ?? [];\n\n    if (this.node instanceof Program) {\n      items.unshift(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Edit...</tspan>`,\n          () => {\n            this.canvas.pushProgram(this.node);\n          }\n        )\n      );\n    }\n\n    return items.length ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Theme } from \"./theme\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { IOConnection } from \"../connections/io_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { Position } from \"../canvas/position\";\nimport { InputSocketComponent } from \"./input\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\nimport { Types } from \"@marco.jacovone/cnodes/lib/core/type\";\n\n/**\n * This class implements a socket representing a Output in the\n * cnodes world\n */\nexport class OutputSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  /** A reference to the output name element, if there is one */\n  #outputNameElement = null;\n\n  /** A reference to the label element, if there is one */\n  #labelElement = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n\n    this.#socketSymbol.setAttribute(\"cx\", 0);\n    this.#socketSymbol.setAttribute(\"cy\", 0);\n    this.#socketSymbol.setAttribute(\"r\", Theme.current.NODE_IO_POINT_RADIUS);\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_IO_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_IO_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n\n    let textOutputNameElem = null;\n\n    /*\n     * If this socket can edit name, we create an output element for\n     * this name, otherwise, we create a label\n     */\n    if (this.socket.canEditName) {\n      textOutputNameElem = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      textOutputNameElem.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: left;\n        line-height: 30px;\n        user-select: none;\n        pointer-events: auto;\n      `;\n\n      textOutputNameElem.setAttribute(\"x\", 0);\n      textOutputNameElem.setAttribute(\"y\", 0);\n      textOutputNameElem.setAttribute(\n        \"transform\",\n        `translate(${-Theme.current.NODE_WIDTH / 2}, ${-15})`\n      );\n      textOutputNameElem.setAttribute(\n        \"width\",\n        Theme.current.NODE_WIDTH / 2 - 15\n      );\n      textOutputNameElem.setAttribute(\"height\", 30);\n\n      this.#outputNameElement = document.createElement(\"input\");\n      this.#outputNameElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        width: ${\n          Theme.current.NODE_WIDTH / 2 - 25\n        }px; // 5px less than foreignObject\n        height: ${20}px;\n        border: 0;\n        padding: 2px;\n        margin: 2px;\n        text-align: right\n      `;\n\n      this.#outputNameElement.addEventListener(\"keyup\", (e) => {\n        this.socket.name = e.target.value;\n      });\n\n      this.#outputNameElement.setAttribute(\"value\", this.socket.name);\n      this.#outputNameElement.setAttribute(\"type\", \"text\");\n\n      textOutputNameElem.appendChild(this.#outputNameElement);\n    } else {\n      this.#labelElement = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      this.#labelElement.style = `\n        font: ${Theme.current.NODE_IO_NAME_FONT}; \n        color: ${Theme.current.NODE_IO_NAME_COLOR}; \n        text-align: right;\n        width: ${Theme.current.NODE_WIDTH - 30}px;\n        height: 30px;\n        line-height: 30px;\n        user-select: none;\n        `;\n\n      this.#labelElement.innerHTML = `${this.socket.name}`;\n\n      this.#labelElement.setAttribute(\"x\", 0);\n      this.#labelElement.setAttribute(\"y\", 0);\n      this.#labelElement.setAttribute(\n        \"transform\",\n        `translate(${-Theme.current.NODE_WIDTH + 15}, ${-15})`\n      );\n      this.#labelElement.setAttribute(\"width\", Theme.current.NODE_WIDTH - 30);\n      this.#labelElement.setAttribute(\"height\", 30);\n    }\n\n    let outputElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    outputElem.setAttribute(\"x\", 0);\n    outputElem.setAttribute(\"y\", 0);\n    outputElem.appendChild(this.#socketSymbol);\n\n    if (this.socket.canEditName) {\n      outputElem.appendChild(textOutputNameElem);\n    } else {\n      outputElem.appendChild(this.#labelElement);\n    }\n\n    return outputElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // if there is another connection for the target component,\n    // delete the oldest one\n    if (socketComp.isConnected) {\n      this.canvas.removeConnection(\n        this.canvas.getConnectionsFor(socketComp)[0]\n      );\n    }\n\n    // This creates the connection and connects sockets\n    new IOConnection(this, socketComp, this.canvas);\n  }\n\n  /**\n   * Query if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return (\n      socketComp instanceof InputSocketComponent &&\n      this.socket.node.canBeConnected(this.socket, socketComp.socket)\n    );\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return 1;\n  }\n\n  /**\n   * This socket is a multi-connection socket. This means that\n   * many sockets can be connected to it\n   */\n  get hasSingleConnection() {\n    return false;\n  }\n\n  /**\n   * Update the component element according to x and y local coordinates,\n   * if this component is a child component, coordinates in canvas space\n   * are computed. In addition, this override will reflect the status of the\n   * socket by change the socket symbol according to the type\n   */\n  updateSVGElement() {\n    super.updateSVGElement();\n\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      CnodesSocketComponent.getColorForType(this.socket.type)\n    );\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let inp of n.inputs) {\n            // Create an item only if the input in \"compatible\" with this output\n            if (this.socket.node.canBeConnected(this.socket, inp)) {\n              items.push(\n                new MenuItem(\n                  `\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                    ${nodeDef.name}.\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" fill=\"${CnodesSocketComponent.getColorForType(\n                    inp.type\n                  )}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                    ${inp.name}\n                  </tspan>\n                  <tspan alignment-baseline=\"middle\" style=\"${\n                    Theme.current.MENU_ITEM_CATEGORY_FONT\n                  }\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                    ${nodeDef.category}\n                  </tspan>\n                  `,\n                  (x, y) => {\n                    // create the node and return the specific socket component to\n                    // the context menu client\n                    let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                    node.pos = new Position(x, y);\n                    // Return the connected component instead\n                    return inp.__comp;\n                  },\n                  `${nodeDef.name}.${inp.name} ${nodeDef.category}`\n                )\n              );\n            }\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conns = this.canvas.getConnectionsFor(this);\n    if (conns.length > 0) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`,\n          () => {\n            for (let c of conns) {\n              // Disconnect this socket\n              this.canvas.removeConnection(c);\n              this.socket.disconnect(c.target);\n            }\n          }\n        )\n      );\n    }\n    if (this.socket.node.canRemoveOutput(this.socket)) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Delete output</tspan>`,\n          () => {\n            // First, disconnect all peers\n            let conns = this.canvas.getConnectionsFor(this);\n            if (conns.length > 0) {\n              for (let c of conns) {\n                this.canvas.removeConnection(c);\n                this.socket.disconnect(c.target);\n              }\n            }\n            this.socket.node.removeOutput(this.socket);\n            this.parent.removeComponent(this);\n            this.parent.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    if (this.socket.canEditType) {\n      items.push(\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_NUMBER_COLOR}\">NUMBER</tspan>\n          `,\n          () => {\n            this.socket.type = Types.NUMBER;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_STRING_COLOR}\">STRING</tspan>\n          `,\n          () => {\n            this.socket.type = Types.STRING;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_BOOLEAN_COLOR}\">BOOLEAN</tspan>\n          `,\n          () => {\n            this.socket.type = Types.BOOLEAN;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_ARRAY_COLOR}\">ARRAY</tspan>\n          `,\n          () => {\n            this.socket.type = Types.ARRAY;\n            this.updateSVGElement();\n          }\n        ),\n        new MenuItem(\n          `\n          <tspan alignment-baseline=\"middle\">Set type as</tspan>\n          <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.TYPE_OBJECT_COLOR}\">OBJECT</tspan>\n          `,\n          () => {\n            this.socket.type = Types.OBJECT;\n            this.updateSVGElement();\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { NextSocket } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Theme } from \"./theme\";\nimport { PrevNextConnection } from \"../connections/prevnext_connection\";\nimport { CnodesSocketComponent } from \"./cnodessocket\";\nimport { MenuItem } from \"../canvas/menu\";\nimport { CnodeComponent } from \"./cnode\";\nimport { Position } from \"../canvas/position\";\nimport { CnodesCanvas } from \"./cnodescanvas\";\n\n/**\n * This class implements a socket that represents a Prev object\n * in the cnodes world\n */\nexport class PrevSocketComponent extends CnodesSocketComponent {\n  /** The socket symbol element */\n  #socketSymbol = null;\n\n  constructor(socket) {\n    super(socket);\n    super.setup();\n  }\n\n  /**\n   * Customize the drag element\n   */\n  get dragElement() {\n    return this.#socketSymbol;\n  }\n\n  /**\n   * Lets create the element\n   */\n  createElement() {\n    this.#socketSymbol = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"path\"\n    );\n\n    this.#socketSymbol.setAttribute(\n      \"d\",\n      `\n      M ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${-Theme.current\n        .NODE_PREV_NEXT_POINT_RADIUS}\n      L ${Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      L ${-Theme.current.NODE_PREV_NEXT_POINT_RADIUS} ${\n        Theme.current.NODE_PREV_NEXT_POINT_RADIUS\n      }\n      Z\n      `\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke\",\n      Theme.current.NODE_PREV_NEXT_STROKE_COLOR\n    );\n    this.#socketSymbol.setAttribute(\n      \"stroke-width\",\n      Theme.current.NODE_PREV_NEXT_STROKE_WIDTH\n    );\n    this.#socketSymbol.setAttribute(\n      \"fill\",\n      Theme.current.NODE_PREV_NEXT_FILL_COLOR\n    );\n\n    let labelElem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    labelElem.style = `\n      font: ${Theme.current.NODE_PREV_NEXT_NAME_FONT}; \n      color: ${Theme.current.NODE_PREV_NEXT_NAME_COLOR}; \n      text-align: left;\n      width: ${Theme.current.NODE_WIDTH / 2 - 15}px;\n      height: 30px;\n      line-height: 30px;\n      user-select: none;\n      `;\n\n    labelElem.innerHTML = `${this.socket.name}`;\n\n    labelElem.setAttribute(\"x\", 0);\n    labelElem.setAttribute(\"y\", 0);\n    labelElem.setAttribute(\"transform\", `translate(${15}, ${-15})`);\n    labelElem.setAttribute(\"width\", Theme.current.NODE_WIDTH / 2 - 15);\n    labelElem.setAttribute(\"height\", 30);\n\n    let prevElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    prevElem.setAttribute(\"x\", 0);\n    prevElem.setAttribute(\"y\", 0);\n    prevElem.appendChild(this.#socketSymbol);\n    prevElem.appendChild(labelElem);\n\n    return prevElem;\n  }\n\n  /**\n   * The user has completed a valid connection\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  connectionDone(socketComp) {\n    super.connectionDone(socketComp);\n\n    // if there is another connection for the target component,\n    // delete the oldest one\n    if (socketComp.isConnected) {\n      this.canvas.removeConnection(\n        this.canvas.getConnectionsFor(socketComp)[0]\n      );\n    }\n\n    // This creates the connection and connects sockets\n    new PrevNextConnection(socketComp, this, this.canvas);\n  }\n\n  /**\n   * Quesry if this socket could accept a connection with\n   * a peer socket passed as parmeter\n   * @param {SocketComponent} socketComp Peer socket to connect\n   */\n  canAcceptPeerSocket(socketComp) {\n    return socketComp.socket instanceof NextSocket;\n  }\n\n  /**\n   * Returns the direction of the source point for this socket component:\n   * -1 = Left\n   * 1 = Right\n   */\n  getSourcePointDirection() {\n    return -1;\n  }\n\n  /**\n   * This socket is a multi-connection socket. This means that\n   * many sockets can be connected to it\n   */\n  get hasSingleConnection() {\n    return false;\n  }\n\n  /**\n   * This method is responsible to enumerate all socket of registered nodes\n   * that can enstabilish a valid connection with this socket and construct\n   * a menu items array thst define callback to create the related node and\n   * return the particular socket. It is used by the smart connection process\n   * via the context menu\n   */\n  getRegisteredPossiblePeers() {\n    let items = [];\n    for (let cat of Env.getCategories()) {\n      for (let nodeDef of Env.getCategoryNodes(cat)) {\n        // Instantiate the node to enumerate its sockets\n        let n = Env.getInstance(nodeDef.name);\n        if (n.creatable) {\n          for (let next of n.nexts) {\n            items.push(\n              new MenuItem(\n                `\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_FONT}\" fill=\"${Theme.current.MENU_ITEM_COLOR}\">\n                  ${nodeDef.name}.\n                </tspan>\n                <tspan alignment-baseline=\"middle\" fill=\"${Theme.current.NODE_PREV_NEXT_FILL_COLOR}\" style=\"${Theme.current.MENU_ITEM_FONT}\">\n                  ${next.name}\n                </tspan>\n                <tspan alignment-baseline=\"middle\" style=\"${Theme.current.MENU_ITEM_CATEGORY_FONT}\" fill=\"${Theme.current.MENU_ITEM_CATEGORY_COLOR}\">\n                  ${nodeDef.category}\n                </tspan>\n                `,\n                (x, y) => {\n                  // create the node and return the specific socket component to\n                  // the context menu client\n                  let node = CnodesCanvas.getNodeUIInstance(n, this.canvas);\n                  node.pos = new Position(x, y);\n                  // Return the connected component instead\n                  return next.__comp;\n                },\n                `${nodeDef.name}.${next.name} ${nodeDef.category}`\n              )\n            );\n          }\n        }\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns the array of context menu items. If the component\n   * returns null, no contextual menu is shown\n   */\n  getContextMenuItems() {\n    let items = [];\n\n    let conns = this.canvas.getConnectionsFor(this);\n    if (conns.length > 0) {\n      items.push(\n        new MenuItem(\n          `<tspan alignment-baseline=\"middle\">Disconnect all</tspan>`,\n          () => {\n            for (let c of conns) {\n              // Disconnect this socket\n              this.canvas.removeConnection(c);\n              this.socket.disconnect(c.source);\n            }\n          }\n        )\n      );\n    }\n\n    return items.length > 0 ? items : null;\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * This class contains all values needed to draw all elements\n * of design for cnodes-ui. The user can customize the graphic\n * aspect of element by defining a theme.\n * For exemple to modify the node with you can define your own\n * property inside a custom theme:\n *\n * class MyTheme extends cnui.Theme {\n *   get NODE_WIDTH() {\n *     return 400;\n *   }\n * }\n *\n * Now activate the theme by setting:\n *\n * cnui.Theme.current = new MyTheme();\n *\n */\nexport class Theme {\n  constructor() {}\n\n  // Canvas\n\n  get CANVAS_BACKGROUND_COLOR() {\n    return \"white\";\n  }\n\n  // Node container\n\n  get NODE_WIDTH() {\n    return 200;\n  }\n\n  get NODE_BORDER_RADIUS() {\n    return 15;\n  }\n  get NODE_FILL_COLOR() {\n    return \"#FAD7A0\";\n  }\n  get NODE_FUNCTIONAL_FILL_COLOR() {\n    return \"#C5F0FF\";\n  }\n  get NODE_STROKE_COLOR() {\n    return \"#FFFFFF\";\n  }\n  get NODE_FUNCTIONAL_STROKE_COLOR() {\n    return \"#FFFFFF\";\n  }\n  get NODE_STROKE_WIDTH() {\n    return 3;\n  }\n\n  get NODE_TITLE_COLOR() {\n    return \"brown\";\n  }\n  get NODE_FUNCTIONAL_TITLE_COLOR() {\n    return \"#069DD1\";\n  }\n  get NODE_TITLE_FONT() {\n    return \"bold 18px verdana\";\n  }\n\n  get NODE_SYMBOL_STROKE_WIDTH() {\n    return 3;\n  }\n  get NODE_SYMBOL_STROKE_COLOR() {\n    return \"#FEF9E7\";\n  }\n  get NODE_SYMBOL_FILL_COLOR() {\n    return \"#FEF9E7\";\n  }\n\n  get NODE_SIGN_COLOR() {\n    return \"#31A200\";\n  }\n\n  get NODE_FUNCTIONAL_SIGN_COLOR() {\n    return \"#008EBF\";\n  }\n\n  // Sockets\n\n  get NODE_PREV_NEXT_STROKE_WIDTH() {\n    return 2;\n  }\n  get NODE_PREV_NEXT_STROKE_COLOR() {\n    return \"#31A200\";\n  }\n  get NODE_PREV_NEXT_FILL_COLOR() {\n    return \"#31A200\";\n  }\n  get NODE_PREV_NEXT_NAME_FONT() {\n    return \"bold 11px verdana\";\n  }\n  get NODE_PREV_NEXT_NAME_COLOR() {\n    return \"bold 11px black\";\n  }\n  get NODE_PREV_NEXT_POINT_RADIUS() {\n    return 8;\n  }\n\n  get NODE_IO_STROKE_WIDTH() {\n    return 4;\n  }\n  get NODE_IO_STROKE_COLOR() {\n    return \"white\";\n  }\n  // The color fill is based on socket type\n  // get NODE_IO_FILL_COLOR() {\n  //   return \"#008EBF\";\n  // }\n  get NODE_IO_NAME_FONT() {\n    return \"bold 11px verdana\";\n  }\n  get NODE_IO_NAME_COLOR() {\n    return \"bold 11px black\";\n  }\n  get NODE_IO_POINT_RADIUS() {\n    return 10;\n  }\n\n  // IO Connections\n\n  get CONNECTION_TEMP_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_TEMP_INVALID_COLOR() {\n    return \"red\";\n  }\n  get CONNECTION_TEMP_VALID_COLOR() {\n    return \"gray\";\n  }\n  get CONNECTION_TEMP_COLOR() {\n    return \"#DDDDDD\";\n  }\n  get CONNECTION_IO_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_IO_COLOR() {\n    return \"#008EBF\";\n  }\n  get CONNECTION_PREV_NEXT_WIDTH() {\n    return 4;\n  }\n  get CONNECTION_PREV_NEXT_COLOR() {\n    return \"#31A200\";\n  }\n\n  // Menu\n\n  get MENU_MIN_WIDTH() {\n    return 200;\n  }\n  get MENU_BORDER_RADIUS() {\n    return 10;\n  }\n  get MENU_FILL_COLOR() {\n    return \"#F3F3F3\";\n  }\n  get MENU_STROKE_COLOR() {\n    return \"#EEEEEE\";\n  }\n  get MENU_STROKE_WIDTH() {\n    return 2;\n  }\n  get MENU_ITEM_HEIGHT() {\n    return 33;\n  }\n  get MENU_ITEM_FONT() {\n    return \"font: bold 14px sans-serif\";\n  }\n  get MENU_ITEM_CATEGORY_FONT() {\n    return \"font: bold 10px sans-serif\";\n  }\n  get MENU_ITEM_COLOR() {\n    return \"black\";\n  }\n  get MENU_ITEM_CATEGORY_COLOR() {\n    return \"lightgray\";\n  }\n  get MENU_ITEM_HIGHLIGHT() {\n    return \"white\";\n  }\n  get MENU_SEARCH_FONT() {\n    return \"bold 11px verdana\";\n  }\n\n  get TYPE_ARRAY_COLOR() {\n    return \"orange\";\n  }\n  get TYPE_OBJECT_COLOR() {\n    return \"#008EBF\";\n  }\n  get TYPE_NUMBER_COLOR() {\n    return \"green\";\n  }\n  get TYPE_STRING_COLOR() {\n    return \"#CB4335\";\n  }\n  get TYPE_BOOLEAN_COLOR() {\n    return \"#F5B7B1\";\n  }\n  get TYPE_ANY_COLOR() {\n    return \"#d9d9d9\";\n  }\n\n  static current = new Theme();\n}\n\n/** Default Light Theme */\nexport const defaultLight = new Theme();\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"../canvas/position\";\nimport { CnodesConnection } from \"../components/cnodesconnection\";\nimport { CnodesSocketComponent } from \"../components/cnodessocket\";\nimport { Theme } from \"../components/theme\";\n\n/**\n * This class implements a connection for Input->Output connection\n * in the cnodes world. It embed both source and target sockets that\n * must be of type InputSocketComponent and OutputSocketComponent, and manages\n * the connection status of the embedded cnodes's socket\n */\nexport class IOConnection extends CnodesConnection {\n  constructor(source, target, canvas) {\n    super(source, target, canvas);\n  }\n\n  /**\n   * Update the aspect of the connection\n   */\n  updateSVGElement() {\n    let sourcePoint = new Position(this.source.absPos.x, this.source.absPos.y);\n    let targetPoint = new Position(\n      this.target.absPos.x - Theme.current.NODE_IO_POINT_RADIUS,\n      this.target.absPos.y\n    );\n\n    let cpXDistance = Math.max(\n      0.8 * Math.abs(sourcePoint.x - targetPoint.x),\n      Math.min(Math.abs(sourcePoint.y - targetPoint.y), 100)\n    );\n    let cp1 = sourcePoint.add(\n      new Position(cpXDistance, -0.3 * (sourcePoint.y - targetPoint.y))\n    );\n    let cp2 = targetPoint.add(\n      new Position(-cpXDistance, 0.3 * (sourcePoint.y - targetPoint.y))\n    );\n\n    this.connectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.connectionEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.CONNECTION_IO_WIDTH\n    );\n    this.connectionEl.setAttribute(\n      \"stroke\",\n      CnodesSocketComponent.getColorForType(\n        this.getRelevantType(this.source.socket.type, this.target.socket.type)\n      )\n    );\n    this.connectionEl.setAttribute(\n      \"marker-end\",\n      `url(#io-arrow-${this.getRelevantType(\n        this.source.socket.type,\n        this.target.socket.type\n      )})`\n    );\n    this.connectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Position } from \"../canvas/position\";\nimport { CnodesConnection } from \"../components/cnodesconnection\";\nimport { Theme } from \"../components/theme\";\n\n/**\n * This class implements a connection for Input->Output connection\n * in the cnodes world. It embed both source and target sockets that\n * must be of type InputSocketComponent and OutputSocketComponent, and manages\n * the connection status of the embedded cnodes's socket\n */\nexport class PrevNextConnection extends CnodesConnection {\n  constructor(source, target, canvas, connect = true) {\n    super(source, target, canvas);\n  }\n\n  /**\n   * Update the aspect of the connection\n   */\n  updateSVGElement() {\n    let sourcePoint = new Position(this.source.absPos.x, this.source.absPos.y);\n    let targetPoint = new Position(\n      this.target.absPos.x - Theme.current.NODE_PREV_NEXT_POINT_RADIUS,\n      this.target.absPos.y\n    );\n\n    let cpXDistance = Math.max(\n      0.8 * Math.abs(sourcePoint.x - targetPoint.x),\n      Math.min(Math.abs(sourcePoint.y - targetPoint.y), 100)\n    );\n    let cp1 = sourcePoint.add(\n      new Position(cpXDistance, -0.3 * (sourcePoint.y - targetPoint.y))\n    );\n    let cp2 = targetPoint.add(\n      new Position(-cpXDistance, 0.3 * (sourcePoint.y - targetPoint.y))\n    );\n\n    this.connectionEl.setAttribute(\n      \"d\",\n      `\n      M ${sourcePoint.x} ${sourcePoint.y}\n      C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${targetPoint.x} ${targetPoint.y}\n    `\n    );\n\n    this.connectionEl.setAttribute(\n      \"stroke-width\",\n      Theme.current.CONNECTION_PREV_NEXT_WIDTH\n    );\n    this.connectionEl.setAttribute(\n      \"stroke\",\n      Theme.current.CONNECTION_PREV_NEXT_COLOR\n    );\n    this.connectionEl.setAttribute(\"marker-end\", \"url(#prevnext-arrow)\");\n    this.connectionEl.setAttribute(\"fill\", \"transparent\");\n  }\n}\n","/**\n * cnodes-ui\n *\n * A GUI for cnodes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Canvas } from \"./canvas/canvas\";\nimport { Component } from \"./canvas/component\";\nimport { Position } from \"./canvas/position\";\nimport { CnodeComponent } from \"./components/cnode\";\nimport { CnodeProgramComponent } from \"./components/nodes/cnodeprogram\";\nimport { Theme, defaultLight } from \"./components/theme\";\nimport { CnodesCanvas } from \"./components/cnodescanvas\";\nimport { Env } from \"@marco.jacovone/cnodes/cnodes\";\nimport { Program } from \"@marco.jacovone/cnodes/lib/core/program\";\n\nexport {\n  Canvas,\n  Component,\n  CnodeComponent,\n  Position,\n  Theme,\n  defaultLight,\n  CnodesCanvas,\n  CnodeProgramComponent,\n};\n\nexport * from \"@marco.jacovone/cnodes/cnodes\";\n\n/**\n * This is the main entrypoint function. You can pass an ID of a\n * DOM element by parameter (tipically a DIV element).\n * For example, having a simple DOM element like\n *\n * <div id=\"mycanvas\" class=\"fullscreen\"></div>\n *\n * You can do\n *\n * <script>\n *  let canvas = cnui.canvas('mycanvas');\n *  let prg = cnui.Env.import(JSON.parse('...'));\n *  canvas.program = prg;\n * </script>\n *\n * @param {string} elId The id of the DOM element you want to become a CNODES-UI canvas\n */\nexport function canvas(elId) {\n  let el = document.getElementById(elId);\n  if (!el) {\n    console.log(`No element with id '${elId}'`);\n    return null;\n  }\n  Env.init();\n  return new CnodesCanvas(el);\n}\n\n// register core custom nodes\nCnodesCanvas.registerNodeUI(new Program(), CnodeProgramComponent.instance);\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n// Export core nodes\nexport * from \"./lib/core/env.js\";\nexport * from \"./lib/core/node.js\";\nexport * from \"./lib/core/program.js\";\nexport * from \"./lib/core/socket.js\";\nexport * from \"./lib/core/type.js\";\nexport * from \"./lib/nodes/call.js\";\nexport * from \"./lib/nodes/console.js\";\nexport * from \"./lib/nodes/fgetvar.js\";\nexport * from \"./lib/nodes/for.js\";\nexport * from \"./lib/nodes/getvar.js\";\nexport * from \"./lib/nodes/if.js\";\nexport * from \"./lib/nodes/setvar.js\";\nexport * from \"./lib/nodes/while.js\";\nexport * from \"./lib/nodes/fif.js\";\n\n// Export boolean nodes\nexport * from \"./lib/nodes/bool/fcompare.js\";\n\n// Export string nodes\nexport * from \"./lib/nodes/string/fsconst.js\";\nexport * from \"./lib/nodes/string/fconcat.js\";\n\n// Export math nodes\nexport * from \"./lib/nodes/math/fnconst.js\";\nexport * from \"./lib/nodes/math/fadd.js\";\nexport * from \"./lib/nodes/math/fdiv.js\";\nexport * from \"./lib/nodes/math/fmul.js\";\nexport * from \"./lib/nodes/math/fsqrt.js\";\nexport * from \"./lib/nodes/math/fmod.js\";\n\n// Export arrays nodes\nexport * from \"./lib/nodes/array/apush.js\";\nexport * from \"./lib/nodes/array/faconst.js\";\nexport * from \"./lib/nodes/array/famake.js\";\nexport * from \"./lib/nodes/array/faget.js\";\nexport * from \"./lib/nodes/array/falength.js\";\nexport * from \"./lib/nodes/array/amap.js\";\nexport * from \"./lib/nodes/array/famap.js\";\nexport * from \"./lib/nodes/array/areduce.js\";\n\n// Export objects nodes\nexport * from \"./lib/nodes/object/fomake.js\";\nexport * from \"./lib/nodes/object/fobreak.js\";\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"./node.js\";\nimport { NextSocket, OutputSocket, InputSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class implements a cnode that is the starting point for a\n * program. The program can be top-level or not\n */\nexport class Enter extends Node {\n  constructor() {\n    super(\"Enter\");\n    this.removable = false;\n    this.creatable = false;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Begin\", this)];\n    this.prev = null;\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Val\").value;\n    this.output(\"Val\").type = this.input(\"Val\").type;\n    return this.getFlowResult(this.next(\"Begin\"));\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function enterNode() {\n  return new Enter();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { program, Program } from \"./program.js\";\nimport { enterNode } from \"./enter.js\";\nimport { exitNode } from \"./exit.js\";\nimport { callNode } from \"../nodes/call.js\";\nimport { consoleNode } from \"../nodes/console.js\";\nimport { fgetvarNode } from \"../nodes/fgetvar.js\";\nimport { forNode } from \"../nodes/for.js\";\nimport { getvarNode } from \"../nodes/getvar.js\";\nimport { setvarNode } from \"../nodes/setvar.js\";\nimport { whileNode } from \"../nodes/while.js\";\nimport { ifNode } from \"../nodes/if.js\";\nimport { apushNode } from \"../nodes/array/apush.js\";\nimport { faconstNode } from \"../nodes/array/faconst.js\";\nimport { famakeNode } from \"../nodes/array/famake.js\";\nimport { fagetNode } from \"../nodes/array/faget.js\";\nimport { falengthNode } from \"../nodes/array/falength.js\";\nimport { faddNode } from \"../nodes/math/fadd.js\";\nimport { fdivNode } from \"../nodes/math/fdiv.js\";\nimport { fmulNode } from \"../nodes/math/fmul.js\";\nimport { fsqrtNode } from \"../nodes/math/fsqrt.js\";\nimport { fequalNode } from \"../nodes/bool/fequal.js\";\nimport { fgtNode } from \"../nodes/bool/fgt.js\";\nimport { fgteNode } from \"../nodes/bool/fgte.js\";\nimport { fltNode } from \"../nodes/bool/flt.js\";\nimport { flteNode } from \"../nodes/bool/flte.js\";\nimport { fnotequalNode } from \"../nodes/bool/fnotequal.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n  Socket,\n} from \"./socket.js\";\nimport { Node } from \"./node.js\";\nimport { fsconstNode } from \"../nodes/string/fsconst.js\";\nimport { fconcatNode } from \"../nodes/string/fconcat.js\";\nimport { fmodNode } from \"../nodes/math/fmod.js\";\nimport { fifNode } from \"../nodes/fif.js\";\nimport { fnconstNode } from \"../nodes/math/fnconst.js\";\nimport { FOMake, fomakeNode } from \"../nodes/object/fomake.js\";\nimport { FOBreak, fobreakNode } from \"../nodes/object/fobreak.js\";\nimport { amapNode } from \"../nodes/array/amap.js\";\nimport { areduceNode } from \"../nodes/array/areduce.js\";\nimport { famapNode } from \"../nodes/array/famap.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class represents a main global environment for cnodes.\n * The class is a \"static\" class that is responible for maintaining a global\n * registry of registered nodes. A node registration is a object with three fields: a node name,\n * a category name and a factory, that returns a new instance for that node.\n * The global Env instance must be initialized one-time by calling the Env.init() method,\n * this method register all built-in nodes. Eventual custom nodes must be registered manually\n * via Env.registerNode(name, category, factory).\n */\nexport class Env {\n  static #nodeRegistry = new Map();\n\n  /**\n   * Initialize the CNodes global environment\n   */\n  static init() {\n    Env.#nodeRegistry = new Map();\n\n    // Core nodes\n\n    Env.registerNode(\"Program\", \"Core\", program);\n    Env.registerNode(\"Call\", \"Core\", callNode);\n    Env.registerNode(\"Console\", \"Core\", consoleNode);\n    Env.registerNode(\"FGetvar\", \"Core\", fgetvarNode);\n    Env.registerNode(\"For\", \"Core\", forNode);\n    Env.registerNode(\"Getvar\", \"Core\", getvarNode);\n    Env.registerNode(\"If\", \"Core\", ifNode);\n    Env.registerNode(\"If (functional)\", \"Core\", fifNode);\n    Env.registerNode(\"Setvar\", \"Core\", setvarNode);\n    Env.registerNode(\"While\", \"Core\", whileNode);\n    Env.registerNode(\"Enter\", \"Core\", enterNode);\n    Env.registerNode(\"Exit\", \"Core\", exitNode);\n\n    // String nodes\n    Env.registerNode(\"FSConst\", \"String\", fsconstNode);\n    Env.registerNode(\"FConcat\", \"String\", fconcatNode);\n\n    // Math nodes\n    Env.registerNode(\"FNConst\", \"Math\", fnconstNode);\n    Env.registerNode(\"FAdd\", \"Math\", faddNode);\n    Env.registerNode(\"FDiv\", \"Math\", fdivNode);\n    Env.registerNode(\"FMod\", \"Math\", fmodNode);\n    Env.registerNode(\"FMul\", \"Math\", fmulNode);\n    Env.registerNode(\"FSqrt\", \"Math\", fsqrtNode);\n\n    // Boolean Nodes\n    Env.registerNode(\"FEqual\", \"Boolean\", fequalNode);\n    Env.registerNode(\"FGT\", \"Boolean\", fgtNode);\n    Env.registerNode(\"FGTE\", \"Boolean\", fgteNode);\n    Env.registerNode(\"FLT\", \"Boolean\", fltNode);\n    Env.registerNode(\"FLTE\", \"Boolean\", flteNode);\n    Env.registerNode(\"FNotEqual\", \"Boolean\", fnotequalNode);\n\n    // Arrays Nodes\n    Env.registerNode(\"APush\", \"Arrays\", apushNode);\n    Env.registerNode(\"FAConst\", \"Arrays\", faconstNode);\n    Env.registerNode(\"FAMake\", \"Arrays\", famakeNode);\n    Env.registerNode(\"FAGet\", \"Arrays\", fagetNode);\n    Env.registerNode(\"FALength\", \"Arrays\", falengthNode);\n    Env.registerNode(\"AMap\", \"Arrays\", amapNode);\n    Env.registerNode(\"FAMap\", \"Arrays\", famapNode);\n    Env.registerNode(\"AReduce\", \"Arrays\", areduceNode);\n\n    // Object Nodes\n    Env.registerNode(\"FOMake\", \"Objects\", fomakeNode);\n    Env.registerNode(\"FOBreak\", \"Objects\", fobreakNode);\n  }\n\n  /**\n   * Register a node type\n   * @param {string} name The name of the node\n   * @param {string} category The category of the node\n   * @param {any} factory A class that instantiate the node\n   */\n  static registerNode(name, category, factory) {\n    Env.#nodeRegistry.set(name, { category: category, factory: factory });\n  }\n\n  /**\n   * Return the list of unique registered categories\n   */\n  static getCategories() {\n    let categoryMap = new Map();\n    Array.from(this.#nodeRegistry.values()).forEach((element) => {\n      categoryMap.set(element.category, 0);\n    });\n    return Array.from(categoryMap.keys());\n  }\n\n  /**\n   * Return an array of registrations for nodes.\n   * Registrations have the sign: {name, category, factory}\n   * @param {string} category The category for which seacrh registrations\n   */\n  static getCategoryNodes(category) {\n    let registrations = [];\n    Array.from(this.#nodeRegistry.entries()).forEach((entry) => {\n      if (entry[1].category === category) {\n        registrations.push({\n          name: entry[0],\n          category: entry[1].category,\n          factory: entry[1].factory,\n        });\n      }\n    });\n    return registrations;\n  }\n\n  /**\n   * Instantiate a node by name\n   * @param {string} name The name of the node\n   */\n  static getInstance(name) {\n    let reg = this.#nodeRegistry.get(name);\n    if (reg) {\n      return reg.factory();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Create helper maker nodes to support user with dealing with\n   * specific object structures. This method accepts optional\n   * options that let you specify what exactly create:\n   * {\n   *   recursive: true,\n   *   fillValues: true,\n   *   forceTypes: true\n   *   editableInputs: true\n   * }\n   *\n   * @param {any} obj The object structure to consider whiel create nodes\n   * @param {any} opts The options on create nodes\n   */\n  static registerMaker(name, obj, opts = {}) {\n    /**\n     * This function will be registered as creator for\n     * instances of the OMake node for the user object\n     */\n    let createMake = function () {\n      let makeNode = new FOMake();\n      makeNode.title = name;\n      makeNode.inputs = [];\n\n      for (let field in obj) {\n        let is = new InputSocket(field, makeNode, Types.ANY, 0);\n\n        if (opts.editableInputs) {\n          is.canEditName = true;\n          is.canEditType = true;\n        }\n\n        switch (typeof obj[field]) {\n          case \"string\":\n            is.type = opts.forceTypes ? Types.STRING : Types.ANY;\n            is.value = opts.fillValues ? obj[field] : \"\";\n            break;\n          case \"number\":\n            is.type = opts.forceTypes ? Types.NUMBER : Types.ANY;\n            is.value = opts.fillValues ? obj[field] : opts.forceTypes ? 0 : \"\";\n            break;\n          case \"boolean\":\n            is.type = opts.forceTypes ? Types.BOOLEAN : Types.ANY;\n            is.value = opts.fillValues\n              ? obj[field]\n              : opts.forceTypes\n              ? false\n              : \"\";\n            break;\n          case \"object\":\n            if (obj[field] instanceof Array) {\n              is.type = opts.forceTypes ? Types.ARRAY : Types.ANY;\n              is.value = opts.fillValues\n                ? obj[field]\n                : opts.forceTypes\n                ? []\n                : \"\";\n            } else if (obj[field] instanceof Object) {\n              is.type = opts.forceTypes ? Types.OBJECT : Types.ANY;\n              is.value = opts.fillValues\n                ? obj[field]\n                : opts.forceTypes\n                ? {}\n                : \"\";\n            } else {\n              throw new Error(\"Unknown field type: \" + field);\n            }\n            break;\n          default:\n            throw new Error(\"Unknown field type: \" + field);\n        }\n        makeNode.inputs.push(is);\n      }\n\n      return makeNode;\n    };\n\n    // Reigister factory objects\n    Env.registerNode(name, \"Custom\", createMake);\n\n    if (opts.recursive) {\n      for (let field in obj) {\n        if (typeof obj[field] === \"object\" && !(obj[field] instanceof Array)) {\n          Env.registerMaker(name + \".\" + field, obj[field], opts);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create helper breaker nodes to support user with dealing with\n   * specific object structures. This method accepts optional\n   * options that let you specify what exactly create:\n   * {\n   *   recursive: true,\n   *   forceTypes: true,\n   *   editableOutputs: true\n   * }\n   *\n   * @param {any} obj The object structure to consider whiel create nodes\n   * @param {any} opts The options on create nodes\n   */\n  static registerBreaker(name, obj, opts = {}) {\n    /**\n     * This function will be registered as creator for\n     * instances of the OBreak node for the user object\n     */\n    let createBreak = function () {\n      let breakNode = new FOBreak();\n      breakNode.title = name;\n      breakNode.outputs = [];\n\n      for (let field in obj) {\n        let os = new OutputSocket(field, breakNode, Types.ANY, 0);\n        if (opts.editableOutputs) {\n          os.canEditName = true;\n          os.canEditType = true;\n        }\n\n        switch (typeof obj[field]) {\n          case \"string\":\n            os.type = opts.forceTypes ? Types.STRING : Types.ANY;\n            break;\n          case \"number\":\n            os.type = opts.forceTypes ? Types.NUMBER : Types.ANY;\n            break;\n          case \"boolean\":\n            os.type = opts.forceTypes ? Types.BOOLEAN : Types.ANY;\n            break;\n          case \"object\":\n            if (obj[field] instanceof Array) {\n              os.type = opts.forceTypes ? Types.ARRAY : Types.ANY;\n            } else if (obj[field] instanceof Object) {\n              os.type = opts.forceTypes ? Types.OBJECT : Types.ANY;\n            } else {\n              throw new Error(\"Unknown field type: \" + field);\n            }\n            break;\n          default:\n            throw new Error(\"Unknown field type: \" + field);\n        }\n        breakNode.outputs.push(os);\n      }\n\n      return breakNode;\n    };\n\n    // Reigister factory objects\n    Env.registerNode(name, \"Custom\", createBreak);\n\n    if (opts.recursive) {\n      for (let field in obj) {\n        if (typeof obj[field] === \"object\" && !(obj[field] instanceof Array)) {\n          Env.registerBreaker(name + \".\" + field, obj[field], opts);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create both helper maker and breaker nodes to support user with dealing with\n   * specific object structures. This method accepts optional\n   * options that let you specify what exactly create:\n   * {\n   *   recursive: true,\n   *   fillValues: true,\n   *   forceTypes: true,\n   *   editableInputs: true\n   *   editableOutputs: true\n   * }\n   *\n   * @param {any} obj The object structure to consider whiel create nodes\n   * @param {any} opts The options on create nodes\n   */\n  static registerObject(name, obj, opts = {}) {\n    Env.registerMaker(\"Make \" + name, obj, opts);\n    Env.registerBreaker(\"Break \" + name, obj, opts);\n  }\n\n  /**\n   * Creates and returns a JSON representation of the entire program\n   * @param {Program} program The program to export\n   */\n  static export(program) {\n    let exp = {\n      id: program.id,\n      version: Program.version,\n      lastNodeIndex: Node.lastNodeIdIndex,\n      lastSocketIndex: Socket.lastSocketIdIndex,\n      enter: program.enter.id,\n      exit: program.exit.id,\n      nodes: [],\n      connections: [],\n    };\n\n    for (let node of program.nodes) {\n      let nodeExp = {\n        id: node.id,\n        name: node.name,\n        title: node.title,\n        functional: node.functional,\n        meta: node.meta,\n        program: node instanceof Program ? Env.export(node) : undefined,\n        inputs: node.inputs.map((inp) => {\n          return {\n            id: inp.id,\n            name: inp.name,\n            node: null,\n            type: inp.type,\n            value: inp.value,\n            canEditName: inp.canEditName,\n            peer: null,\n          };\n        }),\n        outputs: node.outputs.map((outp) => {\n          return {\n            id: outp.id,\n            name: outp.name,\n            node: null,\n            type: outp.type,\n            value: outp.value,\n            cached: outp.cached,\n            canEditName: outp.canEditName,\n            peers: [],\n          };\n        }),\n        prev: !node.prev\n          ? null\n          : {\n              id: node.prev.id,\n              name: node.prev.name,\n              node: null,\n              peers: [],\n            },\n        nexts: node.nexts.map((next) => {\n          return {\n            id: next.id,\n            name: next.name,\n            node: null,\n            peer: null,\n          };\n        }),\n      };\n\n      exp.nodes.push(nodeExp);\n    }\n\n    /**\n     * Define a inner-function that prevent duplicates connections\n     * @param {any} connection The connection to push\n     */\n    function pushConnection(connection) {\n      if (\n        exp.connections.findIndex(\n          (c) =>\n            c.type === connection.type &&\n            c.sourceNode === connection.sourceNode &&\n            c.sourceSocket === connection.sourceSocket &&\n            c.targetNode === connection.targetNode &&\n            c.targetSocket === connection.targetSocket\n        ) === -1\n      ) {\n        exp.connections.push(connection);\n      }\n    }\n\n    for (let node of program.nodes) {\n      if (node.prev && node.prev.peers && node.prev.peers.length > 0) {\n        for (let peer of node.prev.peers) {\n          let connectionExp = {\n            type: \"pn\",\n            sourceNode: peer.node.id,\n            sourceSocket: peer.id,\n            targetNode: node.id,\n            targetSocket: node.prev.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n      for (let inp of node.inputs) {\n        if (inp.peer) {\n          let connectionExp = {\n            type: \"io\",\n            sourceNode: inp.peer.node.id,\n            sourceSocket: inp.peer.id,\n            targetNode: node.id,\n            targetSocket: inp.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n      for (let outp of node.outputs) {\n        for (let peer of outp.peers) {\n          if (peer) {\n            let connectionExp = {\n              type: \"io\",\n              sourceNode: node.id,\n              sourceSocket: outp.id,\n              targetNode: peer.node.id,\n              targetSocket: peer.id,\n            };\n            pushConnection(connectionExp);\n          }\n        }\n      }\n      for (let next of node.nexts) {\n        if (next.peer) {\n          let connectionExp = {\n            type: \"pn\",\n            sourceNode: node.id,\n            sourceSocket: next.id,\n            targetNode: next.peer.node.id,\n            targetSocket: next.peer.id,\n          };\n          pushConnection(connectionExp);\n        }\n      }\n    }\n\n    return exp;\n  }\n\n  /**\n   * Create a program instance based on export data created with export() method\n   * @param {any} data A object with the export data format\n   */\n  static import(data) {\n    if (data.version !== 1) {\n      throw new Error(\"Imported data must have version 1\");\n    }\n\n    let p = new Program();\n\n    // Removes enter and exit auto-nodes, these\n    // will be re-created by import procedure\n    p.removeNode(p.enter);\n    p.removeNode(p.exit);\n\n    Program.version = data.version;\n\n    // Now import nodes without connections\n    for (let nodeData of data.nodes) {\n      let node;\n\n      // If this node is a program node, let the import\n      // procedure to create the node\n      if (nodeData.program) {\n        node = Env.import(nodeData.program);\n      } else {\n        // Otherwise import the node\n        node = Env.getInstance(nodeData.name);\n      }\n      // Delete default sockets (created by getInstance())\n      node.inputs = [];\n      node.outputs = [];\n      node.prev = null;\n      node.nexts = [];\n\n      if (!node) {\n        throw new Error(`Node type '${nodeData.name}' is not registered`);\n      }\n      node.title = nodeData.title;\n      node.id = nodeData.id;\n      node.functional = nodeData.functional;\n      node.meta = nodeData.meta;\n      for (let inpData of nodeData.inputs) {\n        let inp = new InputSocket(\n          inpData.name,\n          node,\n          inpData.type,\n          inpData.value\n        );\n        inp.id = inpData.id;\n        inp.canEditName = inpData.canEditName;\n        node.inputs.push(inp);\n      }\n      for (let outpData of nodeData.outputs) {\n        let outp = new OutputSocket(\n          outpData.name,\n          node,\n          outpData.type,\n          outpData.value,\n          outpData.cached\n        );\n        outp.canEditName = outpData.canEditName;\n        outp.id = outpData.id;\n        node.outputs.push(outp);\n      }\n      if (nodeData.prev) {\n        let prev = new PrevSocket(nodeData.prev.name, node);\n        prev.id = nodeData.prev.id;\n        node.prev = prev;\n      }\n      for (let nextData of nodeData.nexts) {\n        let next = new NextSocket(nextData.name, node);\n        next.id = nextData.id;\n        node.nexts.push(next);\n      }\n\n      p.addNode(node);\n    }\n\n    p.enter = p.nodes.find((n) => n.id === data.enter);\n    p.exit = p.nodes.find((n) => n.id === data.exit);\n\n    // Now import connections\n    for (let connectionData of data.connections) {\n      let sourceNode = p.nodes.find((n) => n.id === connectionData.sourceNode);\n      let targetNode = p.nodes.find((n) => n.id === connectionData.targetNode);\n\n      let sourceSocket =\n        connectionData.type === \"pn\"\n          ? sourceNode.nexts.find((n) => n.id === connectionData.sourceSocket)\n          : sourceNode.outputs.find(\n              (o) => o.id === connectionData.sourceSocket\n            );\n      let targetSocket =\n        connectionData.type === \"pn\"\n          ? targetNode.prev\n          : targetNode.inputs.find((i) => i.id === connectionData.targetSocket);\n\n      sourceSocket.connect(targetSocket);\n    }\n\n    // These two static variable must be assigned at the end because\n    // the new InputSocket(), new OutputSocket(), ... increment it during\n    // the import phase\n    Node.lastNodeIdIndex = data.lastNodeIndex;\n    Socket.lastSocketIdIndex = data.lastSocketIndex;\n\n    return p;\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node, Result } from \"./node.js\";\nimport { PrevSocket, InputSocket, OutputSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This class implements a cnode that is the starting point for a\n * program. The program can be top-level or not\n */\nexport class Exit extends Node {\n  constructor() {\n    super(\"Exit\");\n    this.removable = false;\n    this.creatable = false;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [];\n    this.prev = new PrevSocket(\"End\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Val\").value;\n    this.output(\"Val\").type = this.input(\"Val\").type;\n    return new Result(); // End process\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function exitNode() {\n  return new Exit();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FlowSocket, OutputSocket, Socket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * This is the base node class. A node have some input and output\n * to exchange data with other nodes, some nexts to determine next\n * execution nodes, and a prev to identify the entry point.\n * A node can be functional or iterative. If the node is funcitonal\n * the execution of the process method is repeated each time other\n * nodes read the output values, otherwise output nodes reports\n * the last computed value. Each node has a unique id to identify it\n */\nexport class Node {\n  /** An incremental index to generate unique node IDs */\n  static lastNodeIdIndex = 0;\n\n  /** The internal unique identifier */\n  #id = null;\n\n  /** The internal name of the node */\n  #name = \"\";\n\n  /** The external name of the node */\n  #title = \"\";\n\n  /** Is this node a functional node? */\n  #functional = false;\n\n  /** List of node's inputs */\n  #inputs = [];\n\n  /** List of node's outputs */\n  #outputs = [];\n\n  /** List of node's nexts in execution */\n  #nexts = [];\n\n  /** The execution entry point */\n  #prev = null;\n\n  /** Reference to the enclosing program */\n  #program = null;\n\n  /** Additional info (UIs can write anything to store graphical behaviors) */\n  #meta = null;\n\n  /** Can the node be removed by the user? */\n  #removable = true;\n\n  /** Can the node be created by the user? */\n  #creatable = true;\n\n  /** Can the user add an input? */\n  #canAddInput = false;\n\n  /** Can the user add an output? */\n  #canAddOutput = false;\n\n  /** Can the user add a next? */\n  #canAddNext = false;\n\n  constructor(name, title = name) {\n    this.#name = name;\n    this.#title = title;\n    this.#id = \"NID_\" + Node.lastNodeIdIndex++;\n  }\n\n  get id() {\n    return this.#id;\n  }\n  set id(val) {\n    this.#id = val;\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(val) {\n    this.#name = val;\n  }\n  get title() {\n    return this.#title;\n  }\n  set title(val) {\n    this.#title = val;\n  }\n  get functional() {\n    return this.#functional;\n  }\n  set functional(val) {\n    this.#functional = val;\n  }\n  get inputs() {\n    return this.#inputs;\n  }\n  set inputs(val) {\n    this.#inputs = val;\n  }\n  get outputs() {\n    return this.#outputs;\n  }\n  set outputs(val) {\n    this.#outputs = val;\n  }\n  get nexts() {\n    return this.#nexts;\n  }\n  set nexts(val) {\n    this.#nexts = val;\n  }\n  get prev() {\n    return this.#prev;\n  }\n  set prev(val) {\n    this.#prev = val;\n  }\n  get program() {\n    return this.#program;\n  }\n  set program(val) {\n    this.#program = val;\n  }\n  get removable() {\n    return this.#removable;\n  }\n  set removable(val) {\n    this.#removable = val;\n  }\n  get creatable() {\n    return this.#creatable;\n  }\n  set creatable(val) {\n    this.#creatable = val;\n  }\n  get canAddInput() {\n    return this.#canAddInput;\n  }\n  set canAddInput(val) {\n    this.#canAddInput = val;\n  }\n  get canAddOutput() {\n    return this.#canAddOutput;\n  }\n  set canAddOutput(val) {\n    this.#canAddOutput = val;\n  }\n  get canAddNext() {\n    return this.#canAddNext;\n  }\n  set canAddNext(val) {\n    this.#canAddNext = val;\n  }\n  get meta() {\n    return this.#meta;\n  }\n  set meta(val) {\n    this.#meta = val;\n  }\n\n  /**\n   * Returns the input by name\n   * @param {string} name Name of the input\n   */\n  input(name) {\n    return this.inputs.find((i) => i.name === name);\n  }\n\n  /**\n   * Returns the output by name\n   * @param {string} name The name of the output\n   */\n  output(name) {\n    return this.outputs.find((o) => o.name === name);\n  }\n\n  /**\n   * Returns the next by name\n   * @param {string} name The name of the next\n   */\n  next(name) {\n    if (!name) {\n      return this.nexts[0];\n    }\n    return this.nexts.find((n) => n.name === name);\n  }\n\n  /**\n   * Evaluate all imputs of this node. Inputs are sockets.\n   * If the socket is connected the evaluation will search\n   * for the socket's peer and evaluate the output counterpart\n   * eventually reprocess the output's nod, if the node is\n   * functional\n   */\n  evaluateInputs() {\n    for (let inp of this.inputs) {\n      inp.evaluate();\n    }\n  }\n\n  /**\n   * This is an helper method to construct a Result instance\n   * by name\n   * @param {Socket} socket The Socket on which construct the Result instance\n   */\n  getFlowResult(socket) {\n    if (socket.peer) {\n      return new Result(socket.peer.node);\n    } else {\n      return new Result();\n    }\n  }\n\n  /**\n   * This method disconnect all sockets from the node\n   */\n  disconnectAllSockets() {\n    if (this.#prev) {\n      while (this.#prev.peers.length > 0) {\n        this.#prev.disconnect(this.#prev.peers[0]);\n      }\n    }\n    for (let i of this.#inputs) {\n      if (i.peer) {\n        i.disconnect();\n      }\n    }\n    for (let o of this.#outputs) {\n      while (o.peers.length > 0) {\n        o.peers[0].disconnect();\n      }\n    }\n    for (let n of this.#nexts) {\n      if (n.peer) {\n        n.disconnect();\n      }\n    }\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * Subclass with variable number of input should override this method\n   */\n  addInput() {\n    throw new Error(\"Can't add input!\");\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * Subclass with variable number of input should override this method\n   * @param {*} input The input to remove\n   */\n  removeInput(input) {\n    throw new Error(\"Can't remove input\");\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * Subclass with variable number of input should override this method\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return false;\n  }\n\n  /**\n   * If this.#canAddOutput is true, the user can add an output\n   * Subclass with variable number of output should override this method\n   */\n  addOutput() {\n    throw new Error(\"Can't add output!\");\n  }\n\n  /**\n   * This method removes a specific output from the node, if\n   * this is possible whit this instance\n   * Subclass with variable number of output should override this method\n   * @param {OutputSocket} output The output to remove\n   */\n  removeOutput(output) {\n    throw new Error(\"Can't remove output\");\n  }\n\n  /**\n   * Can this node remove a specific output?\n   * Subclass with variable number of output should override this method\n   * @param {OutputSocket} output The output to remove\n   */\n  canRemoveOutput(input) {\n    return false;\n  }\n\n  /**\n   * This method defines if a particular socket of this node can\n   * be connected to another one, based on sockets type.\n   * Default implementation checks for types of sockets, following the rule:\n   * - if sockets are FlowSockets, return true\n   * - Otherwise if the type of one socket is Types.ANY, return true\n   * - Otherwise if the two types are the same, return true\n   * - Otherwise return false\n   * @param {Socket} thisSocket The instance of socket of this node\n   * @param {Socket} otherSocket The other socket\n   */\n  canBeConnected(thisSocket, otherSocket) {\n    if (\n      thisSocket instanceof FlowSocket &&\n      !(otherSocket instanceof FlowSocket)\n    ) {\n      return false;\n    }\n    if (\n      otherSocket instanceof FlowSocket &&\n      !(thisSocket instanceof FlowSocket)\n    ) {\n      return false;\n    }\n    if (thisSocket instanceof FlowSocket || otherSocket instanceof FlowSocket) {\n      return true;\n    }\n    if (thisSocket.type === Types.ANY || otherSocket.type === Types.ANY) {\n      return true;\n    }\n    if (thisSocket.type === otherSocket.type) {\n      return true;\n    }\n    return false;\n  }\n\n  /** The base version of the node does nothing */\n  process() {\n    return new Result();\n  }\n}\n\n/**\n * The result class used by programs to receive\n * the next \"next\" in the flow\n */\nexport class Result {\n  /** The next node */\n  #next = null;\n\n  constructor(next = null) {\n    this.#next = next;\n  }\n  get next() {\n    return this.#next;\n  }\n  set next(val) {\n    this.#next = val;\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Enter } from \"./enter.js\";\nimport { Exit } from \"./exit.js\";\nimport { Node } from \"./node.js\";\nimport { InputSocket, NextSocket, OutputSocket, PrevSocket } from \"./socket.js\";\nimport { Types } from \"./type.js\";\n\n/**\n * A program is a special node that contains nodes. The program\n * manages the flow of the global execution by starting from the\n * \"Enter\" default, autocreated node, call its process() method and receive the next\n * \"next\". A program also store a global variable space\n */\nexport class Program extends Node {\n  /** Engine version */\n  static version = 1;\n\n  /** The nodes in this program */\n  #nodes = [];\n\n  /** The Enter node */\n  #enter = null;\n\n  /** The Exit node */\n  #exit = null;\n\n  /** The instruction pointer equivalent :) */\n  #currentNode = null;\n\n  /** The variable global space */\n  #vars = new Map();\n\n  constructor() {\n    super(\"Program\");\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0)];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n\n    // Create default enter, exit nodes\n    this.addNode((this.#enter = new Enter())).addNode(\n      (this.#exit = new Exit())\n    );\n  }\n\n  get vars() {\n    return this.#vars;\n  }\n  set vars(val) {\n    this.#vars = val;\n  }\n  get enter() {\n    return this.#enter;\n  }\n  set enter(val) {\n    this.#enter = val;\n  }\n  get exit() {\n    return this.#exit;\n  }\n  set exit(val) {\n    this.#exit = val;\n  }\n  get currentNode() {\n    return this.#currentNode;\n  }\n  set currentNode(val) {\n    this.#currentNode = val;\n  }\n  get nodes() {\n    return this.#nodes;\n  }\n  set nodes(val) {\n    this.#nodes = val;\n  }\n\n  /**\n   * Add a new node to this program\n   * @param {Node} node The node to add\n   */\n  addNode(node) {\n    this.#nodes.push(node);\n\n    // Set this program to the node\n    node.program = this;\n    return this;\n  }\n\n  /**\n   * Removes a node from this program, disconnect all sockets\n   * @param {Node} node The node to remove\n   */\n  removeNode(node) {\n    // Disconnect its sockets\n    node.disconnectAllSockets();\n\n    this.#nodes = this.#nodes.filter((n) => n.id !== node.id);\n    node.program = null;\n    return this;\n  }\n\n  /**\n   * The process method will start from the Enter node and\n   * cycle over nexts returned by the process functions of nodes.\n   * The Program node couldn't be a top-level program, but a sub-nod\n   * of another program. For that reason, the process() method copy the\n   * value of the only input in the Program node to the only one\n   * input of the \"Enter\" forst node.\n   * This is a limitation: The Program node can be actually only 1 input\n   * and only 1 output. At the same, Enter and Exit nodes will have only\n   * 1 input and output respectively.\n   * At the end, the process() methos of the Program node, will copy the\n   * value of the Exit's output to the unique output of the Program node\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Copy input to enter's input\n    this.#enter.input(\"Val\").value = this.input(\"Val\").value;\n    this.#enter.input(\"Val\").type = this.input(\"Val\").type;\n\n    this.processFrom(this.#enter);\n\n    // Copy output to exit's output\n    this.output(\"Val\").value = this.#exit.output(\"Val\").value;\n    this.output(\"Val\").type = this.#exit.output(\"Val\").type;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n\n  /**\n   * Execute a program useng node as starting point\n   * @param {Node} node Starting point node\n   */\n  processFrom(node) {\n    this.currentNode = node;\n    while (this.currentNode !== null) {\n      let result = this.currentNode.process();\n      this.currentNode = result.next;\n    }\n  }\n}\n\n/**\n * A helper function to create the program\n * @param {string} name The name of the program\n */\nexport function program() {\n  return new Program();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Types } from \"./type.js\";\n\n/**\n * A socket is an object that represent an input,\n * output, next or prev for the node\n */\nexport class Socket {\n  /** An incremental index to generate unique socket IDs */\n  static lastSocketIdIndex = 0;\n\n  /** The internal id of the socket */\n  #id = \"\";\n\n  /** The name of this socket */\n  #name = \"\";\n\n  /** The parent node */\n  #node = null;\n\n  /**\n   * Construct a new socket on a node with a given name\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node of the socket\n   */\n  constructor(name, node) {\n    this.#id = \"SID_\" + Socket.lastSocketIdIndex++;\n\n    this.#name = name;\n    this.#node = node;\n  }\n  get id() {\n    return this.#id;\n  }\n  set id(val) {\n    this.#id = val;\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(val) {\n    this.#name = val;\n  }\n  get node() {\n    return this.#node;\n  }\n  set node(val) {\n    this.#node = val;\n  }\n}\n\n/**\n * The value socket represent a input or a output value\n * for the node, so it has a value and a type\n */\nexport class ValueSocket extends Socket {\n  /** The type for the socket's value */\n  #type = Types.NUMBER;\n\n  /** The stored value */\n  #value = 0;\n\n  /**\n   * Some input/output sockets needs to have a name that users can change.\n   * That's because the name of the socket is part of what the user can\n   * choose. Think for example at a node that can make a data structure,\n   * the user will want configure each field of the structure, in terms of\n   * data value and name. The node will have a single output with the structure\n   * as output. In this case the user can select a variable number of input\n   * sockets, and can configure values (or connection) for each input as well\n   * as the name of each socket, that whill be the name of the field in the structure.\n   * This type of socket should be represented as a text field in a UI library.\n   */\n  #canEditName = false;\n\n  /**\n   * Some input/output sockets needs to change their type.\n   * Nodes are responsible to configure this behavior of\n   * sockets during the construction\n   */\n  #canEditType = false;\n\n  /**\n   * Construct a new ValueSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of this socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node);\n    this.type = type;\n    this.value = value;\n  }\n\n  get type() {\n    return this.#type;\n  }\n  set type(val) {\n    this.#type = val;\n  }\n  get value() {\n    return this.#value;\n  }\n  set value(val) {\n    this.#value = val;\n  }\n  get canEditName() {\n    return this.#canEditName;\n  }\n  set canEditName(val) {\n    this.#canEditName = val;\n  }\n  get canEditType() {\n    return this.#canEditType;\n  }\n  set canEditType(val) {\n    this.#canEditType = val;\n  }\n\n  /**\n   * This method evaluates a socket in terms of the real value\n   * that is staying inside. The meaning is different in case of\n   * InputSocket and OutputSocket, that re-defines this method\n   */\n  evaluate() {\n    throw new Error(\"This method must be redefined in a subclass!\");\n  }\n}\n\n/**\n * This is an input socket value for the node, it\n * can have only a peer socket, because its value\n * have to be defined in a deterministic way\n */\nexport class InputSocket extends ValueSocket {\n  /** The only peer socket */\n  #peer = null;\n\n  /**\n   * Construct a new InputSocket\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of the socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0) {\n    super(name, node, type, value);\n  }\n  get peer() {\n    return this.#peer;\n  }\n  set peer(val) {\n    this.#peer = val;\n  }\n\n  /**\n   * Evaluate the socket value. If the socket is connected,\n   * this method goes to the peer socket and take the value.\n   * Else the current socket value remains unchanged\n   */\n  evaluate() {\n    if (this.peer !== null) {\n      this.peer.evaluate(); // OutputSocket\n      this.value = this.peer.value;\n    }\n  }\n\n  /**\n   * Connect this socket to another (output) socket\n   * @param {Socket} socket The output socket to connect\n   */\n  connect(socket) {\n    this.peer = socket;\n    if (socket.peers.find((s) => s === this) === undefined) {\n      socket.peers.push(this);\n    }\n  }\n\n  /**\n   * Disconnects this socket from its peer\n   */\n  disconnect() {\n    if (this.peer) {\n      let index = this.peer.peers.findIndex((s) => s === this);\n      if (index !== -1) {\n        this.peer.peers.splice(index, 1);\n      }\n    }\n    this.peer = null;\n  }\n}\n\n/**\n * This is a output value socket and represent an output\n * value for the node. Output value socket can be connected to\n * many peer input value sockets, because many socket would like\n * to take the value from this.\n */\nexport class OutputSocket extends ValueSocket {\n  /** A list of input value connected sockets */\n  #peers = [];\n\n  /**\n   * This flag indicates that the socket don't try to\n   * cal the process() method of its node upon the\n   * evaluation. Normally, functional nodes have output\n   * sockets not cached, so an evaluation of its values\n   * will result in a call of process() method\n   */\n  #cached = true;\n\n  /**\n   * Construct a new OutputSocket\n   * @param {string} name The name of the socket\n   * @param {Node} node The parent node\n   * @param {Type} type The type of the socket\n   * @param {any} value The default value of the socket\n   */\n  constructor(name, node, type = Types.NUMBER, value = 0, cached) {\n    super(name, node, type, value);\n\n    // default to true if the node is not functional and false\n    // if the node is functional\n    this.#cached = cached ?? !node.functional;\n  }\n  get peers() {\n    return this.#peers;\n  }\n  set peers(val) {\n    this.#peers = val;\n  }\n  get cached() {\n    return this.#cached;\n  }\n  set cached(val) {\n    this.#cached = val;\n  }\n\n  /**\n   * The evaluation of a OutputSocket depends from two factors:\n   * - The node of the socket is functional\n   * - The socket is market to be \"cached\"\n   *\n   * If the parent node is not functional, simply does nothing, because\n   * the value of this socket have to be unchanged from mthe last process\n   * call\n   * Otherwise, if the node is functional, we have to check if this particular\n   * socket is marked to be \"cached\", in that case, the value have to remain unchanged,\n   * otherwise the process() method have to be called again\n   */\n  evaluate() {\n    if (this.node?.functional && !this.cached) {\n      this.node.process();\n    }\n  }\n\n  /**\n   * Connects this socket to a input socket\n   * @param {Socket} socket Socket to connect to\n   */\n  connect(socket) {\n    if (this.peers.find((s) => s === socket) === undefined) {\n      this.peers.push(socket);\n    }\n    socket.peer = this;\n  }\n\n  /**\n   * Disconnect this socket from a specific input peer\n   * @param {Socket} socket The socket to disconnect\n   */\n  disconnect(socket) {\n    let index = this.peers.findIndex((s) => s === socket);\n    if (index !== undefined) {\n      this.peers.splice(index, 1);\n      socket.peer = null;\n    }\n  }\n}\n\n/**\n * A flow socket is a socket to connect two nodes in\n * terms of execution flow\n */\nexport class FlowSocket extends Socket {\n  /**\n   * Construct a new FlowSocket\n   * @param {sring} name Name of the socket\n   * @param {Node} node The parent node\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n}\n\n/**\n * This class representa a prev socket, a socket that\n * can be connected to other nexts sockets. The prev socket\n * cab have many peer (next) socket because the execution\n * can come from anywhere in the program\n */\nexport class PrevSocket extends FlowSocket {\n  /** List of (next) peer sockets */\n  #peers = [];\n\n  /**\n   * Construct a new PrevSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node Parent node\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n  get peers() {\n    return this.#peers;\n  }\n  set peers(val) {\n    this.#peers = val;\n  }\n\n  /**\n   * Connect this socket to a next socket\n   * @param {Socket} socket The next socket to connect\n   */\n  connect(socket) {\n    if (this.peers.find((s) => s === socket) === undefined) {\n      this.peers.push(socket);\n    }\n    socket.peer = this;\n  }\n\n  /**\n   * Disconnect this socket from a next socket\n   * @param {Socket} socket The next socket to disconnect\n   */\n  disconnect(socket) {\n    let index = this.peers.findIndex((s) => s === socket);\n    if (index !== undefined) {\n      this.peers.splice(index, 1);\n      socket.peer = null;\n    }\n  }\n}\n\n/**\n * This class represents a socket to redirect the flow\n * to another node via a node's prev socket. This socket can\n * be connected to only one (prev) socket, because the program\n * flow have to be well defined\n */\nexport class NextSocket extends FlowSocket {\n  /** The peer (prev) socket */\n  #peer = null;\n\n  /**\n   * Construct a new NextSocket\n   * @param {string} name Name of the socket\n   * @param {Node} node The parent node of the socket\n   */\n  constructor(name, node) {\n    super(name, node);\n  }\n  get peer() {\n    return this.#peer;\n  }\n  set peer(val) {\n    this.#peer = val;\n  }\n\n  /**\n   * Connect this socket to another (prev) socket\n   * @param {Socket} socket The prev socket to connect to\n   */\n  connect(socket) {\n    this.peer = socket;\n    if (socket.peers.find((s) => s === this) === undefined) {\n      socket.peers.push(this);\n    }\n  }\n\n  /**\n   * Disconnect this socket from the peer\n   */\n  disconnect() {\n    if (this.peer) {\n      let index = this.peer.peers.findIndex((s) => s === this);\n      if (index !== -1) {\n        this.peer.peers.splice(index, 1);\n      }\n      this.peer = null;\n    }\n  }\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\n/**\n * Possible types for values\n */\nexport const Types = {\n  NUMBER: \"number\",\n  STRING: \"string\",\n  BOOLEAN: \"boolean\",\n  OBJECT: \"object\",\n  ARRAY: \"array\",\n  ANY: \"any\",\n};\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that map an array to another\n * by passing all items in sequence\n */\nexport class AMap extends Node {\n  constructor() {\n    super(\"AMap\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Mapped\", this, Types.ANY),\n    ];\n    this.outputs = [\n      new OutputSocket(\"Array\", this, Types.ARRAY, [], false),\n      new OutputSocket(\"Item\", this, Types.ANY, \"\", true), // cached\n      new OutputSocket(\"Index\", this, Types.NUMBER, 0, true), // cached\n    ];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.input(\"Array\").evaluate();\n    let arr = this.input(\"Array\").value;\n    let outArr = [...arr];\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      outArr = arr.map((val, index) => {\n        // Set the \"Index\" output\n        this.output(\"Index\").value = index;\n        // Set the \"Item\" output\n        this.output(\"Item\").value = val;\n\n        // If there's a node connected to the \"Item\" next socket...\n        if (\n          this.next(\"Do\").peer !== null &&\n          this.next(\"Do\").peer.node !== null\n        ) {\n          // Execute a sub program beginning on that node\n          this.program.processFrom(this.next(\"Do\").peer.node);\n        }\n\n        // Now evaluate the \"Mapped\" input\n        this.input(\"Mapped\").evaluate();\n        return this.input(\"Mapped\").value;\n      });\n    }\n\n    // Compute result\n    this.output(\"Array\").value = outArr;\n\n    if (!this.functional) {\n      // Set the \"Array\" output\n      return this.getFlowResult(this.next(\"Out\"));\n    }\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function amapNode() {\n  return new AMap();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that pushes a value\n * into an array\n */\nexport class APush extends Node {\n  constructor() {\n    super(\"APush\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Val\", this, Types.ANY),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY)];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n    let val = this.input(\"Val\").value;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      arr.push(val);\n      this.output(\"Val\").value = arr;\n    }\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function apushNode() {\n  return new APush();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a cnode that reduces an array to\n * a value\n */\nexport class AReduce extends Node {\n  constructor() {\n    super(\"AReduce\");\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY),\n      new InputSocket(\"Acc0\", this, Types.ANY),\n      new InputSocket(\"Acc\", this, Types.ANY),\n    ];\n    this.outputs = [\n      new OutputSocket(\"Val\", this, Types.ANY),\n      new OutputSocket(\"Item\", this, Types.ANY),\n      new OutputSocket(\"Acc\", this, Types.ANY),\n      new OutputSocket(\"Index\", this, Types.NUMBER),\n    ];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.input(\"Array\").evaluate();\n    let arr = this.input(\"Array\").value;\n    let acc0 = this.input(\"Acc0\").value;\n    let reduced;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      reduced = arr.reduce((acc, val, index) => {\n        // Set the \"Index\" output\n        this.output(\"Index\").value = index;\n        // Set the \"Item\" output\n        this.output(\"Item\").value = val;\n        // Set the \"Acc\" output\n        this.output(\"Acc\").value = acc;\n\n        // If there's a node connected to the \"Item\" next socket...\n        if (\n          this.next(\"Do\").peer !== null &&\n          this.next(\"Do\").peer.node !== null\n        ) {\n          // Execute a sub program beginning on that node\n          this.program.processFrom(this.next(\"Do\").peer.node);\n        }\n\n        // Now evaluate the \"Mapped\" input\n        this.input(\"Acc\").evaluate();\n        return this.input(\"Acc\").value;\n      }, acc0);\n    }\n\n    // Set the \"Array\" output\n    this.output(\"Val\").value = reduced;\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function areduceNode() {\n  return new AReduce();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an array\n * as a string constant by JSON.parse() the input string.\n */\nexport class FAConst extends Node {\n  constructor() {\n    super(\"FAConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.STRING, \"[0, 1, 2]\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ARRAY, [], false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to an array\n    try {\n      this.output(\"Val\").value = JSON.parse(this.input(\"Val\").value);\n      if (!Array.isArray(this.output(\"Val\").value)) {\n        throw new Error(\n          `The input value (${this.output(\"Val\").value}) is not an array`\n        );\n      }\n    } catch (error) {\n      // TODO: Manage error\n      console.log(error);\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function faconstNode() {\n  return new FAConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for pick\n * a single value from an array\n */\nexport class FAGet extends Node {\n  constructor() {\n    super(\"FAGet\");\n\n    // The node is pure functional\n    this.functional = true;\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Array\", this, Types.ARRAY, 0),\n      new InputSocket(\"Index\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n    let index = parseInt(this.input(\"Index\").value, 10);\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      this.output(\"Val\").value = arr[index];\n    }\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fagetNode() {\n  return new FAGet();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for get\n * the length of an array\n */\nexport class FALength extends Node {\n  constructor() {\n    super(\"FALength\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [new InputSocket(\"Array\", this, Types.ARRAY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = this.input(\"Array\").value;\n\n    if (!Array.isArray(arr)) {\n      // TODO: Manage error\n    } else {\n      this.output(\"Val\").value = arr.length;\n    }\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function falengthNode() {\n  return new FALength();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an array\n * from a list of inputs\n */\nexport class FAMake extends Node {\n  constructor() {\n    super(\"FAMake\");\n    this.canAddInput = true;\n    this.functional = true;\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.ANY, \"\"),\n      new InputSocket(\"1\", this, Types.ANY, \"\"),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ARRAY, [], false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let arr = [];\n\n    arr.push(...this.inputs.map((i) => i.value));\n    this.output(\"Val\").value = arr;\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 1 input\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 0;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.ANY, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function famakeNode() {\n  return new FAMake();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../../core/socket.js\";\nimport { AMap } from \"./amap.js\";\n\n/**\n * This is the functional version of the AMap node\n */\nexport class FAMap extends AMap {\n  constructor(name) {\n    super();\n    this.name = \"FAMap\";\n    this.functional = true;\n    this.nexts = [new NextSocket(\"Do\", this)];\n    this.prev = null;\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function famapNode() {\n  return new FAMap();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * Supported comparision types\n */\nexport const Comparision = {\n  EQUAL: \"equal\",\n  GT: \"gt\",\n  GTE: \"gte\",\n  LT: \"lt\",\n  LTE: \"lte\",\n  NOT_EQUAL: \"not_equal\",\n};\n\n/**\n * This class implements a functional node for compairing numeric values.\n */\nexport class FCompare extends Node {\n  /** Configured comparision for this node */\n  #comparision = Comparision.EQUAL;\n\n  constructor(comparision = Comparision.EQUAL) {\n    super(\"FCompare\");\n    this.#comparision = comparision;\n\n    // The node is pure functional\n    this.functional = true;\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.ANY, 0),\n      new InputSocket(\"Val2\", this, Types.ANY, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.BOOLEAN, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  get comparision() {\n    return this.#comparision;\n  }\n  set comparision(val) {\n    this.#comparision = val;\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    let val1 = this.input(\"Val1\").value;\n    let val2 = this.input(\"Val2\").value;\n\n    let ret;\n    switch (this.comparision) {\n      case Comparision.EQUAL: {\n        ret = val1 === val2;\n        break;\n      }\n      case Comparision.NOT_EQUAL: {\n        ret = val1 !== val2;\n        break;\n      }\n      case Comparision.GT: {\n        ret = val1 > val2;\n        break;\n      }\n      case Comparision.GTE: {\n        ret = val1 >= val2;\n        break;\n      }\n      case Comparision.LT: {\n        ret = val1 < val2;\n        break;\n      }\n      case Comparision.LTE: {\n        ret = val1 <= val2;\n        break;\n      }\n      default: {\n        throw \"Comparision type not valid\";\n      }\n    }\n\n    this.output(\"Val\").value = ret;\n  }\n\n  get comparision() {\n    return this.#comparision;\n  }\n  set comparision(val) {\n    this.#comparision = val;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fcompareNode() {\n  return new FCompare();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of EQUAL\n */\nexport class FEqual extends FCompare {\n  constructor() {\n    super(Comparision.EQUAL);\n    this.name = \"FEqual\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fequalNode() {\n  return new FEqual();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of GT\n */\nexport class FGT extends FCompare {\n  constructor() {\n    super(Comparision.GT);\n    this.name = \"FGT\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fgtNode() {\n  return new FGT();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of GTE\n */\nexport class FGTE extends FCompare {\n  constructor() {\n    super(Comparision.GTE);\n    this.name = \"FGTE\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fgteNode() {\n  return new FGTE();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of FLT\n */\nexport class FLT extends FCompare {\n  constructor() {\n    super(Comparision.LT);\n    this.name = \"FLT\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fltNode() {\n  return new FLT();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of FLTE\n */\nexport class FLTE extends FCompare {\n  constructor() {\n    super(Comparision.LTE);\n    this.name = \"FLTE\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function flteNode() {\n  return new FLTE();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { FCompare } from \"./fcompare.js\";\nimport { Comparision } from \"./fcompare.js\";\n\n/**\n * This class override the FCompare node with a comparision of NOT_EQUAL\n */\nexport class FNotEqual extends FCompare {\n  constructor() {\n    super(Comparision.NOT_EQUAL);\n    this.name = \"FNotEqual\";\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fnotequalNode() {\n  return new FNotEqual();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { NextSocket, PrevSocket } from \"../core/socket.js\";\n\n/**\n * This class implements a subroutine/function call\n */\nexport class Call extends Node {\n  constructor() {\n    super(\"Call\");\n    this.inputs = [];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Call\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n\n    // Execute a sub program beginning on that node\n    this.program.processFrom(this.next(\"Call\").peer.node);\n\n    // Restore the current program's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function callNode() {\n  return new Call();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, NextSocket, PrevSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a cnode that print to the\n * console the input value\n */\nexport class Console extends Node {\n  constructor() {\n    super(\"Console\");\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY)];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n    console.log(this.input(\"Val\").value);\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function consoleNode() {\n  return new Console();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a functional GetVar node,\n * a node to read a variable's value from the global\n * program's space\n */\nexport class FGetvar extends Node {\n  constructor() {\n    super(\"FGetvar\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Name\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\", false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process method\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    this.output(\"Val\").value = this.program.vars.get(varName);\n  }\n}\n\n/**\n * Helper function to create the node\n */\nexport function fgetvarNode() {\n  return new FGetvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a functional conditional node\n */\nexport class FIf extends Node {\n  constructor() {\n    super(\"FIf\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two any inputs\n    this.inputs = [\n      new InputSocket(\"Condition\", this, Types.BOOLEAN, false),\n      new InputSocket(\"True\", this, Types.ANY, 0),\n      new InputSocket(\"False\", this, Types.ANY, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = this.input(\"Condition\").value\n      ? this.input(\"True\").value\n      : this.input(\"False\").value;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fifNode() {\n  return new FIf();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * iterate over a range of integers, like the form\n * for(let i=start; i<end; i++) do();\n */\nexport class For extends Node {\n  constructor() {\n    super(\"For\");\n    this.inputs = [\n      new InputSocket(\"From\", this, Types.NUMBER, 0),\n      new InputSocket(\"To\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Index\", this, Types.NUMBER, 0)];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n\n    // Set the \"Index\" output value to Index\n    this.output(\"Index\").value = parseInt(this.input(\"From\").value);\n\n    // Re evaluate inputs in case of Condition depends on Index output\n    this.evaluateInputs();\n\n    // Let's cycle from \"From\" to \"To\" values\n    for (\n      let index = parseInt(this.input(\"From\").value);\n      index < parseInt(this.input(\"To\").value);\n      index++\n    ) {\n      // Set the \"Index\" output value to Index\n      this.output(\"Index\").value = index;\n\n      // If there's a node connected to the \"Do\" next socket...\n      if (this.next(\"Do\").peer !== null && this.next(\"Do\").peer.node !== null) {\n        // Execute a sub program beginning on that node\n        this.program.processFrom(this.next(\"Do\").peer.node);\n      }\n    }\n\n    // Restore the current program's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function forNode() {\n  return new For();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node to get a variable's value\n * in the program's global space. This node has a functional\n * counterpart naamed FGetvar\n */\nexport class Getvar extends Node {\n  constructor() {\n    super(\"Getvar\");\n    this.inputs = [new InputSocket(\"Name\", this, Types.STRING, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    this.output(\"Val\").value = this.program.vars.get(varName);\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function getvarNode() {\n  return new Getvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket as NextSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * redirect the flow of execution based on the\n * \"condition\" input value\n */\nexport class If extends Node {\n  constructor() {\n    super(\"If\");\n    this.inputs = [new InputSocket(\"Condition\", this, Types.BOOLEAN, false)];\n    this.outputs = [];\n    this.nexts = [new NextSocket(\"Then\", this), new NextSocket(\"Else\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let flow = null;\n    if (this.input(\"Condition\").value) {\n      flow = this.next(\"Then\");\n    } else {\n      flow = this.next(\"Else\");\n    }\n\n    return this.getFlowResult(flow);\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function ifNode() {\n  return new If();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for adding numeric values.\n * Supports a indefinite number of value inputs and one single output\n */\nexport class FAdd extends Node {\n  constructor() {\n    super(\"FAdd\");\n    // The node is pure functional\n    this.functional = true;\n\n    // This node has a variable number of inputs\n    this.canAddInput = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.NUMBER, 0),\n      new InputSocket(\"1\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    let sum = 0;\n    this.evaluateInputs();\n    for (let inp of this.inputs) {\n      sum += parseFloat(inp.value);\n    }\n    this.output(\"Val\").value = sum;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.NUMBER, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function faddNode() {\n  return new FAdd();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for divide numeric values.\n */\nexport class FDiv extends Node {\n  constructor() {\n    super(\"FDiv\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.NUMBER, 0),\n      new InputSocket(\"Val2\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value =\n      parseFloat(this.input(\"Val1\").value) /\n      parseFloat(this.input(\"Val2\").value);\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fdivNode() {\n  return new FDiv();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for modulus (%)\n */\nexport class FMod extends Node {\n  constructor() {\n    super(\"FMod\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"Val1\", this, Types.NUMBER, 0),\n      new InputSocket(\"Val2\", this, Types.NUMBER, 0),\n    ];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value =\n      parseFloat(this.input(\"Val1\").value) %\n      parseFloat(this.input(\"Val2\").value);\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fmodNode() {\n  return new FMod();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for multiply numeric values.\n * Supports a indefinite number of value inputs and one single output\n */\nexport class FMul extends Node {\n  constructor() {\n    super(\"FMul\");\n    // The node is pure functional\n    this.functional = true;\n\n    // This node has a variable number of inputs\n    this.canAddInput = true;\n\n    // Default to two numeric inputs\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.NUMBER, 0),\n      new InputSocket(\"1\", this, Types.NUMBER, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    let mul = 1;\n    this.evaluateInputs();\n    for (let inp of this.inputs) {\n      mul *= parseFloat(inp.value);\n    }\n    this.output(\"Val\").value = mul;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.NUMBER, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fmulNode() {\n  return new FMul();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get return a simple\n * number constant. This is a functional node.\n */\nexport class FNConst extends Node {\n  constructor() {\n    super(\"FNConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, 0)];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = parseFloat(this.input(\"Val\").value);\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fnconstNode() {\n  return new FNConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a functional node for Square Root.\n */\nexport class FSqrt extends Node {\n  constructor() {\n    super(\"FSqrt\");\n\n    // The node is pure functional\n    this.functional = true;\n\n    // Default to one numeric inputs\n    this.inputs = [new InputSocket(\"Val\", this, Types.NUMBER, 0)];\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.NUMBER, 0, false)];\n    this.prev = null;\n    this.nexts = [];\n  }\n\n  /**\n   * The process override\n   */\n  process() {\n    this.evaluateInputs();\n    this.output(\"Val\").value = Math.sqrt(parseFloat(this.input(\"Val\").value));\n  }\n}\n\n/**\n * Helper fuction to create the node\n */\nexport function fsqrtNode() {\n  return new FSqrt();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to break down\n * an object to its fields, or part of them\n */\nexport class FOBreak extends Node {\n  constructor() {\n    super(\"FOBreak\");\n    this.canAddOutput = true;\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.OBJECT, {})];\n\n    this.outputs = [\n      new OutputSocket(\"field1\", this, Types.ANY, \"\", false),\n      new OutputSocket(\"field2\", this, Types.ANY, \"\", false),\n    ];\n\n    // Sets all output as changeable in terms of name\n    for (let o of this.outputs) {\n      o.canEditName = true;\n      o.canEditType = true;\n    }\n\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    for (let o of this.outputs) {\n      o.value = this.input(\"Val\").value[o.name];\n    }\n  }\n\n  /**\n   * If this.#canAddOutput is true, the user can add an output\n   * equal to the (at least one) output that already exists\n   * Subclass with variable number of input should override this method\n   */\n  addOutput() {\n    if (this.canAddOutput) {\n      let o = new OutputSocket(\"\", this, Types.ANY, \"\");\n      o.canEditName = true;\n      o.canEditType = true;\n      this.outputs.push(o);\n    } else {\n      throw new Error(\"Can't add output!\");\n    }\n  }\n\n  /**\n   * This method removes a specific output from the node\n   * @param {OutputSocket} output The output to remove\n   */\n  removeOutput(output) {\n    if (this.canRemoveOutput(output)) {\n      this.outputs = this.outputs.filter((o) => o !== output);\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific output?\n   * There must be at least 1 output\n   * @param {OutputSocket} output The output to remove\n   */\n  canRemoveOutput(output) {\n    return this.outputs.length > 1;\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fobreakNode() {\n  return new FOBreak();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get an object\n * from a list of fields\n */\nexport class FOMake extends Node {\n  constructor() {\n    super(\"FOMake\");\n    this.canAddInput = true;\n    this.functional = true;\n    this.inputs = [\n      new InputSocket(\"field1\", this, Types.ANY, \"\"),\n      new InputSocket(\"field2\", this, Types.ANY, \"\"),\n    ];\n\n    // Sets all input as changeable in terms of name\n    for (let i of this.inputs) {\n      i.canEditName = true;\n      i.canEditType = true;\n    }\n\n    this.outputs = [new OutputSocket(\"Val\", this, Types.OBJECT, {}, false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n    let obj = this.inputs.reduce((acc, val) => {\n      return { ...acc, [val.name]: val.value };\n    }, {});\n\n    this.output(\"Val\").value = obj;\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 1 input\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 0;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * the new input must have this.#canEditName === true.\n   * in this particular case the name is editable, so let the user\n   * to choose and left it blank\n   */\n  addInput() {\n    let is = new InputSocket(\"\", this, Types.ANY, \"\");\n    is.canEditName = true;\n    is.canEditType = true;\n    this.inputs.push(is);\n  }\n\n  /**\n   * This method removes a specific input from the node\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fomakeNode() {\n  return new FOMake();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  PrevSocket,\n  OutputSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node to set a variable\n * value in the program's global space. If the variable\n * don't exists, the processo function will create it\n */\nexport class Setvar extends Node {\n  constructor() {\n    super(\"Setvar\");\n    this.inputs = [\n      new InputSocket(\"Name\", this, Types.STRING, 0),\n      new InputSocket(\"Val\", this, Types.ANY, 0),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.nexts = [new NextSocket(\"Out\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process fmethod\n   */\n  process() {\n    this.evaluateInputs();\n\n    let varName = this.input(\"Name\").value;\n    let varVal = this.input(\"Val\").value;\n    this.program.vars.set(varName, varVal);\n    this.output(\"Val\").value = varVal;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function setvarNode() {\n  return new Setvar();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node that conctas two strings.\n * If other type are passed, these are converted to strings\n */\nexport class FConcat extends Node {\n  constructor() {\n    super(\"FConcat\");\n    this.functional = true;\n    this.canAddInput = true;\n    this.inputs = [\n      new InputSocket(\"0\", this, Types.STRING, \"\"),\n      new InputSocket(\"1\", this, Types.STRING, \"\"),\n    ];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.STRING, \"\", false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    let res = \"\";\n    for (let i of this.inputs) {\n      res += i.value.toString();\n    }\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = res;\n  }\n\n  /**\n   * If this.#canAddInput is true, the user can add an input\n   * equal to the (at least one) input that already exists\n   */\n  addInput() {\n    if (this.canAddInput) {\n      this.inputs.push(new InputSocket(\"\", this, Types.STRING, \"\"));\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't add input!\");\n    }\n  }\n\n  /**\n   * This method removes a specific input from the node, if\n   * this is possible whit this instance\n   * @param {InputSocket} input The input to remove\n   */\n  removeInput(input) {\n    if (this.canRemoveInput(input)) {\n      this.inputs = this.inputs.filter((i) => i !== input);\n\n      // Rename all inputs to its ordinal number in the inputs array\n      for (let [idx, i] of this.inputs.entries()) {\n        i.name = \"\" + idx;\n      }\n    } else {\n      throw new Error(\"Can't remove input\");\n    }\n  }\n\n  /**\n   * Can this node remove a specific input?\n   * In this case, there must be at least 2 inputs\n   * @param {InputsSocket} input The input to remove\n   */\n  canRemoveInput(input) {\n    return this.inputs.length > 2;\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fconcatNode() {\n  return new FConcat();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../../core/node.js\";\nimport { InputSocket, OutputSocket } from \"../../core/socket.js\";\nimport { Types } from \"../../core/type.js\";\n\n/**\n * This class implements a node to get return a simple\n * string constant. This is a functional node.\n */\nexport class FSConst extends Node {\n  constructor() {\n    super(\"FSConst\");\n    this.functional = true;\n    this.inputs = [new InputSocket(\"Val\", this, Types.ANY, \"\")];\n    this.outputs = [new OutputSocket(\"Val\", this, Types.STRING, \"\", false)];\n    this.nexts = [];\n    this.prev = null;\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Convert the constant/input value to a string\n    this.output(\"Val\").value = this.input(\"Val\").value.toString();\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function fsconstNode() {\n  return new FSConst();\n}\n","/**\n * cnodes\n *\n * A representation-agnostic library to define and execute nodes based processes\n * License: MIT\n * Author: Marco Jacovone\n * Year: 2020\n */\n\nimport { Node } from \"../core/node.js\";\nimport {\n  InputSocket,\n  NextSocket,\n  OutputSocket,\n  PrevSocket,\n} from \"../core/socket.js\";\nimport { Types } from \"../core/type.js\";\n\n/**\n * This class implements a node that is able to\n * iterate until a condition become false, like\n * while(condition) do();\n */\nexport class While extends Node {\n  constructor() {\n    super(\"While\");\n    this.inputs = [\n      new InputSocket(\"Index\", this, Types.NUMBER, 0),\n      new InputSocket(\"Condition\", this, Types.BOOLEAN, false),\n    ];\n    this.outputs = [new OutputSocket(\"Index\", this, Types.NUMBER, 0)];\n    this.nexts = [new NextSocket(\"Out\", this), new NextSocket(\"Do\", this)];\n    this.prev = new PrevSocket(\"In\", this);\n  }\n\n  /**\n   * The process function\n   */\n  process() {\n    this.evaluateInputs();\n\n    // Save the current program's node\n    let prevCurrentNode = this.program.currentNode;\n    // A bouns index variable ;-)\n    let index = parseFloat(this.input(\"Index\").value);\n\n    // Set the \"Index\" output value to Index\n    this.output(\"Index\").value = index;\n\n    // Re evaluate inputs in case of Condition depends on Index output\n    this.evaluateInputs();\n\n    // Let's cycle while condition is true\n    while (this.input(\"Condition\").value) {\n      // If there's a node connected to the \"Do\" next socket...\n      if (this.next(\"Do\").peer !== null && this.next(\"Do\").peer.node !== null) {\n        // Set the \"Index\" output value to Index\n        this.output(\"Index\").value = index++;\n\n        // Execute a sub program beginning on that node\n        this.program.processFrom(this.next(\"Do\").peer.node);\n\n        // Re-compute the guard...\n        this.evaluateInputs();\n      }\n    }\n\n    // Restore the currentprogram's node\n    this.program.currentNode = prevCurrentNode;\n\n    return this.getFlowResult(this.next(\"Out\"));\n  }\n}\n\n/**\n * A helper function to create the node\n */\nexport function whileNode() {\n  return new While();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}